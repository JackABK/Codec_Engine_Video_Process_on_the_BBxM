cscope 15 $HOME/ti-dvsdk_dm3730-evm_4_01_00_09/codec-engine_2_26_01_09/examples/ti/sdo/ce/examples/apps/video_copy               0000296487
	@Ori_code/app.c

36 
	~<xdc/°d.h
>

37 
	~<ti/sdo/˚/Engöe.h
>

38 
	~<ti/sdo/˚/oßl/Mem‹y.h
>

41 
	~<ti/sdo/˚/video/viddec.h
>

42 
	~<ti/sdo/˚/video/vidíc.h
>

43 
	~<ti/sdo/˚/åa˚/gt.h
>

45 
	~<°rög.h
>

47 
	~<°dio.h
>

48 
	~<°dlib.h
>

55 #ifde‡
CACHE_ENABLED


61 #i‚de‡
BUFALIGN


62 
	#BUFALIGN
 128

	)

67 
	#BUFALIGN
 
Mem‹y_DEFAULTALIGNMENT


	)

72 
	#NSAMPLES
 1024

	)

73 
	#IFRAMESIZE
 (
NSAMPLES
 * (
I¡8
)Ë

	)

74 
	#EFRAMESIZE
 (
NSAMPLES
 * (
I¡8
)Ë

	)

75 
	#OFRAMESIZE
 (
NSAMPLES
 * (
I¡8
)Ë

	)

76 
XDAS_I¡8
 *
	göBuf
;

77 
XDAS_I¡8
 *
	gícodedBuf
;

78 
XDAS_I¡8
 *
	goutBuf
;

80 
Såög
 
	g¥ogName
 = "app";

81 
Såög
 
	gdecodîName
 = "viddec_copy";

82 
Såög
 
	gícodîName
 = "videnc_copy";

83 
Såög
 
	gígöeName
 = "video_copy";

85 
Såög
 
	gußge
 = "%s: input-file output-file\n";

87 
Void
 
ícode_decode
(
VIDENC_H™dÀ
 
íc
, 
VIDDEC_H™dÀ
 
dec
, 
FILE
 *
ö
,

88 
FILE
 *
out
);

90 
GT_Mask
 
curMask
;

95 
	$¸óãInFûeIfMissög
–*
öFûeName
 )

97 
i
;

98 
FILE
 *
f
 = 
	`f›í
(
öFûeName
, "rb");

99 i‡(
f
 =
NULL
) {

100 
	`¥ötf
–"I≈uàfûê'%s'ÇŸ found, gíî©ög o√.\n", 
öFûeName
 );

101 
f
 = 
	`f›í
–
öFûeName
, "wb" );

102 
i
 = 0; i < 1024; i++) {

103 
	`fwrôe
–&
i
, –ò), 1, 
f
 );

106 
	`f˛o£
–
f
 );

107 
	}
}

112 
I¡
 
	$smaö
(
I¡
 
¨gc
, 
Såög
 
¨gv
[])

114 
Engöe_H™dÀ
 
˚
 = 
NULL
;

115 
VIDDEC_H™dÀ
 
dec
 = 
NULL
;

116 
VIDENC_H™dÀ
 
íc
 = 
NULL
;

117 
FILE
 *
ö
 = 
NULL
;

118 
FILE
 *
out
 = 
NULL
;

119 
Såög
 
öFûe
, 
outFûe
;

120 
Mem‹y_AŒocP¨ams
 
ÆlocP¨ams
;

122 i‡(
¨gc
 <= 1) {

123 
öFûe
 = "./in.dat";

124 
outFûe
 = "./out.dat";

125 
	`¸óãInFûeIfMissög
(
öFûe
);

127 i‡(
¨gc
 == 3) {

128 
¥ogName
 = 
¨gv
[0];

129 
öFûe
 = 
¨gv
[1];

130 
outFûe
 = 
¨gv
[2];

133 
	`Ârötf
(
°dîr
, 
ußge
, 
¨gv
[0]);

134 
	`exô
(1);

137 
	`GT_0åa˚
(
curMask
, 
GT_1CLASS
, "App-> Application started.\n");

140 
ÆlocP¨ams
.
ty≥
 = 
Mem‹y_CONTIGPOOL
;

141 
ÆlocP¨ams
.
Êags
 = 
Mem‹y_NONCACHED
;

142 
ÆlocP¨ams
.
Æign
 = 
BUFALIGN
;

143 
ÆlocP¨ams
.
£g
 = 0;

145 
öBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
IFRAMESIZE
, &
ÆlocP¨ams
);

146 
ícodedBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
EFRAMESIZE
, &
ÆlocP¨ams
);

147 
outBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
OFRAMESIZE
, &
ÆlocP¨ams
);

149 i‡((
öBuf
 =
NULL
Ë|| (
ícodedBuf
 =NULLË|| (
outBuf
 == NULL)) {

150 
íd
;

154 i‡((
ö
 = 
	`f›í
(
öFûe
, "rb")Ë=
NULL
) {

155 
	`¥ötf
("Aµ-> ERROR: c™'àªad fûê%s\n", 
öFûe
);

156 
íd
;

158 i‡((
out
 = 
	`f›í
(
outFûe
, "wb")Ë=
NULL
) {

159 
	`¥ötf
("Aµ-> ERROR: c™'àwrôêtÿfûê%s\n", 
outFûe
);

160 
íd
;

164 i‡((
˚
 = 
	`Engöe_›í
(
ígöeName
, 
NULL
, NULL)) == NULL) {

165 
	`Ârötf
(
°dîr
, "%s:Érror: can't openÉngine %s\n",

166 
¥ogName
, 
ígöeName
);

167 
íd
;

171 
dec
 = 
	`VIDDEC_¸óã
(
˚
, 
decodîName
, 
NULL
);

172 i‡(
dec
 =
NULL
) {

173 
	`¥ötf
–"Aµ-> ERROR: c™'à›í code¯%s\n", 
decodîName
);

174 
íd
;

178 
íc
 = 
	`VIDENC_¸óã
(
˚
, 
ícodîName
, 
NULL
);

179 i‡(
íc
 =
NULL
) {

180 
	`Ârötf
(
°dîr
, "%s:Érror: can't open codec %s\n",

181 
¥ogName
, 
ícodîName
);

182 
íd
;

186 
	`ícode_decode
(
íc
, 
dec
, 
ö
, 
out
);

188 
íd
:

190 i‡(
íc
) {

191 
	`VIDENC_dñëe
(
íc
);

193 i‡(
dec
) {

194 
	`VIDDEC_dñëe
(
dec
);

198 i‡(
˚
) {

199 
	`Engöe_˛o£
(
˚
);

203 i‡(
ö
) {

204 
	`f˛o£
(
ö
);

206 i‡(
out
) {

207 
	`f˛o£
(
out
);

211 i‡(
öBuf
) {

212 
	`Mem‹y_‰ì
(
öBuf
, 
IFRAMESIZE
, &
ÆlocP¨ams
);

214 i‡(
ícodedBuf
) {

215 
	`Mem‹y_‰ì
(
ícodedBuf
, 
EFRAMESIZE
, &
ÆlocP¨ams
);

217 i‡(
outBuf
) {

218 
	`Mem‹y_‰ì
(
outBuf
, 
OFRAMESIZE
, &
ÆlocP¨ams
);

221 
	`GT_0åa˚
(
curMask
, 
GT_1CLASS
, "app done.\n");

223 
	}
}

228 
Void
 
	$ícode_decode
(
VIDENC_H™dÀ
 
íc
, 
VIDDEC_H™dÀ
 
dec
, 
FILE
 *
ö
,

229 
FILE
 *
out
)

231 
I¡
 
n
;

232 
I¡32
 
°©us
;

234 
VIDDEC_InArgs
 
decInArgs
;

235 
VIDDEC_OutArgs
 
decOutArgs
;

236 
VIDDEC_Dy«micP¨ams
 
decDynP¨ams
;

237 
VIDDEC_Sètus
 
decSètus
;

239 
VIDENC_InArgs
 
ícInArgs
;

240 
VIDENC_OutArgs
 
ícOutArgs
;

241 
VIDENC_Dy«micP¨ams
 
ícDynP¨ams
;

242 
VIDENC_Sètus
 
ícSètus
;

244 
XDM_BufDesc
 
öBufDesc
;

245 
XDAS_I¡8
 *
§c
[
XDM_MAX_IO_BUFFERS
];

246 
XDAS_I¡32
 
öBufSizes
[
XDM_MAX_IO_BUFFERS
];

248 
XDM_BufDesc
 
ícodedBufDesc
;

249 
XDAS_I¡8
 *
ícoded
[
XDM_MAX_IO_BUFFERS
];

250 
XDAS_I¡32
 
ícBufSizes
[
XDM_MAX_IO_BUFFERS
];

252 
XDM_BufDesc
 
outBufDesc
;

253 
XDAS_I¡8
 *
d°
[
XDM_MAX_IO_BUFFERS
];

254 
XDAS_I¡32
 
outBufSizes
[
XDM_MAX_IO_BUFFERS
];

257 
	`mem£t
(
§c
, 0, (§c[0]Ë* 
XDM_MAX_IO_BUFFERS
);

258 
	`mem£t
(
ícoded
, 0, ”ncoded[0]Ë* 
XDM_MAX_IO_BUFFERS
);

259 
	`mem£t
(
d°
, 0, (d°[0]Ë* 
XDM_MAX_IO_BUFFERS
);

261 
§c
[0] = 
öBuf
;

262 
ícoded
[0] = 
ícodedBuf
;

263 
d°
[0] = 
outBuf
;

265 
öBufDesc
.
numBufs
 = 
ícodedBufDesc
.numBuf†
outBufDesc
.numBufs = 1;

267 
öBufDesc
.
bufSizes
 = 
öBufSizes
;

268 
ícodedBufDesc
.
bufSizes
 = 
ícBufSizes
;

269 
outBufDesc
.
bufSizes
 = 
outBufSizes
;

271 
öBufSizes
[0] = 
ícBufSizes
[0] = 
outBufSizes
[0] = 
NSAMPLES
;

273 
öBufDesc
.
bufs
 = 
§c
;

274 
ícodedBufDesc
.
bufs
 = 
ícoded
;

275 
outBufDesc
.
bufs
 = 
d°
;

278 
ícInArgs
.
size
 = (encInArgs);

279 
decInArgs
.
size
 = (decInArgs);

280 
ícOutArgs
.
size
 = (encOutArgs);

281 
decOutArgs
.
size
 = (decOutArgs);

282 
ícDynP¨ams
.
size
 = (encDynParams);

283 
decDynP¨ams
.
size
 = (decDynParams);

284 
ícSètus
.
size
 = (encStatus);

285 
decSètus
.
size
 = (decStatus);

293 
°©us
 = 
	`VIDENC_c⁄åﬁ
(
íc
, 
XDM_GETSTATUS
, &
ícDynP¨ams
, &
ícSètus
);

294 i‡(
°©us
 !
VIDENC_EOK
) {

296 
	`GT_1åa˚
(
curMask
, 
GT_7CLASS
, "ícodêc⁄åﬁ sètu†0x%x\n", 
°©us
);

301 i‡((
öBufDesc
.
numBufs
 < 
ícSètus
.
bufInfo
.
möNumInBufs
) ||

302 (
IFRAMESIZE
 < 
ícSètus
.
bufInfo
.
möInBufSize
[0]) ||

303 (
ícodedBufDesc
.
numBufs
 < 
ícSètus
.
bufInfo
.
möNumOutBufs
) ||

304 (
EFRAMESIZE
 < 
ícSètus
.
bufInfo
.
möOutBufSize
[0])) {

307 
	`GT_0åa˚
(
curMask
, 
GT_7CLASS
,

312 
°©us
 = 
	`VIDDEC_c⁄åﬁ
(
dec
, 
XDM_GETSTATUS
, &
decDynP¨ams
, &
decSètus
);

313 i‡(
°©us
 !
VIDDEC_EOK
) {

315 
	`GT_1åa˚
(
curMask
, 
GT_7CLASS
, "decodêc⁄åﬁ sètu†0x%x\n", 
°©us
);

320 i‡((
ícodedBufDesc
.
numBufs
 < 
decSètus
.
bufInfo
.
möNumInBufs
) ||

321 (
EFRAMESIZE
 < 
decSètus
.
bufInfo
.
möInBufSize
[0]) ||

322 (
outBufDesc
.
numBufs
 < 
decSètus
.
bufInfo
.
möNumOutBufs
) ||

323 (
OFRAMESIZE
 < 
decSètus
.
bufInfo
.
möOutBufSize
[0])) {

326 
	`GT_0åa˚
(
curMask
, 
GT_7CLASS
,

334 
n
 = 0; 
	`‰ód
(
öBuf
, 
IFRAMESIZE
, 1, 
ö
) == 1;Ç++) {

336 #ifde‡
CACHE_ENABLED


337 #ifde‡
xdc_èrgë__ißCom∑tibÀ_64P


345 
	`Mem‹y_ˇcheWbInv
(
öBuf
, 
IFRAMESIZE
);

347 #îr‹ 
UnvÆid©ed
 
c⁄fig
 - 
add
 
≠¥›rüã
 
‰ód
-
ªœãd
 
ˇche
 
maöã«n˚


350 
	`Mem‹y_ˇcheInv
(
ícodedBuf
, 
EFRAMESIZE
);

353 
	`GT_1åa˚
(
curMask
, 
GT_1CLASS
, "Aµ-> Pro˚ssög fømê%d...\n", 
n
);

356 
°©us
 = 
	`VIDENC_¥o˚ss
(
íc
, &
öBufDesc
, &
ícodedBufDesc
, &
ícInArgs
,

357 &
ícOutArgs
);

359 
	`GT_2åa˚
(
curMask
, 
GT_2CLASS
,

361 
n
, 
°©us
);

363 #ifde‡
CACHE_ENABLED


368 
	`Mem‹y_ˇcheWbInv
(
ícodedBuf
, 
EFRAMESIZE
);

371 
	`Mem‹y_ˇcheInv
(
outBuf
, 
OFRAMESIZE
);

374 i‡(
°©us
 !
VIDENC_EOK
) {

375 
	`GT_3åa˚
(
curMask
, 
GT_7CLASS
,

377 "exãndedEº‹ = 0x%x\n", 
n
, 
°©us
, 
ícOutArgs
.
exãndedEº‹
);

382 
°©us
 = 
	`VIDDEC_¥o˚ss
(
dec
, &
ícodedBufDesc
, &
outBufDesc
, &
decInArgs
,

383 &
decOutArgs
);

385 
	`GT_2åa˚
(
curMask
, 
GT_2CLASS
,

387 
n
, 
°©us
);

389 i‡(
°©us
 !
VIDDEC_EOK
) {

390 
	`GT_3åa˚
(
curMask
, 
GT_7CLASS
,

392 "exãndedEº‹ = 0x%x\n", 
n
, 
°©us
, 
decOutArgs
.
exãndedEº‹
);

396 #ifde‡
CACHE_ENABLED


398 
	`Mem‹y_ˇcheWb
(
outBuf
, 
OFRAMESIZE
);

401 
	`fwrôe
(
d°
[0], 
OFRAMESIZE
, 1, 
out
);

404 
	`GT_1åa˚
(
curMask
, 
GT_1CLASS
, "%d føme†ícoded/decoded\n", 
n
);

405 
	}
}

	@app.c

36 
	~<xdc/°d.h
>

37 
	~<ti/sdo/˚/Engöe.h
>

38 
	~<ti/sdo/˚/oßl/Mem‹y.h
>

41 
	~<ti/sdo/˚/video/viddec.h
>

42 
	~<ti/sdo/˚/video/vidíc.h
>

43 
	~<ti/sdo/˚/åa˚/gt.h
>

45 
	~<°rög.h
>

47 
	~<°dio.h
>

48 
	~<°dlib.h
>

53 
	~<›ícv/highgui.h
>

54 
	~<cv.h
>

55 
	~<cxc‹e.h
>

62 
	~<uni°d.h
>

63 
	~<sys/ty≥s.h
>

64 
	~<sys/°©.h
>

65 
	~<f˙é.h
>

66 
	~<°dio.h
>

67 
	~<sys/io˘l.h
>

68 
	~<°dlib.h
>

69 
	~<sys/mm™.h
>

70 
	~<löux/ty≥s.h
>

71 
	~<löux/videodev2.h
>

78 #ifde‡
CACHE_ENABLED


84 #i‚de‡
BUFALIGN


85 
	#BUFALIGN
 128

	)

90 
	#BUFALIGN
 
Mem‹y_DEFAULTALIGNMENT


	)

95 
	#NSAMPLES
 320*240

	)

96 
	#IFRAMESIZE
 (
NSAMPLES
 * 2 * (
I¡8
)Ë

	)

97 
	#EFRAMESIZE
 (
NSAMPLES
 * 3 * (
I¡8
)Ë

	)

98 
	#OFRAMESIZE
 (
NSAMPLES
 * (
I¡8
)Ë

	)

99 
XDAS_I¡8
 *
	göBuf
;

100 
XDAS_I¡8
 *
	gícodedBuf
;

101 
XDAS_I¡8
 *
	goutBuf
;

103 
Såög
 
	g¥ogName
 = "app";

104 
Såög
 
	gdecodîName
 = "viddec_copy";

105 
Såög
 
	gícodîName
 = "videnc_copy";

106 
Såög
 
	gígöeName
 = "video_copy";

108 
Såög
 
	gußge
 = "%s: input-file output-file\n";

110 
Void
 
ícode_decode
(
VIDENC_H™dÀ
 
íc
, 
VIDDEC_H™dÀ
 
dec
, 
FILE
 *
ö
,

111 
FILE
 *
out
);

113 
GT_Mask
 
curMask
;

119 
	tBOOL
;

120 
	#TRUE
 1

	)

121 
	#FALSE
 0

	)

122 
	#FILE_VIDEO
 "/dev/video0"

	)

124 
	#IMAGEWIDTH
 320

	)

125 
	#IMAGEHEIGHT
 240

	)

127 
	gfd
;

128 
v4l2_ˇ∑bûôy
 
	gˇp
;

129 
v4l2_fmtdesc
 
	gfmtdesc
;

130 
v4l2_f‹m©
 
	gfmt
,
	gfmèck
;

131 
v4l2_°ªam∑rm
 
	g£tÂs
;

132 
v4l2_ªque°buf„rs
 
	gªq
;

133 
v4l2_buf„r
 
	gbuf
;

134 
v4l2_buf_ty≥
 
	gty≥
;

136 
	g‰ame_buf„r
[
IMAGEWIDTH
*
IMAGEHEIGHT
*3];

137 
	g‰ame_buf„r_gøy
[
IMAGEWIDTH
*
IMAGEHEIGHT
];

141 
	sbuf„r


143 * 
	m°¨t
;

144 
	mÀngth
;

145 } * 
	gbuf„rs
;

153 
I∂Image
 *
	g‰ame
;

154 
I∂Image
 *
	g‰ame_gøy
 = 
NULL
;

155 
I∂Image
 *
	g‰ame_sobñ
 = 
NULL
;

156 
I∂Image
 *
	g‰ame_SmoŸh
 = 
NULL
;

157 
I∂Image
 *
	g‰ame_sobñ_8U
 = 
NULL
;

164 
	$¸óãInFûeIfMissög
–*
öFûeName
 )

166 
i
;

167 
FILE
 *
f
 = 
	`f›í
(
öFûeName
, "rb");

168 i‡(
f
 =
NULL
) {

169 
	`¥ötf
–"I≈uàfûê'%s'ÇŸ found, gíî©ög o√.\n", 
öFûeName
 );

170 
f
 = 
	`f›í
–
öFûeName
, "wb" );

171 
i
 = 0; i < 1024; i++) {

172 
	`fwrôe
–&
i
, –ò), 1, 
f
 );

175 
	`f˛o£
–
f
 );

176 
	}
}

181 
I¡
 
	$smaö
(
I¡
 
¨gc
, 
Såög
 
¨gv
[])

183 
Engöe_H™dÀ
 
˚
 = 
NULL
;

184 
VIDDEC_H™dÀ
 
dec
 = 
NULL
;

185 
VIDENC_H™dÀ
 
íc
 = 
NULL
;

186 
FILE
 *
ö
 = 
NULL
;

187 
FILE
 *
out
 = 
NULL
;

188 
Såög
 
öFûe
, 
outFûe
;

189 
Mem‹y_AŒocP¨ams
 
ÆlocP¨ams
;

191 i‡(
¨gc
 <= 1) {

192 
öFûe
 = "./in.dat";

193 
outFûe
 = "./out.dat";

194 
	`¸óãInFûeIfMissög
(
öFûe
);

196 i‡(
¨gc
 == 3) {

197 
¥ogName
 = 
¨gv
[0];

198 
öFûe
 = 
¨gv
[1];

199 
outFûe
 = 
¨gv
[2];

202 
	`Ârötf
(
°dîr
, 
ußge
, 
¨gv
[0]);

203 
	`exô
(1);

206 
	`GT_0åa˚
(
curMask
, 
GT_1CLASS
, "App-> Application started.\n");

209 
ÆlocP¨ams
.
ty≥
 = 
Mem‹y_CONTIGPOOL
;

210 
ÆlocP¨ams
.
Êags
 = 
Mem‹y_NONCACHED
;

211 
ÆlocP¨ams
.
Æign
 = 
BUFALIGN
;

212 
ÆlocP¨ams
.
£g
 = 0;

214 
öBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
IFRAMESIZE
, &
ÆlocP¨ams
);

215 
ícodedBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
EFRAMESIZE
, &
ÆlocP¨ams
);

216 
outBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
OFRAMESIZE
, &
ÆlocP¨ams
);

218 i‡((
öBuf
 =
NULL
Ë|| (
ícodedBuf
 =NULLË|| (
outBuf
 == NULL)) {

219 
íd
;

223 i‡((
ö
 = 
	`f›í
(
öFûe
, "rb")Ë=
NULL
) {

224 
	`¥ötf
("Aµ-> ERROR: c™'àªad fûê%s\n", 
öFûe
);

225 
íd
;

227 i‡((
out
 = 
	`f›í
(
outFûe
, "wb")Ë=
NULL
) {

228 
	`¥ötf
("Aµ-> ERROR: c™'àwrôêtÿfûê%s\n", 
outFûe
);

229 
íd
;

233 i‡((
˚
 = 
	`Engöe_›í
(
ígöeName
, 
NULL
, NULL)) == NULL) {

234 
	`Ârötf
(
°dîr
, "%s:Érror: can't openÉngine %s\n",

235 
¥ogName
, 
ígöeName
);

236 
íd
;

240 
dec
 = 
	`VIDDEC_¸óã
(
˚
, 
decodîName
, 
NULL
);

241 i‡(
dec
 =
NULL
) {

242 
	`¥ötf
–"Aµ-> ERROR: c™'à›í code¯%s\n", 
decodîName
);

243 
íd
;

247 
íc
 = 
	`VIDENC_¸óã
(
˚
, 
ícodîName
, 
NULL
);

248 i‡(
íc
 =
NULL
) {

249 
	`Ârötf
(
°dîr
, "%s:Érror: can't open codec %s\n",

250 
¥ogName
, 
ícodîName
);

251 
íd
;

255 
	`ícode_decode
(
íc
, 
dec
, 
ö
, 
out
);

257 
íd
:

259 i‡(
íc
) {

260 
	`VIDENC_dñëe
(
íc
);

262 i‡(
dec
) {

263 
	`VIDDEC_dñëe
(
dec
);

267 i‡(
˚
) {

268 
	`Engöe_˛o£
(
˚
);

272 i‡(
ö
) {

273 
	`f˛o£
(
ö
);

275 i‡(
out
) {

276 
	`f˛o£
(
out
);

280 i‡(
öBuf
) {

281 
	`Mem‹y_‰ì
(
öBuf
, 
IFRAMESIZE
, &
ÆlocP¨ams
);

283 i‡(
ícodedBuf
) {

284 
	`Mem‹y_‰ì
(
ícodedBuf
, 
EFRAMESIZE
, &
ÆlocP¨ams
);

286 i‡(
outBuf
) {

287 
	`Mem‹y_‰ì
(
outBuf
, 
OFRAMESIZE
, &
ÆlocP¨ams
);

290 
	`GT_0åa˚
(
curMask
, 
GT_1CLASS
, "app done.\n");

292 
	}
}

297 
Void
 
	$ícode_decode
(
VIDENC_H™dÀ
 
íc
, 
VIDDEC_H™dÀ
 
dec
, 
FILE
 *
ö
,

298 
FILE
 *
out
)

300 
I¡
 
n
;

301 
I¡32
 
°©us
;

303 
VIDDEC_InArgs
 
decInArgs
;

304 
VIDDEC_OutArgs
 
decOutArgs
;

305 
VIDDEC_Dy«micP¨ams
 
decDynP¨ams
;

306 
VIDDEC_Sètus
 
decSètus
;

308 
VIDENC_InArgs
 
ícInArgs
;

309 
VIDENC_OutArgs
 
ícOutArgs
;

310 
VIDENC_Dy«micP¨ams
 
ícDynP¨ams
;

311 
VIDENC_Sètus
 
ícSètus
;

313 
XDM_BufDesc
 
öBufDesc
;

314 
XDAS_I¡8
 *
§c
[
XDM_MAX_IO_BUFFERS
];

315 
XDAS_I¡32
 
öBufSizes
[
XDM_MAX_IO_BUFFERS
];

317 
XDM_BufDesc
 
ícodedBufDesc
;

318 
XDAS_I¡8
 *
ícoded
[
XDM_MAX_IO_BUFFERS
];

319 
XDAS_I¡32
 
ícBufSizes
[
XDM_MAX_IO_BUFFERS
];

321 
XDM_BufDesc
 
outBufDesc
;

322 
XDAS_I¡8
 *
d°
[
XDM_MAX_IO_BUFFERS
];

323 
XDAS_I¡32
 
outBufSizes
[
XDM_MAX_IO_BUFFERS
];

326 
	`mem£t
(
§c
, 0, (§c[0]Ë* 
XDM_MAX_IO_BUFFERS
);

327 
	`mem£t
(
ícoded
, 0, ”ncoded[0]Ë* 
XDM_MAX_IO_BUFFERS
);

328 
	`mem£t
(
d°
, 0, (d°[0]Ë* 
XDM_MAX_IO_BUFFERS
);

330 
§c
[0] = 
öBuf
;

331 
ícoded
[0] = 
ícodedBuf
;

332 
d°
[0] = 
outBuf
;

334 
öBufDesc
.
numBufs
 = 
ícodedBufDesc
.numBuf†
outBufDesc
.numBufs = 1;

338 
öBufDesc
.
bufSizes
 = 
öBufSizes
;

339 
ícodedBufDesc
.
bufSizes
 = 
ícBufSizes
;

340 
outBufDesc
.
bufSizes
 = 
outBufSizes
;

343 
öBufSizes
[0] = 
IFRAMESIZE
;

344 
ícBufSizes
[0] = 
EFRAMESIZE
;

345 
outBufSizes
[0] = 
OFRAMESIZE
;

347 
öBufDesc
.
bufs
 = 
§c
;

348 
ícodedBufDesc
.
bufs
 = 
ícoded
;

349 
outBufDesc
.
bufs
 = 
d°
;

352 
ícInArgs
.
size
 = (encInArgs);

353 
decInArgs
.
size
 = (decInArgs);

354 
ícOutArgs
.
size
 = (encOutArgs);

355 
decOutArgs
.
size
 = (decOutArgs);

356 
ícDynP¨ams
.
size
 = (encDynParams);

357 
decDynP¨ams
.
size
 = (decDynParams);

358 
ícSètus
.
size
 = (encStatus);

359 
decSètus
.
size
 = (decStatus);

367 
°©us
 = 
	`VIDENC_c⁄åﬁ
(
íc
, 
XDM_GETSTATUS
, &
ícDynP¨ams
, &
ícSètus
);

368 i‡(
°©us
 !
VIDENC_EOK
) {

370 
	`GT_1åa˚
(
curMask
, 
GT_7CLASS
, "ícodêc⁄åﬁ sètu†0x%x\n", 
°©us
);

375 i‡((
öBufDesc
.
numBufs
 < 
ícSètus
.
bufInfo
.
möNumInBufs
) ||

376 (
IFRAMESIZE
 < 
ícSètus
.
bufInfo
.
möInBufSize
[0]) ||

377 (
ícodedBufDesc
.
numBufs
 < 
ícSètus
.
bufInfo
.
möNumOutBufs
) ||

378 (
EFRAMESIZE
 < 
ícSètus
.
bufInfo
.
möOutBufSize
[0])) {

381 
	`GT_0åa˚
(
curMask
, 
GT_7CLASS
,

388 
°©us
 = 
	`VIDDEC_c⁄åﬁ
(
dec
, 
XDM_GETSTATUS
, &
decDynP¨ams
, &
decSètus
);

389 i‡(
°©us
 !
VIDDEC_EOK
) {

391 
	`GT_1åa˚
(
curMask
, 
GT_7CLASS
, "decodêc⁄åﬁ sètu†0x%x\n", 
°©us
);

398 i‡((
ícodedBufDesc
.
numBufs
 < 
decSètus
.
bufInfo
.
möNumInBufs
) ||

399 (
EFRAMESIZE
 < 
decSètus
.
bufInfo
.
möInBufSize
[0]) ||

400 (
outBufDesc
.
numBufs
 < 
decSètus
.
bufInfo
.
möNumOutBufs
) ||

401 (
OFRAMESIZE
 < 
decSètus
.
bufInfo
.
möOutBufSize
[0])) {

404 
	`GT_0åa˚
(
curMask
, 
GT_7CLASS
,

419 
CvSize
 
size
=
	`cvSize
(320,240);

420 
‰ame
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_8U
,3);

421 
‰ame_gøy
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_8U
,1);

422 
‰ame_SmoŸh
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_8U
,1);

423 
‰ame_sobñ
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_16S
,1);

424 
‰ame_sobñ_8U
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_8U
,1);

427 
cou¡
=0;

430 if(
	`öô_v4l2
(Ë=
FALSE
)

432 (
FALSE
);

439 
cou¡
 < 300){

441 
	`v4l2_gøb
();

443 
	`mem˝y
(
öBuf
,
buf„rs
[0].
°¨t
,
IFRAMESIZE
);

445 #ifde‡
CACHE_ENABLED


446 #ifde‡
xdc_èrgë__ißCom∑tibÀ_64P


454 
	`Mem‹y_ˇcheWbInv
(
öBuf
, 
IFRAMESIZE
);

456 #îr‹ 
UnvÆid©ed
 
c⁄fig
 - 
add
 
≠¥›rüã
 
‰ód
-
ªœãd
 
ˇche
 
maöã«n˚


459 
	`Mem‹y_ˇcheInv
(
ícodedBuf
, 
EFRAMESIZE
);

462 
	`GT_1åa˚
(
curMask
, 
GT_1CLASS
, "Aµ-> Pro˚ssög fømê%d...\n", 
cou¡
);

465 
°©us
 = 
	`VIDENC_¥o˚ss
(
íc
, &
öBufDesc
, &
ícodedBufDesc
, &
ícInArgs
,

466 &
ícOutArgs
);

468 
	`GT_2åa˚
(
curMask
, 
GT_2CLASS
,

470 
cou¡
, 
°©us
);

472 #ifde‡
CACHE_ENABLED


477 
	`Mem‹y_ˇcheWbInv
(
ícodedBuf
, 
EFRAMESIZE
);

480 
	`Mem‹y_ˇcheInv
(
outBuf
, 
OFRAMESIZE
);

483 i‡(
°©us
 !
VIDENC_EOK
) {

484 
	`GT_3åa˚
(
curMask
, 
GT_7CLASS
,

486 "exãndedEº‹ = 0x%x\n", 
cou¡
, 
°©us
, 
ícOutArgs
.
exãndedEº‹
);

495 
°©us
 = 
	`VIDDEC_¥o˚ss
(
dec
, &
ícodedBufDesc
, &
outBufDesc
, &
decInArgs
,

496 &
decOutArgs
);

498 
	`GT_2åa˚
(
curMask
, 
GT_2CLASS
,

500 
n
, 
°©us
);

502 i‡(
°©us
 !
VIDDEC_EOK
) {

503 
	`GT_3åa˚
(
curMask
, 
GT_7CLASS
,

505 "exãndedEº‹ = 0x%x\n", 
n
, 
°©us
, 
decOutArgs
.
exãndedEº‹
);

511 #ifde‡
CACHE_ENABLED


513 
	`Mem‹y_ˇcheWb
(
outBuf
, 
OFRAMESIZE
);

522 
‰ame
->
imageD©a
 = 
ícoded
[0];

523 
‰ame_gøy
->
imageD©a
 = 
d°
[0];

529 
	`¥ötf
("thê%d fømê¨êcom∂ëed \n",
cou¡
);

530 
cou¡
++;

540 
	`cvRñó£Image
(&
‰ame
);

541 
	`cvRñó£Image
(&
‰ame_gøy
);

542 
	`cvRñó£Image
(&
‰ame_SmoŸh
);

543 
	`cvRñó£Image
(&
‰ame_sobñ
);

544 
	`cvRñó£Image
(&
‰ame_sobñ_8U
);

546 
	`GT_1åa˚
(
curMask
, 
GT_1CLASS
, "%d føme†ícoded/decoded\n", 
n
);

547 
	}
}

569 
	$öô_v4l2
()

571 
i
;

572 
ªt
 = 0;

575 i‡((
fd
 = 
	`›í
(
FILE_VIDEO
, 
O_RDWR
)) == -1)

577 
	`¥ötf
("Error opening V4L interface\n");

578  (
FALSE
);

582 i‡(
	`io˘l
(
fd
, 
VIDIOC_QUERYCAP
, &
ˇp
) == -1)

584 
	`¥ötf
("Eº‹ o≥nög devi˚ %s: u«bÀÅÿquîy devi˚.\n",
FILE_VIDEO
);

585  (
FALSE
);

589 
	`¥ötf
("drivî:\t\t%s\n",
ˇp
.
drivî
);

590 
	`¥ötf
("ˇrd:\t\t%s\n",
ˇp
.
ˇrd
);

591 
	`¥ötf
("bus_öfo:\t%s\n",
ˇp
.
bus_öfo
);

592 
	`¥ötf
("vîsi⁄:\t%d\n",
ˇp
.
vîsi⁄
);

593 
	`¥ötf
("ˇ∑bûôõs:\t%x\n",
ˇp
.
ˇ∑bûôõs
);

595 i‡((
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VIDEO_CAPTURE
) == V4L2_CAP_VIDEO_CAPTURE)

597 
	`¥ötf
("Devi˚ %s: suµ‹t†ˇ±uª.\n",
FILE_VIDEO
);

600 i‡((
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_STREAMING
) == V4L2_CAP_STREAMING)

602 
	`¥ötf
("Devi˚ %s: suµ‹t†°ªamög.\n",
FILE_VIDEO
);

607 
fmtdesc
.
ödex
=0;

608 
fmtdesc
.
ty≥
=
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

609 
	`¥ötf
("Support format:\n");

610 
	`io˘l
(
fd
,
VIDIOC_ENUM_FMT
,&
fmtdesc
)!=-1)

612 
	`¥ötf
("\t%d.%s\n",
fmtdesc
.
ödex
+1,fmtdesc.
des¸ùti⁄
);

613 
fmtdesc
.
ödex
++;

617 
fmt
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

618 
fmt
.fmt.
pix
.
pixñf‹m©
 = 
V4L2_PIX_FMT_YUYV
;

619 
fmt
.fmt.
pix
.
height
 = 
IMAGEHEIGHT
;

620 
fmt
.fmt.
pix
.
width
 = 
IMAGEWIDTH
;

621 
fmt
.fmt.
pix
.
fõld
 = 
V4L2_FIELD_INTERLACED
;

623 if(
	`io˘l
(
fd
, 
VIDIOC_S_FMT
, &
fmt
) == -1)

625 
	`¥ötf
("UnableÅo set format\n");

626  
FALSE
;

628 if(
	`io˘l
(
fd
, 
VIDIOC_G_FMT
, &
fmt
) == -1)

630 
	`¥ötf
("UnableÅo get format\n");

631  
FALSE
;

634 
	`¥ötf
("fmt.ty≥:\t\t%d\n",
fmt
.
ty≥
);

635 
	`¥ötf
("pix.pixñf‹m©:\t%c%c%c%c\n",
fmt
.fmt.
pix
.
pixñf‹m©
 & 0xFF, (fmt.fmt.pix.pixelformat >> 8) & 0xFF,(fmt.fmt.pix.pixelformat >> 16) & 0xFF, (fmt.fmt.pix.pixelformat >> 24) & 0xFF);

636 
	`¥ötf
("pix.height:\t\t%d\n",
fmt
.fmt.
pix
.
height
);

637 
	`¥ötf
("pix.width:\t\t%d\n",
fmt
.fmt.
pix
.
width
);

638 
	`¥ötf
("pix.fõld:\t\t%d\n",
fmt
.fmt.
pix
.
fõld
);

641 
£tÂs
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

642 
£tÂs
.
∑rm
.
ˇ±uª
.
timïî‰ame
.
numî©‹
 = 1;

643 
£tÂs
.
∑rm
.
ˇ±uª
.
timïî‰ame
.
díomö©‹
 = 30;

644 if(-1 =
	`io˘l
(
fd
, 
VIDIOC_S_PARM
, 
£tÂs
)Ë
	`¥ötf
("VIDIOC_S_PARMÉrror");

646 
	`¥ötf
("numî©‹: %d, díomö©‹: %d\n",
£tÂs
.
∑rm
.
ˇ±uª
.
timïî‰ame
.
numî©‹
,£tÂs.∑rm.ˇ±uª.timïî‰ame.
díomö©‹
);

647 
	`¥ötf
("öô %†\t[OK]\n",
FILE_VIDEO
);

649  
TRUE
;

650 
	}
}

654 
	$v4l2_gøb
()

656 
n_buf„rs
;

659 
ªq
.
cou¡
=8;

660 
ªq
.
ty≥
=
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

661 
ªq
.
mem‹y
=
V4L2_MEMORY_MMAP
;

662 if(
	`io˘l
(
fd
,
VIDIOC_REQBUFS
,&
ªq
)==-1)

664 
	`¥ötf
("request for buffersÉrror\n");

668 
buf„rs
 = 
	`mÆloc
(
ªq
.
cou¡
* (*buffers));

669 i‡(!
buf„rs
)

671 
	`¥ötf
 ("Out of memory\n");

672 (
FALSE
);

675 
n_buf„rs
 = 0;Ç_buf„r†< 
ªq
.
cou¡
;Ç_buffers++)

677 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

678 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

679 
buf
.
ödex
 = 
n_buf„rs
;

681 i‡(
	`io˘l
 (
fd
, 
VIDIOC_QUERYBUF
, &
buf
) == -1)

683 
	`¥ötf
("query bufferÉrror\n");

684 (
FALSE
);

687 
buf„rs
[
n_buf„rs
].
Àngth
 = 
buf
.length;

689 
buf„rs
[
n_buf„rs
].
°¨t
 = 
	`mm≠
(
NULL
,
buf
.
Àngth
,
PROT_READ
 |
PROT_WRITE
, 
MAP_SHARED
, 
fd
, buf.
m
.
off£t
);

690 i‡(
buf„rs
[
n_buf„rs
].
°¨t
 =
MAP_FAILED
)

692 
	`¥ötf
("buffer mapÉrror\n");

693 (
FALSE
);

698 
n_buf„rs
 = 0;Ç_buf„r†< 
ªq
.
cou¡
;Ç_buffers++)

700 
buf
.
ödex
 = 
n_buf„rs
;

701 
	`io˘l
(
fd
, 
VIDIOC_QBUF
, &
buf
);

704 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

705 
	`io˘l
 (
fd
, 
VIDIOC_STREAMON
, &
ty≥
);

707 
	`io˘l
(
fd
, 
VIDIOC_DQBUF
, &
buf
);

709 
	`¥ötf
("grab yuyv OK\n");

710 (
TRUE
);

711 
	}
}

715 
	$yuyv_2_rgb888
()

717 
i
,
j
;

718 
y1
,
y2
,
u
,
v
;

719 
r1
,
g1
,
b1
,
r2
,
g2
,
b2
;

720 * 
poöãr
;

722 
poöãr
 = 
buf„rs
[0].
°¨t
;

724 
i
=0;i<
IMAGEHEIGHT
;i++)

726 
j
=0;j<
IMAGEWIDTH
/2;j++)

728 
y1
 = *–
poöãr
 + (
i
*
IMAGEWIDTH
/2+
j
)*4);

729 
u
 = *–
poöãr
 + (
i
*
IMAGEWIDTH
/2+
j
)*4 + 1);

730 
y2
 = *–
poöãr
 + (
i
*
IMAGEWIDTH
/2+
j
)*4 + 2);

731 
v
 = *–
poöãr
 + (
i
*
IMAGEWIDTH
/2+
j
)*4 + 3);

733 
r1
 = 
y1
 + 1.042*(
v
-128);

734 
g1
 = 
y1
 - 0.34414*(
u
-128Ë- 0.71414*(
v
-128);

735 
b1
 = 
y1
 + 1.772*(
u
-128);

737 
r2
 = 
y2
 + 1.042*(
v
-128);

738 
g2
 = 
y2
 - 0.34414*(
u
-128Ë- 0.71414*(
v
-128);

739 
b2
 = 
y2
 + 1.772*(
u
-128);

741 if(
r1
>255)

742 
r1
 = 255;

743 if(
r1
<0)

744 
r1
 = 0;

746 if(
b1
>255)

747 
b1
 = 255;

748 if(
b1
<0)

749 
b1
 = 0;

751 if(
g1
>255)

752 
g1
 = 255;

753 if(
g1
<0)

754 
g1
 = 0;

756 if(
r2
>255)

757 
r2
 = 255;

758 if(
r2
<0)

759 
r2
 = 0;

761 if(
b2
>255)

762 
b2
 = 255;

763 if(
b2
<0)

764 
b2
 = 0;

766 if(
g2
>255)

767 
g2
 = 255;

768 if(
g2
<0)

769 
g2
 = 0;

772 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 ) = ()
b1
;

773 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 1Ë()
g1
;

774 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 2Ë()
r1
;

775 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 3Ë()
b2
;

776 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 4Ë()
g2
;

777 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 5Ë()
r2
;

789 
	`¥ötf
("changeÅo RGB OK \n");

790 
	}
}

793 
	$˛o£_v4l2
()

795 if(
fd
 != -1)

797 
	`˛o£
(
fd
);

798  (
TRUE
);

800  (
FALSE
);

801 
	}
}

	@app_notOK.c

36 
	~<xdc/°d.h
>

37 
	~<ti/sdo/˚/Engöe.h
>

38 
	~<ti/sdo/˚/oßl/Mem‹y.h
>

41 
	~<ti/sdo/˚/video/viddec.h
>

42 
	~<ti/sdo/˚/video/vidíc.h
>

43 
	~<ti/sdo/˚/åa˚/gt.h
>

45 
	~<°rög.h
>

47 
	~<°dio.h
>

48 
	~<°dlib.h
>

52 
	~<›ícv/highgui.h
>

53 
	~<cv.h
>

54 
	~<cxc‹e.h
>

57 
	~<uni°d.h
>

58 
	~<sys/ty≥s.h
>

59 
	~<sys/°©.h
>

60 
	~<f˙é.h
>

61 
	~<°dio.h
>

62 
	~<sys/io˘l.h
>

63 
	~<°dlib.h
>

64 
	~<sys/mm™.h
>

65 
	~<löux/ty≥s.h
>

66 
	~<löux/videodev2.h
>

80 #ifde‡
CACHE_ENABLED


86 #i‚de‡
BUFALIGN


87 
	#BUFALIGN
 128

	)

92 
	#BUFALIGN
 
Mem‹y_DEFAULTALIGNMENT


	)

97 
	#NSAMPLES
 320*240

	)

98 
	#IFRAMESIZE
 (
NSAMPLES
 * 2 * (
I¡8
)Ë

	)

99 
	#EFRAMESIZE
 (
NSAMPLES
 * 3 * (
I¡8
)Ë

	)

100 
	#OFRAMESIZE
 (
NSAMPLES
 * (
I¡8
)Ë

	)

101 
XDAS_I¡8
 *
	göBuf
;

102 
XDAS_I¡8
 *
	gícodedBuf
;

103 
XDAS_I¡8
 *
	goutBuf
;

105 
Såög
 
	g¥ogName
 = "app";

106 
Såög
 
	gdecodîName
 = "viddec_copy";

107 
Såög
 
	gícodîName
 = "videnc_copy";

108 
Såög
 
	gígöeName
 = "video_copy";

110 
Såög
 
	gußge
 = "%s: input-file output-file\n";

112 
Void
 
ícode_decode
(
VIDENC_H™dÀ
 
íc
, VIDENC_H™dÀ 
dec
 , 
FILE
 *
ö
,

113 
FILE
 *
out
);

115 
GT_Mask
 
curMask
;

123 
	tBOOL
;

124 
	#TRUE
 1

	)

125 
	#FALSE
 0

	)

126 
	#FILE_VIDEO
 "/dev/video0"

	)

128 
	#IMAGEWIDTH
 320

	)

129 
	#IMAGEHEIGHT
 240

	)

131 
	gfd
;

132 
v4l2_ˇ∑bûôy
 
	gˇp
;

133 
v4l2_fmtdesc
 
	gfmtdesc
;

134 
v4l2_f‹m©
 
	gfmt
,
	gfmèck
;

135 
v4l2_°ªam∑rm
 
	g£tÂs
;

136 
v4l2_ªque°buf„rs
 
	gªq
;

137 
v4l2_buf„r
 
	gbuf
;

138 
v4l2_buf_ty≥
 
	gty≥
;

140 
	sbuf„r


142 * 
	m°¨t
;

143 
	mÀngth
;

144 } * 
	gbuf„rs
;

149 
	g‰ame_buf„r
[
IMAGEWIDTH
*
IMAGEHEIGHT
*3];

150 
	g‰ame_buf„r_gøy
[
IMAGEWIDTH
*
IMAGEHEIGHT
];

156 
I∂Image
 *
	g‰ame
;

157 
I∂Image
 *
	g‰ame_gøy
 = 
NULL
;

158 
I∂Image
 *
	g‰ame_sobñ
 = 
NULL
;

159 
I∂Image
 *
	g‰ame_SmoŸh
 = 
NULL
;

160 
I∂Image
 *
	g‰ame_sobñ_8U
 = 
NULL
;

173 
	$¸óãInFûeIfMissög
–*
öFûeName
 )

175 
i
;

176 
FILE
 *
f
 = 
	`f›í
(
öFûeName
, "rb");

177 i‡(
f
 =
NULL
) {

178 
	`¥ötf
–"I≈uàfûê'%s'ÇŸ found, gíî©ög o√.\n", 
öFûeName
 );

179 
f
 = 
	`f›í
–
öFûeName
, "wb" );

180 
i
 = 0; i < 1024; i++) {

181 
	`fwrôe
–&
i
, –ò), 1, 
f
 );

184 
	`f˛o£
–
f
 );

185 
	}
}

190 
I¡
 
	$smaö
(
I¡
 
¨gc
, 
Såög
 
¨gv
[])

192 
Engöe_H™dÀ
 
˚
 = 
NULL
;

193 
VIDDEC_H™dÀ
 
dec
 = 
NULL
;

194 
VIDENC_H™dÀ
 
íc
 = 
NULL
;

195 
FILE
 *
ö
 = 
NULL
;

196 
FILE
 *
out
 = 
NULL
;

197 
Såög
 
öFûe
, 
outFûe
;

198 
Mem‹y_AŒocP¨ams
 
ÆlocP¨ams
;

200 i‡(
¨gc
 <= 1) {

201 
öFûe
 = "./in.dat";

202 
outFûe
 = "./out.dat";

203 
	`¸óãInFûeIfMissög
(
öFûe
);

205 i‡(
¨gc
 == 3) {

206 
¥ogName
 = 
¨gv
[0];

207 
öFûe
 = 
¨gv
[1];

208 
outFûe
 = 
¨gv
[2];

211 
	`Ârötf
(
°dîr
, 
ußge
, 
¨gv
[0]);

212 
	`exô
(1);

215 
	`GT_0åa˚
(
curMask
, 
GT_1CLASS
, "App-> Application started.\n");

218 
ÆlocP¨ams
.
ty≥
 = 
Mem‹y_CONTIGPOOL
;

219 
ÆlocP¨ams
.
Êags
 = 
Mem‹y_NONCACHED
;

220 
ÆlocP¨ams
.
Æign
 = 
BUFALIGN
;

221 
ÆlocP¨ams
.
£g
 = 0;

223 
öBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
IFRAMESIZE
, &
ÆlocP¨ams
);

224 
ícodedBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
EFRAMESIZE
, &
ÆlocP¨ams
);

225 
outBuf
 = (
XDAS_I¡8
 *)
	`Mem‹y_Æloc
(
OFRAMESIZE
, &
ÆlocP¨ams
);

227 i‡((
öBuf
 =
NULL
Ë|| (
ícodedBuf
 =NULLË|| (
outBuf
 == NULL)) {

228 
íd
;

232 i‡((
ö
 = 
	`f›í
(
öFûe
, "rb")Ë=
NULL
) {

233 
	`¥ötf
("Aµ-> ERROR: c™'àªad fûê%s\n", 
öFûe
);

234 
íd
;

236 i‡((
out
 = 
	`f›í
(
outFûe
, "wb")Ë=
NULL
) {

237 
	`¥ötf
("Aµ-> ERROR: c™'àwrôêtÿfûê%s\n", 
outFûe
);

238 
íd
;

242 i‡((
˚
 = 
	`Engöe_›í
(
ígöeName
, 
NULL
, NULL)) == NULL) {

243 
	`Ârötf
(
°dîr
, "%s:Érror: can't openÉngine %s\n",

244 
¥ogName
, 
ígöeName
);

245 
íd
;

251 
íc
 = 
	`VIDENC_¸óã
(
˚
, 
ícodîName
, 
NULL
);

252 i‡(
íc
 =
NULL
) {

253 
	`Ârötf
(
°dîr
, "%s:Érror: can't open codec %s\n",

254 
¥ogName
, 
ícodîName
);

255 
íd
;

260 
dec
 = 
	`VIDDEC_¸óã
(
˚
, 
decodîName
, 
NULL
);

261 i‡(
dec
 =
NULL
) {

262 
	`¥ötf
–"Aµ-> ERROR: c™'à›í code¯%s\n", 
decodîName
);

263 
íd
;

267 
	`ícode_decode
(
íc
, 
dec
, 
ö
, 
out
);

274 
íd
:

276 i‡(
íc
) {

277 
	`VIDENC_dñëe
(
íc
);

279 i‡(
dec
) {

280 
	`VIDDEC_dñëe
(
dec
);

284 i‡(
˚
) {

285 
	`Engöe_˛o£
(
˚
);

289 i‡(
ö
) {

290 
	`f˛o£
(
ö
);

292 i‡(
out
) {

293 
	`f˛o£
(
out
);

297 i‡(
öBuf
) {

298 
	`Mem‹y_‰ì
(
öBuf
, 
IFRAMESIZE
, &
ÆlocP¨ams
);

300 i‡(
ícodedBuf
) {

301 
	`Mem‹y_‰ì
(
ícodedBuf
, 
EFRAMESIZE
, &
ÆlocP¨ams
);

303 i‡(
outBuf
) {

304 
	`Mem‹y_‰ì
(
outBuf
, 
OFRAMESIZE
, &
ÆlocP¨ams
);

307 
	`GT_0åa˚
(
curMask
, 
GT_1CLASS
, "app done.\n");

309 
	}
}

314 
Void
 
	$ícode_decode
(
VIDENC_H™dÀ
 
íc
,VIDENC_H™dÀ 
dec
 , 
FILE
 *
ö
, FILE *
out
)

316 
I¡
 
n
;

317 
I¡32
 
°©us
;

319 
VIDDEC_InArgs
 
decInArgs
;

320 
VIDDEC_OutArgs
 
decOutArgs
;

321 
VIDDEC_Dy«micP¨ams
 
decDynP¨ams
;

322 
VIDDEC_Sètus
 
decSètus
;

324 
VIDENC_InArgs
 
ícInArgs
;

325 
VIDENC_OutArgs
 
ícOutArgs
;

326 
VIDENC_Dy«micP¨ams
 
ícDynP¨ams
;

327 
VIDENC_Sètus
 
ícSètus
;

329 
XDM_BufDesc
 
öBufDesc
;

330 
XDAS_I¡8
 *
§c
[
XDM_MAX_IO_BUFFERS
];

331 
XDAS_I¡32
 
öBufSizes
[
XDM_MAX_IO_BUFFERS
];

333 
XDM_BufDesc
 
ícodedBufDesc
;

334 
XDAS_I¡8
 *
ícoded
[
XDM_MAX_IO_BUFFERS
];

335 
XDAS_I¡32
 
ícBufSizes
[
XDM_MAX_IO_BUFFERS
];

337 
XDM_BufDesc
 
outBufDesc
;

338 
XDAS_I¡8
 *
d°
[
XDM_MAX_IO_BUFFERS
];

339 
XDAS_I¡32
 
outBufSizes
[
XDM_MAX_IO_BUFFERS
];

342 
	`mem£t
(
§c
, 0, (§c[0]Ë* 
XDM_MAX_IO_BUFFERS
);

343 
	`mem£t
(
ícoded
, 0, ”ncoded[0]Ë* 
XDM_MAX_IO_BUFFERS
);

344 
	`mem£t
(
d°
, 0, (d°[0]Ë* 
XDM_MAX_IO_BUFFERS
);

346 
§c
[0] = 
öBuf
;

347 
ícoded
[0] = 
ícodedBuf
;

348 
d°
[0] = 
outBuf
;

351 
öBufDesc
.
numBufs
 = 
ícodedBufDesc
.numBuf†
outBufDesc
.numBufs = 1;

353 
öBufDesc
.
bufSizes
 = 
öBufSizes
;

354 
ícodedBufDesc
.
bufSizes
 = 
ícBufSizes
;

355 
outBufDesc
.
bufSizes
 = 
outBufSizes
;

357 
öBufSizes
[0] = 
IFRAMESIZE
;

358 
ícBufSizes
[0] = 
EFRAMESIZE
;

359 
outBufSizes
[0] = 
OFRAMESIZE
;

362 
öBufDesc
.
bufs
 = 
§c
;

363 
ícodedBufDesc
.
bufs
 = 
ícoded
;

364 
outBufDesc
.
bufs
 = 
d°
;

367 
ícInArgs
.
size
 = (encInArgs);

368 
decInArgs
.
size
 = (decInArgs);

369 
ícOutArgs
.
size
 = (encOutArgs);

370 
decOutArgs
.
size
 = (decOutArgs);

371 
ícDynP¨ams
.
size
 = (encDynParams);

372 
decDynP¨ams
.
size
 = (decDynParams);

373 
ícSètus
.
size
 = (encStatus);

374 
decSètus
.
size
 = (decStatus);

382 
°©us
 = 
	`VIDENC_c⁄åﬁ
(
íc
, 
XDM_GETSTATUS
, &
ícDynP¨ams
, &
ícSètus
);

383 i‡(
°©us
 !
VIDENC_EOK
) {

385 
	`GT_1åa˚
(
curMask
, 
GT_7CLASS
, "ícodêc⁄åﬁ sètu†0x%x\n", 
°©us
);

390 i‡((
öBufDesc
.
numBufs
 < 
ícSètus
.
bufInfo
.
möNumInBufs
) ||

391 (
IFRAMESIZE
 < 
ícSètus
.
bufInfo
.
möInBufSize
[0]) ||

392 (
ícodedBufDesc
.
numBufs
 < 
ícSètus
.
bufInfo
.
möNumOutBufs
) ||

393 (
EFRAMESIZE
 < 
ícSètus
.
bufInfo
.
möOutBufSize
[0])) {

396 
	`GT_0åa˚
(
curMask
, 
GT_7CLASS
,

406 
°©us
 = 
	`VIDDEC_c⁄åﬁ
(
dec
, 
XDM_GETSTATUS
, &
decDynP¨ams
, &
decSètus
);

407 i‡(
°©us
 !
VIDDEC_EOK
) {

409 
	`GT_1åa˚
(
curMask
, 
GT_7CLASS
, "decodêc⁄åﬁ sètu†0x%x\n", 
°©us
);

414 i‡((
ícodedBufDesc
.
numBufs
 < 
decSètus
.
bufInfo
.
möNumInBufs
) ||

415 (
EFRAMESIZE
 < 
decSètus
.
bufInfo
.
möInBufSize
[0]) ||

416 (
outBufDesc
.
numBufs
 < 
decSètus
.
bufInfo
.
möNumOutBufs
) ||

417 (
OFRAMESIZE
 < 
decSètus
.
bufInfo
.
möOutBufSize
[0])) {

420 
	`GT_0åa˚
(
curMask
, 
GT_7CLASS
,

440 
	`cvNamedWödow
("sobñ",
CV_WINDOW_AUTOSIZE
);

441 
	`cvResizeWödow
("sobel",320,240);

442 
CvSize
 
size
=
	`cvSize
(320,240);

443 
‰ame
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_8U
,3);

444 
‰ame_gøy
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_8U
,1);

445 
‰ame_SmoŸh
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_8U
,1);

446 
‰ame_sobñ
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_16S
,1);

447 
‰ame_sobñ_8U
=
	`cvCª©eImage
(
size
,
IPL_DEPTH_8U
,1);

451 
cou¡
=0;

454 if(
	`öô_v4l2
(Ë=
FALSE
)

456 (
FALSE
);

463 
cou¡
 < 300){

465 
	`v4l2_gøb
();

466 
öBuf
 = (
XDAS_I¡8
*Ë
buf„rs
[0].
°¨t
;

474 #ifde‡
CACHE_ENABLED


475 #ifde‡
xdc_èrgë__ißCom∑tibÀ_64P


483 
	`Mem‹y_ˇcheWbInv
(
öBuf
, 
IFRAMESIZE
);

485 #îr‹ 
UnvÆid©ed
 
c⁄fig
 - 
add
 
≠¥›rüã
 
‰ód
-
ªœãd
 
ˇche
 
maöã«n˚


488 
	`Mem‹y_ˇcheInv
(
ícodedBuf
, 
EFRAMESIZE
);

491 
	`GT_1åa˚
(
curMask
, 
GT_1CLASS
, "Aµ-> Pro˚ssög fømê%d...\n", 
cou¡
);

494 
°©us
 = 
	`VIDENC_¥o˚ss
(
íc
, &
öBufDesc
, &
ícodedBufDesc
, &
ícInArgs
,&
ícOutArgs
);

496 
	`GT_2åa˚
(
curMask
, 
GT_2CLASS
,

498 
cou¡
, 
°©us
);

502 #ifde‡
CACHE_ENABLED


507 
	`Mem‹y_ˇcheWbInv
(
ícodedBuf
, 
EFRAMESIZE
);

510 
	`Mem‹y_ˇcheInv
(
outBuf
, 
OFRAMESIZE
);

513 i‡(
°©us
 !
VIDENC_EOK
) {

514 
	`GT_3åa˚
(
curMask
, 
GT_7CLASS
,

516 "exãndedEº‹ = 0x%x\n", 
cou¡
, 
°©us
, 
ícOutArgs
.
exãndedEº‹
);

526 
°©us
 = 
	`VIDDEC_¥o˚ss
(
dec
, &
ícodedBufDesc
, &
outBufDesc
, &
decInArgs
,

527 &
decOutArgs
);

529 
	`GT_2åa˚
(
curMask
, 
GT_2CLASS
,

531 
n
, 
°©us
);

533 i‡(
°©us
 !
VIDDEC_EOK
) {

534 
	`GT_3åa˚
(
curMask
, 
GT_7CLASS
,

536 "exãndedEº‹ = 0x%x\n", 
n
, 
°©us
, 
decOutArgs
.
exãndedEº‹
);

544 #ifde‡
CACHE_ENABLED


546 
	`Mem‹y_ˇcheWb
(
outBuf
, 
OFRAMESIZE
);

556 
	`mem˝y
(
‰ame
->
imageD©a
 ,(*)
outBuf
 , 320*240);

560 
	`cvShowImage
("sobñ",
‰ame
);

561 
key
=
	`cvWaôKey
(33);

563 
	`¥ötf
("thê%d fømê¨êcom∂ëed \n",
cou¡
);

564 
cou¡
++;

568 
	`cvDe°royWödow
("sobel");

569 
	`cvRñó£Image
(&
‰ame
);

570 
	`cvRñó£Image
(&
‰ame_gøy
);

571 
	`cvRñó£Image
(&
‰ame_SmoŸh
);

572 
	`cvRñó£Image
(&
‰ame_sobñ
);

573 
	`cvRñó£Image
(&
‰ame_sobñ_8U
);

577 
	`GT_1åa˚
(
curMask
, 
GT_1CLASS
, "%d føme†ícoded/decoded\n", 
cou¡
);

578 
	}
}

598 
	$öô_v4l2
()

600 
i
;

601 
ªt
 = 0;

604 i‡((
fd
 = 
	`›í
(
FILE_VIDEO
, 
O_RDWR
)) == -1)

606 
	`¥ötf
("Error opening V4L interface\n");

607  (
FALSE
);

611 i‡(
	`io˘l
(
fd
, 
VIDIOC_QUERYCAP
, &
ˇp
) == -1)

613 
	`¥ötf
("Eº‹ o≥nög devi˚ %s: u«bÀÅÿquîy devi˚.\n",
FILE_VIDEO
);

614  (
FALSE
);

618 
	`¥ötf
("drivî:\t\t%s\n",
ˇp
.
drivî
);

619 
	`¥ötf
("ˇrd:\t\t%s\n",
ˇp
.
ˇrd
);

620 
	`¥ötf
("bus_öfo:\t%s\n",
ˇp
.
bus_öfo
);

621 
	`¥ötf
("vîsi⁄:\t%d\n",
ˇp
.
vîsi⁄
);

622 
	`¥ötf
("ˇ∑bûôõs:\t%x\n",
ˇp
.
ˇ∑bûôõs
);

624 i‡((
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_VIDEO_CAPTURE
) == V4L2_CAP_VIDEO_CAPTURE)

626 
	`¥ötf
("Devi˚ %s: suµ‹t†ˇ±uª.\n",
FILE_VIDEO
);

629 i‡((
ˇp
.
ˇ∑bûôõs
 & 
V4L2_CAP_STREAMING
) == V4L2_CAP_STREAMING)

631 
	`¥ötf
("Devi˚ %s: suµ‹t†°ªamög.\n",
FILE_VIDEO
);

636 
fmtdesc
.
ödex
=0;

637 
fmtdesc
.
ty≥
=
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

638 
	`¥ötf
("Support format:\n");

639 
	`io˘l
(
fd
,
VIDIOC_ENUM_FMT
,&
fmtdesc
)!=-1)

641 
	`¥ötf
("\t%d.%s\n",
fmtdesc
.
ödex
+1,fmtdesc.
des¸ùti⁄
);

642 
fmtdesc
.
ödex
++;

646 
fmt
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

647 
fmt
.fmt.
pix
.
pixñf‹m©
 = 
V4L2_PIX_FMT_YUYV
;

648 
fmt
.fmt.
pix
.
height
 = 
IMAGEHEIGHT
;

649 
fmt
.fmt.
pix
.
width
 = 
IMAGEWIDTH
;

650 
fmt
.fmt.
pix
.
fõld
 = 
V4L2_FIELD_INTERLACED
;

652 if(
	`io˘l
(
fd
, 
VIDIOC_S_FMT
, &
fmt
) == -1)

654 
	`¥ötf
("UnableÅo set format\n");

655  
FALSE
;

657 if(
	`io˘l
(
fd
, 
VIDIOC_G_FMT
, &
fmt
) == -1)

659 
	`¥ötf
("UnableÅo get format\n");

660  
FALSE
;

663 
	`¥ötf
("fmt.ty≥:\t\t%d\n",
fmt
.
ty≥
);

664 
	`¥ötf
("pix.pixñf‹m©:\t%c%c%c%c\n",
fmt
.fmt.
pix
.
pixñf‹m©
 & 0xFF, (fmt.fmt.pix.pixelformat >> 8) & 0xFF,(fmt.fmt.pix.pixelformat >> 16) & 0xFF, (fmt.fmt.pix.pixelformat >> 24) & 0xFF);

665 
	`¥ötf
("pix.height:\t\t%d\n",
fmt
.fmt.
pix
.
height
);

666 
	`¥ötf
("pix.width:\t\t%d\n",
fmt
.fmt.
pix
.
width
);

667 
	`¥ötf
("pix.fõld:\t\t%d\n",
fmt
.fmt.
pix
.
fõld
);

670 
£tÂs
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

671 
£tÂs
.
∑rm
.
ˇ±uª
.
timïî‰ame
.
numî©‹
 = 1;

672 
£tÂs
.
∑rm
.
ˇ±uª
.
timïî‰ame
.
díomö©‹
 = 30;

673 if(-1 =
	`io˘l
(
fd
, 
VIDIOC_S_PARM
, 
£tÂs
)Ë
	`¥ötf
("VIDIOC_S_PARMÉrror");

675 
	`¥ötf
("numî©‹: %d, díomö©‹: %d\n",
£tÂs
.
∑rm
.
ˇ±uª
.
timïî‰ame
.
numî©‹
,£tÂs.∑rm.ˇ±uª.timïî‰ame.
díomö©‹
);

676 
	`¥ötf
("öô %†\t[OK]\n",
FILE_VIDEO
);

678  
TRUE
;

679 
	}
}

683 
	$v4l2_gøb
()

685 
n_buf„rs
;

688 
ªq
.
cou¡
=4;

689 
ªq
.
ty≥
=
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

690 
ªq
.
mem‹y
=
V4L2_MEMORY_MMAP
;

691 if(
	`io˘l
(
fd
,
VIDIOC_REQBUFS
,&
ªq
)==-1)

693 
	`¥ötf
("request for buffersÉrror\n");

697 
buf„rs
 = 
	`mÆloc
(
ªq
.
cou¡
* (*buffers));

698 i‡(!
buf„rs
)

700 
	`¥ötf
 ("Out of memory\n");

701 (
FALSE
);

704 
n_buf„rs
 = 0;Ç_buf„r†< 
ªq
.
cou¡
;Ç_buffers++)

706 
buf
.
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

707 
buf
.
mem‹y
 = 
V4L2_MEMORY_MMAP
;

708 
buf
.
ödex
 = 
n_buf„rs
;

710 i‡(
	`io˘l
 (
fd
, 
VIDIOC_QUERYBUF
, &
buf
) == -1)

712 
	`¥ötf
("query bufferÉrror\n");

713 (
FALSE
);

716 
buf„rs
[
n_buf„rs
].
Àngth
 = 
buf
.length;

718 
buf„rs
[
n_buf„rs
].
°¨t
 = 
	`mm≠
(
NULL
,
buf
.
Àngth
,
PROT_READ
 |
PROT_WRITE
, 
MAP_SHARED
, 
fd
, buf.
m
.
off£t
);

719 i‡(
buf„rs
[
n_buf„rs
].
°¨t
 =
MAP_FAILED
)

721 
	`¥ötf
("buffer mapÉrror\n");

722 (
FALSE
);

727 
n_buf„rs
 = 0;Ç_buf„r†< 
ªq
.
cou¡
;Ç_buffers++)

729 
buf
.
ödex
 = 
n_buf„rs
;

730 
	`io˘l
(
fd
, 
VIDIOC_QBUF
, &
buf
);

733 
ty≥
 = 
V4L2_BUF_TYPE_VIDEO_CAPTURE
;

734 
	`io˘l
 (
fd
, 
VIDIOC_STREAMON
, &
ty≥
);

736 
	`io˘l
(
fd
, 
VIDIOC_DQBUF
, &
buf
);

738 
	`¥ötf
("grab yuyv OK\n");

739 (
TRUE
);

740 
	}
}

744 
	$yuyv_2_rgb888
()

746 
i
,
j
;

747 
y1
,
y2
,
u
,
v
;

748 
r1
,
g1
,
b1
,
r2
,
g2
,
b2
;

749 * 
poöãr
;

751 
poöãr
 = 
buf„rs
[0].
°¨t
;

753 
i
=0;i<
IMAGEHEIGHT
;i++)

755 
j
=0;j<
IMAGEWIDTH
/2;j++)

757 
y1
 = *–
poöãr
 + (
i
*
IMAGEWIDTH
/2+
j
)*4);

758 
u
 = *–
poöãr
 + (
i
*
IMAGEWIDTH
/2+
j
)*4 + 1);

759 
y2
 = *–
poöãr
 + (
i
*
IMAGEWIDTH
/2+
j
)*4 + 2);

760 
v
 = *–
poöãr
 + (
i
*
IMAGEWIDTH
/2+
j
)*4 + 3);

762 
r1
 = 
y1
 + 1.042*(
v
-128);

763 
g1
 = 
y1
 - 0.34414*(
u
-128Ë- 0.71414*(
v
-128);

764 
b1
 = 
y1
 + 1.772*(
u
-128);

766 
r2
 = 
y2
 + 1.042*(
v
-128);

767 
g2
 = 
y2
 - 0.34414*(
u
-128Ë- 0.71414*(
v
-128);

768 
b2
 = 
y2
 + 1.772*(
u
-128);

770 if(
r1
>255)

771 
r1
 = 255;

772 if(
r1
<0)

773 
r1
 = 0;

775 if(
b1
>255)

776 
b1
 = 255;

777 if(
b1
<0)

778 
b1
 = 0;

780 if(
g1
>255)

781 
g1
 = 255;

782 if(
g1
<0)

783 
g1
 = 0;

785 if(
r2
>255)

786 
r2
 = 255;

787 if(
r2
<0)

788 
r2
 = 0;

790 if(
b2
>255)

791 
b2
 = 255;

792 if(
b2
<0)

793 
b2
 = 0;

795 if(
g2
>255)

796 
g2
 = 255;

797 if(
g2
<0)

798 
g2
 = 0;

801 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 ) = ()
b1
;

802 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 1Ë()
g1
;

803 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 2Ë()
r1
;

804 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 3Ë()
b2
;

805 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 4Ë()
g2
;

806 *(
‰ame_buf„r
 + (
i
*
IMAGEWIDTH
/2+
j
)*6 + 5Ë()
r2
;

818 
	`¥ötf
("changeÅo RGB OK \n");

819 
	}
}

822 
	$˛o£_v4l2
()

824 if(
fd
 != -1)

826 
	`˛o£
(
fd
);

827  (
TRUE
);

829  (
FALSE
);

830 
	}
}

	@dualcpu_separateconfig/configured_CE_subsystem/ceapp.c

43 
	~<xdc/°d.h
>

44 
	~<ti/sdo/˚/Engöe.h
>

45 
	~<ti/sdo/˚/video/viddec.h
>

46 
	~<ti/sdo/˚/video/vidíc.h
>

47 
	~<ti/sdo/˚/oßl/Mem‹y.h
>

48 
	~<ti/sdo/˚/CERu¡ime.h
>

49 
	~<ti/sdo/˚/utûs/åa˚/Tø˚Utû.h
>

52 
Såög
 
	gdecodîName
 = "viddec_copy";

53 
Såög
 
	gícodîName
 = "videnc_copy";

54 
Såög
 
	gígöeName
 = "video_copy";

59 
Engöe_H™dÀ
 
	g˚H™dÀ
 = 
NULL
;

60 
VIDDEC_H™dÀ
 
	gdecH™dÀ
 = 
NULL
;

61 
VIDENC_H™dÀ
 
	gícH™dÀ
 = 
NULL
;

66 
	$˚≠p_öô
()

68 
°©us
 = -1;

71 
	`CERu¡ime_öô
();

74 i‡((
˚H™dÀ
 = 
	`Engöe_›í
(
ígöeName
, 
NULL
, NULL)) == NULL) {

75 
	`¥ötf
("CE≠p-> ERROR: c™'à›íÉngöê%s\n", 
ígöeName
);

76 
öô_íd
;

80 
	`Tø˚Utû_°¨t
(
ígöeName
);

83 
ícH™dÀ
 = 
	`VIDENC_¸óã
(
˚H™dÀ
, 
ícodîName
, 
NULL
);

84 i‡(
ícH™dÀ
 =
NULL
) {

85 
	`¥ötf
("CE≠p-> ERROR: c™'à›í code¯%s\n", 
ícodîName
);

86 
öô_íd
;

90 
decH™dÀ
 = 
	`VIDDEC_¸óã
(
˚H™dÀ
, 
decodîName
, 
NULL
);

91 i‡(
decH™dÀ
 =
NULL
) {

92 
	`¥ötf
("CE≠p-> ERROR: c™'à›í code¯%s\n", 
decodîName
);

93 
öô_íd
;

96 
°©us
 = 0;

98 
öô_íd
:

100  
°©us
;

101 
	}
}

107 *
	$˚≠p_ÆlocC⁄tigBuf
(
bufSize
, *
des¸ùti⁄
)

109 *
buf
;

111 
	`¥ötf
("CEapp-> Allocating contiguous buffer for '%s' of size %d...\n",

112 
des¸ùti⁄
, 
bufSize
);

114 
buf
 = (*)
	`Mem‹y_c⁄tigAŒoc
(
bufSize
, 
Mem‹y_DEFAULTALIGNMENT
);

116 i‡(
buf
 =
NULL
) {

117 
	`¥ötf
("CEapp-> ERROR: FailedÅoállocate contiguous memory block.\n");

120  (
buf
);

121 
	}
}

127 
	$˚≠p_vÆid©eBufSizes
(
öBufSize
, 
ícodedBufSize
, 
outBufSize
)

129 
VIDDEC_Dy«micP¨ams
 
decDynP¨ams
;

130 
VIDENC_Dy«micP¨ams
 
ícDynP¨ams
;

131 
VIDENC_Sètus
 
ícSètus
;

132 
VIDDEC_Sètus
 
decSètus
;

134 
I¡32
 
°©us
;

135 
ªtvÆ
 = -1;

143 
ícSètus
.
size
 = (encStatus);

144 
ícDynP¨ams
.
size
 = (encDynParams);

146 
°©us
 = 
	`VIDENC_c⁄åﬁ
(
ícH™dÀ
, 
XDM_GETSTATUS
, &
ícDynP¨ams
,

147 &
ícSètus
);

149 i‡(
°©us
 !
VIDENC_EOK
) {

150 
	`¥ötf
("CE≠p-> VideÿEncodî c⁄åﬁ FAILED, sètu†%ld\n", 
°©us
);

151 
vÆid©e_íd
;

155 if((
ícSètus
.
bufInfo
.
möNumInBufs
 > 1) ||

156 (
ícSètus
.
bufInfo
.
möInBufSize
[0] > 
öBufSize
) ||

157 (
ícSètus
.
bufInfo
.
möNumOutBufs
 > 1) ||

158 (
ícSètus
.
bufInfo
.
möOutBufSize
[0] > 
ícodedBufSize
)) {

159 
	`¥ötf
("CEapp-> ERROR:Éncoder doesÇot meet bufferÑequirements.\n");

160 
vÆid©e_íd
;

163 
decSètus
.
size
 = (decStatus);

164 
decDynP¨ams
.
size
 = (decDynParams);

166 
°©us
 = 
	`VIDDEC_c⁄åﬁ
(
decH™dÀ
, 
XDM_GETSTATUS
, &
decDynP¨ams
,

167 &
decSètus
);

168 i‡(
°©us
 !
VIDDEC_EOK
) {

169 
	`¥ötf
("CE≠p-> VideÿDecodî c⁄åﬁ FAILED, sètu†%ld\n", 
°©us
);

170 
vÆid©e_íd
;

174 if((
decSètus
.
bufInfo
.
möNumInBufs
 > 1) ||

175 (
decSètus
.
bufInfo
.
möInBufSize
[0] > 
ícodedBufSize
) ||

176 (
decSètus
.
bufInfo
.
möNumOutBufs
 > 1) ||

177 (
decSètus
.
bufInfo
.
möOutBufSize
[0] > 
outBufSize
)) {

178 
	`¥ötf
("CEapp-> ERROR: decoder doesÇot meet bufferÑequirements.\n");

179 
vÆid©e_íd
;

182 
ªtvÆ
 = 0;

184 
vÆid©e_íd
:

186  (
ªtvÆ
);

188 
	}
}

194 
	$˚≠p_ícodeBuf
(*
öBuf
, 
öBufSize
,

195 *
ícodedBuf
, 
ícodedBufSize
)

198 
XDM_BufDesc
 
öBufDesc
;

199 
XDM_BufDesc
 
ícodedBufDesc
;

202 
VIDENC_InArgs
 
ícodîInArgs
;

203 
VIDENC_OutArgs
 
ícodîOutArgs
;

206 
XDAS_I¡8
* 
öBufs
 [ 
XDM_MAX_IO_BUFFERS
 ];

207 
XDAS_I¡32
 
öBufSizes
 [ 
XDM_MAX_IO_BUFFERS
 ];

208 
XDAS_I¡8
* 
ícodedBufs
 [ 
XDM_MAX_IO_BUFFERS
 ];

209 
XDAS_I¡32
 
ícodedBufSizes
[ 
XDM_MAX_IO_BUFFERS
 ];

211 
I¡32
 
°©us
;

212 
ªtvÆ
 = -1;

215 
öBufs
[0] = 
öBuf
;

216 
öBufSizes
[0] = 
öBufSize
;

217 
ícodedBufs
[0] = 
ícodedBuf
;

218 
ícodedBufSizes
[0] = 
ícodedBufSize
;

221 
öBufDesc
.
numBufs
 = 1;

222 
öBufDesc
.
bufs
 = 
öBufs
;

223 
öBufDesc
.
bufSizes
 = 
öBufSizes
;

224 
ícodedBufDesc
.
numBufs
 = 1;

225 
ícodedBufDesc
.
bufs
 = 
ícodedBufs
;

226 
ícodedBufDesc
.
bufSizes
 = 
ícodedBufSizes
;

229 
ícodîInArgs
.
size
 = (encoderInArgs);

230 
ícodîOutArgs
.
size
 = (encoderOutArgs);

233 
°©us
 = 
	`VIDENC_¥o˚ss
(
ícH™dÀ
, &
öBufDesc
, &
ícodedBufDesc
,

234 &
ícodîInArgs
, &
ícodîOutArgs
);

236 i‡(
°©us
 =
VIDENC_EOK
) {

237 
ªtvÆ
 = 0;

240 
	`¥ötf
("CEapp-> VIDENC_process() failed, status = 0x%lx, "

241 "exãndedEº‹ = 0x%lx\n", 
°©us
, 
ícodîOutArgs
.
exãndedEº‹
);

244  
ªtvÆ
;

245 
	}
}

251 
	$˚≠p_decodeBuf
(*
ícodedBuf
, 
ícodedBufSize
,

252 *
outBuf
, 
outBufSize
)

254 
XDM_BufDesc
 
ícodedBufDesc
;

255 
XDM_BufDesc
 
outBufDesc
;

257 
VIDDEC_InArgs
 
decodîInArgs
;

258 
VIDDEC_OutArgs
 
decodîOutArgs
;

260 
I¡32
 
°©us
;

261 
ªtvÆ
 = -1;

263 
XDAS_I¡8
* 
ícodedBufs
 [ 
XDM_MAX_IO_BUFFERS
 ];

264 
XDAS_I¡32
 
ícodedBufSizes
[ 
XDM_MAX_IO_BUFFERS
 ];

265 
XDAS_I¡8
* 
outBufs
 [ 
XDM_MAX_IO_BUFFERS
 ];

266 
XDAS_I¡32
 
outBufSizes
 [ 
XDM_MAX_IO_BUFFERS
 ];

268 
ícodedBufs
[0] = 
ícodedBuf
;

269 
ícodedBufSizes
[0] = 
ícodedBufSize
;

270 
outBufs
[0] = 
outBuf
;

271 
outBufSizes
[0] = 
outBufSize
;

273 
ícodedBufDesc
.
numBufs
 = 1;

274 
ícodedBufDesc
.
bufs
 = 
ícodedBufs
;

275 
ícodedBufDesc
.
bufSizes
 = 
ícodedBufSizes
;

276 
outBufDesc
.
numBufs
 = 1;

277 
outBufDesc
.
bufs
 = 
outBufs
;

278 
outBufDesc
.
bufSizes
 = 
outBufSizes
;

280 
decodîInArgs
.
size
 = (decoderInArgs);

281 
decodîOutArgs
.
size
 = (decoderOutArgs);

283 
°©us
 = 
	`VIDDEC_¥o˚ss
(
decH™dÀ
, &
ícodedBufDesc
, &
outBufDesc
,

284 &
decodîInArgs
, &
decodîOutArgs
);

286 i‡(
°©us
 =
VIDDEC_EOK
) {

287 
ªtvÆ
 = 0;

290 
	`¥ötf
("CEapp-> VIDDEC_process() failed, status = 0x%lx, "

291 "exãndedEº‹ = 0x%lx\n", 
°©us
, 
decodîOutArgs
.
exãndedEº‹
);

294  (
ªtvÆ
);

295 
	}
}

301 
	$˚≠p_‰ìC⁄tigBuf
(*
buf
, 
bufSize
)

303 
	`Mem‹y_c⁄tigFªe
(
buf
, 
bufSize
);

304 
	}
}

310 
	$˚≠p_exô
()

313 i‡(
ícH™dÀ
 !
NULL
) {

314 
	`VIDENC_dñëe
(
ícH™dÀ
);

316 i‡(
decH™dÀ
 !
NULL
) {

317 
	`VIDDEC_dñëe
(
decH™dÀ
);

319 
	`Tø˚Utû_°›
();

320 i‡(
˚H™dÀ
 !
NULL
) {

321 
	`Engöe_˛o£
(
˚H™dÀ
);

323 
	}
}

	@dualcpu_separateconfig/configured_CE_subsystem/ceapp.h

33 #i‚de‡
_CEAPP_H_


34 
	#_CEAPP_H_


	)

40 
˚≠p_öô
();

42 *
˚≠p_ÆlocC⁄tigBuf
(

43 
bufSize
,

44 *
bufDes¸ùti⁄


47 
˚≠p_vÆid©eBufSizes
(

48 
öBufSize
,

49 
ícodedBufSize
,

50 
outBufSize


53 
˚≠p_ícodeBuf
(

54 *
öBuf
,

55 
öBufSize
,

56 *
ícodedBuf
,

57 
ícodedBufSize


60 
˚≠p_decodeBuf
(

61 *
ícodedBuf
,

62 
ícodedBufSize
,

63 *
outBuf
,

64 
outBufSize


67 
˚≠p_‰ìC⁄tigBuf
(

68 *
buf
,

69 
bufSize


72 
˚≠p_exô
();

	@dualcpu_separateconfig/enduser_app/app.c

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

47 
	~"../c⁄figuªd_CE_subsy°em/˚≠p.h
"

71 
	#INFRAMESIZE
 (1024 * ()Ë

	)

72 
	#ENCODEDFRAMESIZE
 (1024 * ()Ë

	)

73 
	#OUTFRAMESIZE
 (1024 * ()Ë

	)

81 
	$ícodeDecodeFûe
(*
öFûeName
, *
outFûeName
)

84 *
öBuf
 = 
NULL
;

85 *
ícodedBuf
 = 
NULL
;

86 *
outBuf
 = 
NULL
;

88 
FILE
 *
öFûe
 = 
NULL
, *
outFûe
 = NULL;

89 
°©us
, 
n
;

92 i‡((
öFûe
 = 
	`f›í
(
öFûeName
, "rb")Ë=
NULL
) {

93 
	`¥ötf
("Aµ-> ERROR: c™'àªad fûê%s\n", 
öFûeName
);

94 
	`exô
(1);

96 i‡((
outFûe
 = 
	`f›í
(
outFûeName
, "wb")Ë=
NULL
) {

97 
	`¥ötf
("Aµ-> ERROR: c™'àwrôêtÿfûê%s\n", 
outFûeName
);

98 
	`exô
(1);

102 
°©us
 = 
	`˚≠p_öô
();

104 i‡(
°©us
 != 0) {

105 
íd
;

118 
öBuf
 = 
	`˚≠p_ÆlocC⁄tigBuf
(
INFRAMESIZE
, "input data");

119 
ícodedBuf
 = 
	`˚≠p_ÆlocC⁄tigBuf
(
ENCODEDFRAMESIZE
, "encoded data");

120 
outBuf
 = 
	`˚≠p_ÆlocC⁄tigBuf
(
OUTFRAMESIZE
, "output data");

122 i‡(
öBuf
 =
NULL
 || 
ícodedBuf
 =NULL || 
outBuf
 == NULL) {

123 
	`¥ötf
("App-> Errorállocating buffers (%p, %p, %p)!\n",

124 
öBuf
, 
ícodedBuf
, 
outBuf
);

125 
°©us
 = -1;

126 
íd
;

134 
°©us
 = 
	`˚≠p_vÆid©eBufSizes
(
INFRAMESIZE
, 
ENCODEDFRAMESIZE
,

135 
OUTFRAMESIZE
);

136 i‡(
°©us
 != 0) {

137 
íd
;

144 
n
 = 0 ;;Ç++) {

145 
	`¥ötf
("Aµ-> Pro˚ssög fømê%d...\n", 
n
);

147 i‡(
	`‰ód
(
öBuf
, 
INFRAMESIZE
, 1, 
öFûe
) == 0) {

151 
°©us
 = 
	`˚≠p_ícodeBuf
(
öBuf
, 
INFRAMESIZE
,

152 
ícodedBuf
, 
ENCODEDFRAMESIZE
);

153 if(
°©us
 != 0) {

154 
	`¥ötf
("Aµ-> ERROR: Encodög fømê%d FAILED\n", 
n
);

155 
íd
;

158 
°©us
 = 
	`˚≠p_decodeBuf
(
ícodedBuf
, 
ENCODEDFRAMESIZE
,

159 
outBuf
, 
OUTFRAMESIZE
);

160 i‡(
°©us
 != 0) {

161 
	`¥ötf
("Aµ-> ERROR: Decodög fømê%d FAILED\n", 
n
);

162 
íd
;

166 
	`fwrôe
(
outBuf
, 
OUTFRAMESIZE
, 1, 
outFûe
);

169 
	`¥ötf
("Aµ-> FöishedÉncodögánd decodög %d fømes\n", 
n
);

171 
°©us
 = 0;

173 
íd
:

175 
	`f˛o£
(
öFûe
);

176 
	`f˛o£
(
outFûe
);

179 i‡(
öBuf
 !
NULL
) {

180 
	`˚≠p_‰ìC⁄tigBuf
(
öBuf
, 
INFRAMESIZE
);

182 i‡(
ícodedBuf
 !
NULL
) {

183 
	`˚≠p_‰ìC⁄tigBuf
(
ícodedBuf
, 
ENCODEDFRAMESIZE
);

185 i‡(
outBuf
 !
NULL
) {

186 
	`˚≠p_‰ìC⁄tigBuf
(
outBuf
, 
OUTFRAMESIZE
);

190 
	`˚≠p_exô
();

193  
°©us
;

194 
	}
}

200 
	$¸óãInFûeIfMissög
–*
öFûeName
 )

202 
i
;

203 
FILE
 *
f
 = 
	`f›í
(
öFûeName
, "rb");

204 i‡(
f
 =
NULL
) {

205 
	`¥ötf
–"I≈uàfûê'%s'ÇŸ found, gíî©ög o√.\n", 
öFûeName
 );

206 
f
 = 
	`f›í
–
öFûeName
, "wb" );

207 
i
 = 0; i < 1024; i++) {

208 
	`fwrôe
–&
i
, –ò), 1, 
f
 );

211 
	`f˛o£
–
f
 );

212 
	}
}

217 
	$maö
(
¨gc
, *
¨gv
[])

219 *
öFûeName
, *
outFûeName
;

221 i‡(
¨gc
 <= 1) {

222 
öFûeName
 = "in.dat";

223 
outFûeName
 = "out.dat";

224 
	`¸óãInFûeIfMissög
(
öFûeName
);

226 i‡(
¨gc
 != 3 &&árgc != 4) {

227 
	`¥ötf
("Ußge: %†öput-fûêouçut-fûe\n", 
¨gv
[0]);

228 
	`exô
(1);

231 
öFûeName
 = 
¨gv
[1];

232 
outFûeName
 = 
¨gv
[2];

235 
	`¥ötf
("App-> Application started.\n");

237 i‡(
	`ícodeDecodeFûe
(
öFûeName
, 
outFûeName
) == 0) {

238 
	`¥ötf
("App-> Application finished successfully.\n");

241 
	`¥ötf
("App-> Application FAILED.\n");

245 
	}
}

	@dualcpu_separateconfig_dll/configured_CE_subsystem/ceapp.c

43 
	~<xdc/°d.h
>

44 
	~<ti/sdo/˚/Engöe.h
>

45 
	~<ti/sdo/˚/video/viddec.h
>

46 
	~<ti/sdo/˚/video/vidíc.h
>

47 
	~<ti/sdo/˚/oßl/Mem‹y.h
>

48 
	~<ti/sdo/˚/CERu¡ime.h
>

49 
	~<ti/sdo/˚/utûs/åa˚/Tø˚Utû.h
>

52 
Såög
 
	gdecodîName
 = "viddec_copy";

53 
Såög
 
	gícodîName
 = "videnc_copy";

54 
Såög
 
	gígöeName
 = "video_copy";

59 
Engöe_H™dÀ
 
	g˚H™dÀ
 = 
NULL
;

60 
VIDDEC_H™dÀ
 
	gdecH™dÀ
 = 
NULL
;

61 
VIDENC_H™dÀ
 
	gícH™dÀ
 = 
NULL
;

66 
	$˚≠p_öô
()

68 
°©us
 = -1;

71 
	`CERu¡ime_öô
();

74 i‡((
˚H™dÀ
 = 
	`Engöe_›í
(
ígöeName
, 
NULL
, NULL)) == NULL) {

75 
	`¥ötf
("CE≠p-> ERROR: c™'à›íÉngöê%s\n", 
ígöeName
);

76 
öô_íd
;

80 
	`Tø˚Utû_°¨t
(
ígöeName
);

83 
ícH™dÀ
 = 
	`VIDENC_¸óã
(
˚H™dÀ
, 
ícodîName
, 
NULL
);

84 i‡(
ícH™dÀ
 =
NULL
) {

85 
	`¥ötf
("CE≠p-> ERROR: c™'à›í code¯%s\n", 
ícodîName
);

86 
öô_íd
;

90 
decH™dÀ
 = 
	`VIDDEC_¸óã
(
˚H™dÀ
, 
decodîName
, 
NULL
);

91 i‡(
decH™dÀ
 =
NULL
) {

92 
	`¥ötf
("CE≠p-> ERROR: c™'à›í code¯%s\n", 
decodîName
);

93 
öô_íd
;

96 
°©us
 = 0;

98 
öô_íd
:

100  
°©us
;

101 
	}
}

107 *
	$˚≠p_ÆlocC⁄tigBuf
(
bufSize
, *
des¸ùti⁄
)

109 *
buf
;

111 
	`¥ötf
("CEapp-> Allocating contiguous buffer for '%s' of size %d...\n",

112 
des¸ùti⁄
, 
bufSize
);

114 
buf
 = (*)
	`Mem‹y_c⁄tigAŒoc
(
bufSize
, 
Mem‹y_DEFAULTALIGNMENT
);

116 i‡(
buf
 =
NULL
) {

117 
	`¥ötf
("CEapp-> ERROR: FailedÅoállocate contiguous memory block.\n");

120  (
buf
);

121 
	}
}

127 
	$˚≠p_vÆid©eBufSizes
(
öBufSize
, 
ícodedBufSize
, 
outBufSize
)

129 
VIDDEC_Dy«micP¨ams
 
decDynP¨ams
;

130 
VIDENC_Dy«micP¨ams
 
ícDynP¨ams
;

131 
VIDENC_Sètus
 
ícSètus
;

132 
VIDDEC_Sètus
 
decSètus
;

134 
I¡32
 
°©us
;

135 
ªtvÆ
 = -1;

143 
ícSètus
.
size
 = (encStatus);

144 
ícDynP¨ams
.
size
 = (encDynParams);

146 
°©us
 = 
	`VIDENC_c⁄åﬁ
(
ícH™dÀ
, 
XDM_GETSTATUS
, &
ícDynP¨ams
,

147 &
ícSètus
);

149 i‡(
°©us
 !
VIDENC_EOK
) {

150 
	`¥ötf
("CE≠p-> VideÿEncodî c⁄åﬁ FAILED, sètu†%ld\n", 
°©us
);

151 
vÆid©e_íd
;

155 if((
ícSètus
.
bufInfo
.
möNumInBufs
 > 1) ||

156 (
ícSètus
.
bufInfo
.
möInBufSize
[0] > 
öBufSize
) ||

157 (
ícSètus
.
bufInfo
.
möNumOutBufs
 > 1) ||

158 (
ícSètus
.
bufInfo
.
möOutBufSize
[0] > 
ícodedBufSize
)) {

159 
	`¥ötf
("CEapp-> ERROR:Éncoder doesÇot meet bufferÑequirements.\n");

160 
vÆid©e_íd
;

163 
decSètus
.
size
 = (decStatus);

164 
decDynP¨ams
.
size
 = (decDynParams);

166 
°©us
 = 
	`VIDDEC_c⁄åﬁ
(
decH™dÀ
, 
XDM_GETSTATUS
, &
decDynP¨ams
,

167 &
decSètus
);

168 i‡(
°©us
 !
VIDDEC_EOK
) {

169 
	`¥ötf
("CE≠p-> VideÿDecodî c⁄åﬁ FAILED, sètu†%ld\n", 
°©us
);

170 
vÆid©e_íd
;

174 if((
decSètus
.
bufInfo
.
möNumInBufs
 > 1) ||

175 (
decSètus
.
bufInfo
.
möInBufSize
[0] > 
ícodedBufSize
) ||

176 (
decSètus
.
bufInfo
.
möNumOutBufs
 > 1) ||

177 (
decSètus
.
bufInfo
.
möOutBufSize
[0] > 
outBufSize
)) {

178 
	`¥ötf
("CEapp-> ERROR: decoder doesÇot meet bufferÑequirements.\n");

179 
vÆid©e_íd
;

182 
ªtvÆ
 = 0;

184 
vÆid©e_íd
:

186  (
ªtvÆ
);

188 
	}
}

194 
	$˚≠p_ícodeBuf
(*
öBuf
, 
öBufSize
,

195 *
ícodedBuf
, 
ícodedBufSize
)

198 
XDM_BufDesc
 
öBufDesc
;

199 
XDM_BufDesc
 
ícodedBufDesc
;

202 
VIDENC_InArgs
 
ícodîInArgs
;

203 
VIDENC_OutArgs
 
ícodîOutArgs
;

206 
XDAS_I¡8
* 
öBufs
 [ 
XDM_MAX_IO_BUFFERS
 ];

207 
XDAS_I¡32
 
öBufSizes
 [ 
XDM_MAX_IO_BUFFERS
 ];

208 
XDAS_I¡8
* 
ícodedBufs
 [ 
XDM_MAX_IO_BUFFERS
 ];

209 
XDAS_I¡32
 
ícodedBufSizes
[ 
XDM_MAX_IO_BUFFERS
 ];

211 
I¡32
 
°©us
;

212 
ªtvÆ
 = -1;

215 
öBufs
[0] = 
öBuf
;

216 
öBufSizes
[0] = 
öBufSize
;

217 
ícodedBufs
[0] = 
ícodedBuf
;

218 
ícodedBufSizes
[0] = 
ícodedBufSize
;

221 
öBufDesc
.
numBufs
 = 1;

222 
öBufDesc
.
bufs
 = 
öBufs
;

223 
öBufDesc
.
bufSizes
 = 
öBufSizes
;

224 
ícodedBufDesc
.
numBufs
 = 1;

225 
ícodedBufDesc
.
bufs
 = 
ícodedBufs
;

226 
ícodedBufDesc
.
bufSizes
 = 
ícodedBufSizes
;

229 
ícodîInArgs
.
size
 = (encoderInArgs);

230 
ícodîOutArgs
.
size
 = (encoderOutArgs);

233 
°©us
 = 
	`VIDENC_¥o˚ss
(
ícH™dÀ
, &
öBufDesc
, &
ícodedBufDesc
,

234 &
ícodîInArgs
, &
ícodîOutArgs
);

236 i‡(
°©us
 =
VIDENC_EOK
) {

237 
ªtvÆ
 = 0;

240 
	`¥ötf
("CEapp-> VIDENC_process() failed, status = 0x%lx, "

241 "exãndedEº‹ = 0x%lx\n", 
°©us
, 
ícodîOutArgs
.
exãndedEº‹
);

244  
ªtvÆ
;

245 
	}
}

251 
	$˚≠p_decodeBuf
(*
ícodedBuf
, 
ícodedBufSize
,

252 *
outBuf
, 
outBufSize
)

254 
XDM_BufDesc
 
ícodedBufDesc
;

255 
XDM_BufDesc
 
outBufDesc
;

257 
VIDDEC_InArgs
 
decodîInArgs
;

258 
VIDDEC_OutArgs
 
decodîOutArgs
;

260 
I¡32
 
°©us
;

261 
ªtvÆ
 = -1;

263 
XDAS_I¡8
* 
ícodedBufs
 [ 
XDM_MAX_IO_BUFFERS
 ];

264 
XDAS_I¡32
 
ícodedBufSizes
[ 
XDM_MAX_IO_BUFFERS
 ];

265 
XDAS_I¡8
* 
outBufs
 [ 
XDM_MAX_IO_BUFFERS
 ];

266 
XDAS_I¡32
 
outBufSizes
 [ 
XDM_MAX_IO_BUFFERS
 ];

268 
ícodedBufs
[0] = 
ícodedBuf
;

269 
ícodedBufSizes
[0] = 
ícodedBufSize
;

270 
outBufs
[0] = 
outBuf
;

271 
outBufSizes
[0] = 
outBufSize
;

273 
ícodedBufDesc
.
numBufs
 = 1;

274 
ícodedBufDesc
.
bufs
 = 
ícodedBufs
;

275 
ícodedBufDesc
.
bufSizes
 = 
ícodedBufSizes
;

276 
outBufDesc
.
numBufs
 = 1;

277 
outBufDesc
.
bufs
 = 
outBufs
;

278 
outBufDesc
.
bufSizes
 = 
outBufSizes
;

280 
decodîInArgs
.
size
 = (decoderInArgs);

281 
decodîOutArgs
.
size
 = (decoderOutArgs);

283 
°©us
 = 
	`VIDDEC_¥o˚ss
(
decH™dÀ
, &
ícodedBufDesc
, &
outBufDesc
,

284 &
decodîInArgs
, &
decodîOutArgs
);

286 i‡(
°©us
 =
VIDDEC_EOK
) {

287 
ªtvÆ
 = 0;

290 
	`¥ötf
("CEapp-> VIDDEC_process() failed, status = 0x%lx, "

291 "exãndedEº‹ = 0x%lx\n", 
°©us
, 
decodîOutArgs
.
exãndedEº‹
);

294  (
ªtvÆ
);

295 
	}
}

301 
	$˚≠p_‰ìC⁄tigBuf
(*
buf
, 
bufSize
)

303 
	`Mem‹y_c⁄tigFªe
(
buf
, 
bufSize
);

304 
	}
}

310 
	$˚≠p_exô
()

313 i‡(
ícH™dÀ
 !
NULL
) {

314 
	`VIDENC_dñëe
(
ícH™dÀ
);

316 i‡(
decH™dÀ
 !
NULL
) {

317 
	`VIDDEC_dñëe
(
decH™dÀ
);

319 
	`Tø˚Utû_°›
();

320 i‡(
˚H™dÀ
 !
NULL
) {

321 
	`Engöe_˛o£
(
˚H™dÀ
);

325 
	`CERu¡ime_exô
();

326 
	}
}

	@dualcpu_separateconfig_dll/enduser_app/app.c

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

45 
	~<dlf˙.h
>

48 
	#NUMTIMESTORUN
 3

	)

72 
	#INFRAMESIZE
 (1024 * ()Ë

	)

73 
	#ENCODEDFRAMESIZE
 (1024 * ()Ë

	)

74 
	#OUTFRAMESIZE
 (1024 * ()Ë

	)

82 
	$ícodeDecodeFûe
(*
öFûeName
, *
outFûeName
)

85 *
öBuf
 = 
NULL
;

86 *
ícodedBuf
 = 
NULL
;

87 *
outBuf
 = 
NULL
;

90 c⁄° *
dŒName
 = "./configured_CE_subsystem.so";

93 *
˚≠pDŒH™dÀ
;

98 (*
fxn_˚≠p_öô
)();

99 *(*
fxn_˚≠p_ÆlocC⁄tigBuf
)(

100 
bufSize
,

101 *
bufDes¸ùti⁄


103 (*
fxn_˚≠p_vÆid©eBufSizes
)(

104 
öBufSize
,

105 
ícodedBufSize
,

106 
outBufSize


108 (*
fxn_˚≠p_ícodeBuf
)(

109 *
öBuf
,

110 
öBufSize
,

111 *
ícodedBuf
,

112 
ícodedBufSize


114 (*
fxn_˚≠p_decodeBuf
)(

115 *
ícodedBuf
,

116 
ícodedBufSize
,

117 *
outBuf
,

118 
outBufSize


120 (*
fxn_˚≠p_‰ìC⁄tigBuf
)(

121 *
buf
,

122 
bufSize


124 (*
fxn_˚≠p_exô
)();

126 
FILE
 *
öFûe
 = 
NULL
, *
outFûe
 = NULL;

127 
°©us
, 
n
;

128 *
îr‹
;

131 i‡((
öFûe
 = 
	`f›í
(
öFûeName
, "rb")Ë=
NULL
) {

132 
	`¥ötf
("Aµ-> ERROR: c™'àªad fûê%s\n", 
öFûeName
);

133 
	`exô
(1);

135 i‡((
outFûe
 = 
	`f›í
(
outFûeName
, "wb")Ë=
NULL
) {

136 
	`¥ötf
("Aµ-> ERROR: c™'àwrôêtÿfûê%s\n", 
outFûeName
);

137 
	`exô
(1);

141 
˚≠pDŒH™dÀ
 = 
	`dl›í
–
dŒName
, 
RTLD_LAZY
 );

144 
	#CHECK_DLERROR
(Ëi‡((
îr‹
 = 
	`dÀº‹
()Ë!
NULL
) { \

145 
	`¥ötf
–"%s\n", 
îr‹
 ); 
	`exô
–1 ); }

	)

147 
	`CHECK_DLERROR
();

149 
	`¥ötf
–"DLL '%s' suc˚ssfuŒyÜﬂded\n", 
dŒName
 );

151 
fxn_˚≠p_öô
 = 
	`dlsym
–
˚≠pDŒH™dÀ
, "ceapp_init" );

152 
	`CHECK_DLERROR
();

153 
fxn_˚≠p_ÆlocC⁄tigBuf
 = 
	`dlsym
–
˚≠pDŒH™dÀ
, "ceapp_allocContigBuf" );

154 
	`CHECK_DLERROR
();

155 
fxn_˚≠p_vÆid©eBufSizes
 = 
	`dlsym
–
˚≠pDŒH™dÀ
, "ceapp_validateBufSizes" );

156 
	`CHECK_DLERROR
();

157 
fxn_˚≠p_ícodeBuf
 = 
	`dlsym
–
˚≠pDŒH™dÀ
, "ceapp_encodeBuf" );

158 
	`CHECK_DLERROR
();

159 
fxn_˚≠p_decodeBuf
 = 
	`dlsym
–
˚≠pDŒH™dÀ
, "ceapp_decodeBuf" );

160 
	`CHECK_DLERROR
();

161 
fxn_˚≠p_‰ìC⁄tigBuf
 = 
	`dlsym
–
˚≠pDŒH™dÀ
, "ceapp_freeContigBuf" );

162 
	`CHECK_DLERROR
();

163 
fxn_˚≠p_exô
 = 
	`dlsym
–
˚≠pDŒH™dÀ
, "ceapp_exit" );

164 
	`CHECK_DLERROR
();

167 
°©us
 = (*
fxn_˚≠p_öô
)();

169 i‡(
°©us
 != 0) {

170 
íd
;

183 
öBuf
 = (*
fxn_˚≠p_ÆlocC⁄tigBuf
)(
INFRAMESIZE
, "input data");

184 
ícodedBuf
 = (*
fxn_˚≠p_ÆlocC⁄tigBuf
)(
ENCODEDFRAMESIZE
, "encoded data");

185 
outBuf
 = (*
fxn_˚≠p_ÆlocC⁄tigBuf
)(
OUTFRAMESIZE
, "output data");

187 i‡(
öBuf
 =
NULL
 || 
ícodedBuf
 =NULL || 
outBuf
 == NULL) {

188 
	`¥ötf
("App-> Errorállocating buffers (%p, %p, %p)!\n",

189 
öBuf
, 
ícodedBuf
, 
outBuf
);

190 
°©us
 = -1;

191 
íd
;

199 
°©us
 = (*
fxn_˚≠p_vÆid©eBufSizes
)(
INFRAMESIZE
, 
ENCODEDFRAMESIZE
,

200 
OUTFRAMESIZE
);

201 i‡(
°©us
 != 0) {

202 
íd
;

209 
n
 = 0 ;;Ç++) {

210 
	`¥ötf
("Aµ-> Pro˚ssög fømê%d...\n", 
n
);

212 i‡(
	`‰ód
(
öBuf
, 
INFRAMESIZE
, 1, 
öFûe
) == 0) {

216 
°©us
 = (*
fxn_˚≠p_ícodeBuf
)(
öBuf
, 
INFRAMESIZE
,

217 
ícodedBuf
, 
ENCODEDFRAMESIZE
);

218 if(
°©us
 != 0) {

219 
	`¥ötf
("Aµ-> ERROR: Encodög fømê%d FAILED\n", 
n
);

220 
íd
;

223 
°©us
 = (*
fxn_˚≠p_decodeBuf
)(
ícodedBuf
, 
ENCODEDFRAMESIZE
,

224 
outBuf
, 
OUTFRAMESIZE
);

225 i‡(
°©us
 != 0) {

226 
	`¥ötf
("Aµ-> ERROR: Decodög fømê%d FAILED\n", 
n
);

227 
íd
;

231 
	`fwrôe
(
outBuf
, 
OUTFRAMESIZE
, 1, 
outFûe
);

234 
	`¥ötf
("Aµ-> FöishedÉncodögánd decodög %d fømes\n", 
n
);

236 
°©us
 = 0;

238 
íd
:

240 
	`f˛o£
(
öFûe
);

241 
	`f˛o£
(
outFûe
);

244 i‡(
öBuf
 !
NULL
) {

245 (*
fxn_˚≠p_‰ìC⁄tigBuf
)(
öBuf
, 
INFRAMESIZE
);

247 i‡(
ícodedBuf
 !
NULL
) {

248 (*
fxn_˚≠p_‰ìC⁄tigBuf
)(
ícodedBuf
, 
ENCODEDFRAMESIZE
);

250 i‡(
outBuf
 !
NULL
) {

251 (*
fxn_˚≠p_‰ìC⁄tigBuf
)(
outBuf
, 
OUTFRAMESIZE
);

255 (*
fxn_˚≠p_exô
)();

258 #w¨nög 
nŸ
 
doög
 
	`dl˛o£
(), 
£gÁu…s
 
whí
 do... 
bug
 
beög
 
examöed


265  
°©us
;

266 
	}
}

272 
	$¸óãInFûeIfMissög
–*
öFûeName
 )

274 
i
;

275 
FILE
 *
f
 = 
	`f›í
(
öFûeName
, "rb");

276 i‡(
f
 =
NULL
) {

277 
	`¥ötf
–"I≈uàfûê'%s'ÇŸ found, gíî©ög o√.\n", 
öFûeName
 );

278 
f
 = 
	`f›í
–
öFûeName
, "wb" );

279 
i
 = 0; i < 1024; i++) {

280 
	`fwrôe
–&
i
, –ò), 1, 
f
 );

283 
	`f˛o£
–
f
 );

284 
	}
}

289 
	$maö
(
¨gc
, *
¨gv
[])

291 *
öFûeName
, *
outFûeName
;

292 
i
;

294 i‡(
¨gc
 <= 1) {

295 
öFûeName
 = "in.dat";

296 
outFûeName
 = "out.dat";

297 
	`¸óãInFûeIfMissög
(
öFûeName
);

299 i‡(
¨gc
 != 3 &&árgc != 4) {

300 
	`¥ötf
("Ußge: %†öput-fûêouçut-fûe\n", 
¨gv
[0]);

301 
	`exô
(1);

304 
öFûeName
 = 
¨gv
[1];

305 
outFûeName
 = 
¨gv
[2];

308 
i
 = 1; i <
NUMTIMESTORUN
; i++) {

309 
	`¥ötf
("Aµ-> Aµliˇti⁄ sèπed,Ñïëôi⁄ #%d.\n", 
i
);

311 i‡(
	`ícodeDecodeFûe
(
öFûeName
, 
outFûeName
) == 0) {

312 
	`¥ötf
("App-> Application finished successfully.\n\n\n");

315 
	`¥ötf
("App-> Application FAILED.\n");

320 
	}
}

	@main_BIOS.c

41 
	~<xdc/°d.h
>

42 
	~<ti/bios/ö˛ude/°d.h
>

44 
	~<ti/bios/ö˛ude/tsk.h
>

45 
	~<ti/bios/ö˛ude/sys.h
>

46 
	~<ti/sdo/˚/CERu¡ime.h
>

47 
	~<ti/sdo/˚/åa˚/gt.h
>

49 
	~<smaö.h
>

52 
	#MOD_NAME
 "ti.sdo.˚.exam∂es.≠ps.video_c›y"

	)

53 
GT_Mask
 
	gcurMask
 = {0,0};

55 
Såög
 
	gèskName
 = "video_copy";

66 
I¡
 
	$maö
(
I¡
 
¨gc
, 
Såög
 
¨gv
[])

68 
TSK_Aârs
 
©ås
 = 
TSK_ATTRS
;

69 
©ås
.
°acksize
 = 6 * 1024;

70 
©ås
.
«me
 = 
èskName
;

73 
	`CERu¡ime_öô
();

76 
	`GT_öô
();

79 
	`GT_¸óã
(&
curMask
, 
MOD_NAME
);

82 
	`GT_£t
(
MOD_NAME
 "=01234567");

84 
	`GT_0åa˚
(
curMask
, 
GT_2CLASS
, "maö> " 
MOD_NAME
 "\n");

86 i‡(
	`TSK_¸óã
((
Fxn
)
smaö
, &
©ås
, 
¨gc
, 
¨gv
Ë=
NULL
) {

87 
	`SYS_ab‹t
("main: failedÅo create smainÅhread.");

91 
	}
}

	@main_native.c

36 
	~<xdc/°d.h
>

38 
	~<ti/sdo/˚/CERu¡ime.h
>

39 
	~<ti/sdo/˚/åa˚/gt.h
>

41 
I¡
 
smaö
(I¡ 
¨gc
, 
Såög
 
¨gv
[]);

44 
	#MOD_NAME
 "ti.sdo.˚.exam∂es.≠ps.video_c›y"

	)

45 
GT_Mask
 
	gcurMask
 = {0,0};

50 
I¡
 
	$maö
(
I¡
 
¨gc
, 
Såög
 
¨gv
[])

53 
	`CERu¡ime_öô
();

56 
	`GT_öô
();

59 
	`GT_¸óã
(&
curMask
, 
MOD_NAME
);

62 
	`GT_£t
(
MOD_NAME
 "=01234567");

64 
	`GT_0åa˚
(
curMask
, 
GT_2CLASS
, "maö> " 
MOD_NAME
 "\n");

66  (
	`smaö
(
¨gc
, 
¨gv
));

67 
	}
}

	@package/cfg/bin/ti_platforms_evm3530/app_local_xv5T.c

8 
	#__√°ed__


	)

9 
	#__c⁄fig__


	)

11 
	~<xdc/°d.h
>

52 
xdc__META
(
__ASM__
, "@(#)__ASM__ = /home/jack/ti-dvsdk_dm3730-evm_4_01_00_09/codec-engine_2_26_01_09/examples/ti/sdo/ce/examples/apps/video_copy/package/cfg/bin/ti_platforms_evm3530/app_local_xv5T");

59 
xdc__META
(
__ISA__
, "@(#)__ISA__ = v5T");

66 
xdc__META
(
__PLAT__
, "@(#)__PLAT__ =Åi.platforms.evm3530");

72 
xdc__META
(
__TARG__
, "@(#)__TARG__ = gnu.targets.arm.GCArmv5T");

92 
	~<ti/sdo/˚/oßl/Log.h
>

94 
Log_H™dÀ
 
	gti_sdo_˚_dvtLog
 = 
NULL
;

96 
Boﬁ
 
	gMem‹y_skùVútuÆAddªssTøn¶©i⁄
 = 
FALSE
;

100 
Såög
 
	gGlobÆ_buûdInfo
[] = {

129 
NULL


142 
	~<ti/sdo/˚/Engöe.h
>

143 
	~<ti/xdais/ülg.h
>

145 
	~<ti/xdais/idma3.h
>

147 
	~<ti/xdais/úes.h
>

150 
IALG_Fxns
 
VIDDECCOPY_TI_VIDDECCOPY
;

151 
Såög
 
	gty≥Tab_VIDDECCOPY_TI_VIDDECCOPY
[] = {

153 
NULL


156 
IALG_Fxns
 
VIDENCCOPY_TI_VIDENCCOPY
;

157 
Såög
 
	gty≥Tab_VIDENCCOPY_TI_VIDENCCOPY
[] = {

159 
NULL


164 
IALG_Fxns
 
VIDENCCOPY_TI_VIDENCCOPY
;

165 
IALG_Fxns
 
VIDDECCOPY_TI_VIDDECCOPY
;

168 
ti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_codecCœssC⁄fig
;

169 
ti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_codecCœssC⁄fig
;

171 
Engöe_AlgDesc
 
	gígöeAlgs0
[] = {

175 &
VIDENCCOPY_TI_VIDENCCOPY
,

176 
NULL
,

177 
ty≥Tab_VIDENCCOPY_TI_VIDENCCOPY
,

178 
TRUE
,

181 
NULL
,

182 &
ti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_codecCœssC⁄fig
,

183 
Engöe_USECACHEDMEM_DEFAULT
,

189 &
VIDDECCOPY_TI_VIDDECCOPY
,

190 
NULL
,

191 
ty≥Tab_VIDDECCOPY_TI_VIDDECCOPY
,

192 
TRUE
,

195 
NULL
,

196 &
ti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_codecCœssC⁄fig
,

197 
Engöe_USECACHEDMEM_DEFAULT
,

200 {
NULL
},

202 
Engöe_AlgDesc
 
	gígöeAlgs1
[] = {

203 {
NULL
},

207 
Engöe_Desc
 
	gígöeTab
[] = {

209 
ígöeAlgs0
,

210 
NULL
,

211 
NULL
,

215 
ígöeAlgs1
,

216 
NULL
,

217 
NULL
,

220 {
NULL
, NULL, NULL, 0}

223 
Engöe_C⁄fig
 
	gEngöe_c⁄fig
 = {

224 
ígöeTab
,

228 
Boﬁ
 
	gti_sdo_˚_Engöe_noCommName
 = 
FALSE
;

235 
	~<ti/sdo/˚/oßl/GlobÆ.h
>

236 
	~<ti/sdo/˚/ùc/Comm.h
>

237 
	~<ti/sdo/˚/oßl/Mem‹y.h
>

238 
	~<ti/sdo/˚/oßl/Queue.h
>

239 
	~<ti/sdo/˚/oßl/Sem.h
>

240 
	~<ti/sdo/˚/oßl/SemMP.h
>

241 
	~<ti/sdo/˚/oßl/Thªad.h
>

242 
	~<ti/sdo/˚/ùc/Pro˚ss‹.h
>

243 
	~<ti/sdo/˚/Æg/Alg‹ôhm.h
>

244 
	~<ti/sdo/˚/oßl/Lock.h
>

245 
	~<ti/sdo/˚/oßl/LockMP.h
>

246 
	~<ti/sdo/˚/Sîvî.h
>

247 
	~<ti/sdo/˚/Engöe.h
>

248 
	~<ti/sdo/˚/rms.h
>

249 
	~<ti/sdo/˚/utûs/xdm/XdmUtûs.h
>

251 
	~<ti/sdo/utûs/åa˚/gt.h
>

254 
I¡
 
	gGlobÆ_u£LökArbôî
 = 
FALSE
;

259 
Void
 
	$CERu¡ime_öô
(
Void
)

262 
	`GT_öô
();

266 i‡(
	`GlobÆ_gëív
("CE_DEBUG"Ë!
NULL
) {

267 
Boﬁ
 
Engöe_ÆwaysCﬁÀ˘D•Tø˚
;

268 
Såög
 
Engöe_˚DebugD•Tø˚Mask
;

270 
Engöe_ÆwaysCﬁÀ˘D•Tø˚
 = 
TRUE
;

274 i‡(
	`GlobÆ_gëív
("CE_DEBUG")[0] == '1') {

275 
	`GT_£t
("*+67,CE-3,GT_time=0,GT_prefix=1235");

276 
Engöe_˚DebugD•Tø˚Mask
 = "*+67,GT_prefix=1235,GT_time=3";

278 i‡(
	`GlobÆ_gëív
("CE_DEBUG")[0] == '2') {

279 
	`GT_£t
(

281 
Engöe_˚DebugD•Tø˚Mask
 =

284 
	`GT_£t
("*+01234567,CE-3,GT_time=0,GT_prefix=12345");

285 
Engöe_˚DebugD•Tø˚Mask
 = "*+01234567,GT_prefix=12345,GT_time=3";

289 i‡(
	`GlobÆ_gëív
("CE_CHECK"Ë!
NULL
) {

290 
Boﬁ
 
VISA_checked
;

296 i‡(
	`GlobÆ_gëív
("CE_CHECK")[0] == '1') {

297 
VISA_checked
 = 
TRUE
;

299 
	`GT_£t
("*+7");

300 } i‡(
	`GlobÆ_gëív
("CE_CHECK")[0] == '0') {

301 
VISA_checked
 = 
FALSE
;

308 
	`GT_£t
(
	`GlobÆ_gëív
("CE_TRACE"));

309 
	`GlobÆ_öô
();

311 
	`Sem_öô
();

312 
	`SemMP_öô
();

315 
	`Mem‹y_öô
();

316 
	`Queue_öô
();

317 
	`Comm_öô
();

318 
	`Thªad_öô
();

319 
	`Pro˚ss‹_öô
();

320 
	`LockMP_öô
();

321 
	`Alg‹ôhm_öô
();

322 
	`XdmUtûs_öô
();

323 
	`Lock_öô
();

325 
	`Engöe_öô
();

326 
	`Sîvî_öô
();

328 
	}
}

333 
Void
 
	$CERu¡ime_exô
(
Void
)

335 
	`GlobÆ_exô
();

336 
	}
}

339 
Void
 
	$ti_sdo_˚_CERu¡ime_öô__F
(
Void
) {

340 
	`CERu¡ime_öô
();

341 
	}
}

353 
Boﬁ
 
	gVISA_checked
 = 
FALSE
;

365 
	sti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_CodecCœssC⁄fig
 {

366 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

367 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

368 
Boﬁ
 
	mm™ageRec⁄BufsCache
[ 
XDM_MAX_IO_BUFFERS
 ];

369 } 
	gti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_codecCœssC⁄fig
 = {

370 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

371 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

372 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

385 
	sti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_CodecCœssC⁄fig
 {

386 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

387 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

388 
Boﬁ
 
	mm™ageDi•œyBufsCache
[ 
XDM_MAX_IO_BUFFERS
 ];

389 } 
	gti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_codecCœssC⁄fig
 = {

390 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

391 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

392 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

401 
Void
 
	$IPC_gíî©edInô
()

403 
	}
}

409 
	gti_sdo_˚_Æg_ALG_u£Hóp
 = 
FALSE
;

410 
	gti_sdo_˚_Æg_ALG_u£Cache
 = 
FALSE
;

412 
	gti_sdo_˚_Æg_ALG_maxGroups
 = 20;

414 
UI¡32
 
	gti_sdo_˚_Æg_ùcKey
 = 0x4f474c41;

416 
	g_ALG_groupU£d
[20] = {

439 
	~<ti/sdo/˚/oßl/SemMP.h
>

440 
	~<ti/xdais/ülg.h
>

442 
SemMP_H™dÀ
 
	g_ALG_£ms
[20];

443 
	g_ALG_groupRefCou¡
[20] = {

466 
IALG_H™dÀ
 
	g_Alg‹ôhm_lockOw√r
[20] = {

467 
NULL
,

468 
NULL
,

469 
NULL
,

470 
NULL
,

471 
NULL
,

472 
NULL
,

473 
NULL
,

474 
NULL
,

475 
NULL
,

476 
NULL
,

477 
NULL
,

478 
NULL
,

479 
NULL
,

480 
NULL
,

481 
NULL
,

482 
NULL
,

483 
NULL
,

484 
NULL
,

485 
NULL
,

486 
NULL
,

491 
Void
 
	$DMAN3_CE_öô
()

493 
	}
}

494 
Void
 
	$DMAN3_CE_exô
()

496 
	}
}

498 
	$DMAN3_gø¡DmaCh™√ls
(
groupId
, *
ÆgH™dÀs
, *
dmaFxns
,

499 
numAlgs
)

503 
	}
}

505 
	$DMAN3_ªÀa£DmaCh™√ls
(*
ÆgH™dÀs
, * 
dmaFxns
, 
numAlgs
)

509 
	}
}

513 
	~<ti/xdais/úes.h
>

515 
IRES_Sètus
 
	$RMAN_a˘iv©eAŒResour˚s
(
IALG_H™dÀ
 
ÆgH™dÀ
, 
IRES_Fxns
 *
ªsFxns
, 
I¡
 
s¸©chId
)

518  (
IRES_OK
);

519 
	}
}

521 
IRES_Sètus
 
	$RMAN_assignResour˚s
(
IALG_H™dÀ
 
ÆgH™dÀ
, 
IRES_Fxns
 *
ªsFxns
,

522 
I¡
 
s¸©chGroupId
)

525  (
IRES_OK
);

526 
	}
}

528 
IRES_Sètus
 
	$RMAN_dó˘iv©eAŒResour˚s
(
IALG_H™dÀ
 
ÆgH™dÀ
,

529 
IRES_Fxns
 * 
ªsFxns
, 
I¡
 
s¸©chId
)

532  (
IRES_OK
);

533 
	}
}

535 
IRES_Sètus
 
	$RMAN_‰ìResour˚s
(
IALG_H™dÀ
 
ÆgH™dÀ
, 
IRES_Fxns
 * 
ªsFxns
,

536 
I¡
 
s¸©chGroupId
)

539  (
IRES_OK
);

540 
	}
}

542 
IRES_Sètus
 
	$RMAN_öô
()

544  (
IRES_OK
);

545 
	}
}

547 
IRES_Sètus
 
	$RMAN_exô
()

549  (
IRES_OK
);

550 
	}
}

565 
	~<xdc/°d.h
>

566 
	~<ti/sdo/utûs/åa˚/gt.h
>

568 
Void
 
GTC⁄fig_åa˚Prötf
(
Såög
 
fmt
, ...);

569 
På
 
GTC⁄fig_libcMÆloc
(
I¡
 
size
);

571 
I¡
 
GTC⁄fig_thªadId
();

572 
GTC⁄fig_îr‹
(
Såög
 
fmt
, ...);

573 
GTC⁄fig_libcFªe
(
På
, 
I¡
);

574 
UI¡32
 
GTC⁄fig_gëtimeofday
();

575 
I¡
 
GTC⁄fig_±hªadLock
();

576 
I¡
 
GTC⁄fig_±hªadU∆ock
();

577 
I¡
 
GTC⁄fig_posixInô
();

579 
GT_C⁄fig
 
	g_ti_sdo_utûs_åa˚_GT_∑øms
 = {

580 
GTC⁄fig_åa˚Prötf
,

581 
NULL
,

582 
GTC⁄fig_thªadId
,

583 
GTC⁄fig_îr‹
,

584 
GTC⁄fig_libcMÆloc
,

585 
GTC⁄fig_libcFªe
,

586 
GTC⁄fig_gëtimeofday
,

587 
GTC⁄fig_±hªadLock
,

588 
GTC⁄fig_±hªadU∆ock
,

589 
GTC⁄fig_posixInô


592 
GT_C⁄fig
 *
	gGT
 = &
_ti_sdo_utûs_åa˚_GT_∑øms
;

598 
Boﬁ
 
	gti_sdo_fc_mu…iPro˚ss
 = 
TRUE
;

604 
UI¡32
 
	gti_sdo_˚_oßl_löux_SemMP_ùcKey
 = 0x4c41534f;

606 
UI¡32
 
	gMem‹y_maxCbLi°Size
 = 100;

618 #ifde‡
__ti__


619 
	#PRAGMA
(
x
Ë
	`_Pøgma
(#x)

	)

620 
	#xdc__˛ök_c⁄°™t
(
v¨
) \

621 
	`PRAGMA
(
	`DATA_SECTION
(
v¨
, ".const:" #var)) \

622 
	`asm
(" .sect \".const:" #var "\"\n" \

627 " .˛ök")

	)

	@package/cfg/bin/ti_platforms_evm3530/app_local_xv5T.h

8 
	~<xdc/°d.h
>

	@package/cfg/bin/ti_platforms_evm3530/app_remote_xv5T.c

8 
	#__√°ed__


	)

9 
	#__c⁄fig__


	)

11 
	~<xdc/°d.h
>

52 
xdc__META
(
__ASM__
, "@(#)__ASM__ = /home/jack/ti-dvsdk_dm3730-evm_4_01_00_09/codec-engine_2_26_01_09/examples/ti/sdo/ce/examples/apps/video_copy/package/cfg/bin/ti_platforms_evm3530/app_remote_xv5T");

59 
xdc__META
(
__ISA__
, "@(#)__ISA__ = v5T");

66 
xdc__META
(
__PLAT__
, "@(#)__PLAT__ =Åi.platforms.evm3530");

72 
xdc__META
(
__TARG__
, "@(#)__TARG__ = gnu.targets.arm.GCArmv5T");

92 
	~<ti/sdo/˚/oßl/Log.h
>

94 
Log_H™dÀ
 
	gti_sdo_˚_dvtLog
 = 
NULL
;

96 
Boﬁ
 
	gMem‹y_skùVútuÆAddªssTøn¶©i⁄
 = 
FALSE
;

100 
Såög
 
	gGlobÆ_buûdInfo
[] = {

180 
NULL


193 
	~<ti/sdo/˚/Engöe.h
>

194 
	~<ti/xdais/ülg.h
>

196 
	~<ti/xdais/idma3.h
>

198 
	~<ti/xdais/úes.h
>

201 
IALG_Fxns
 
VIDDEC2BACKCOPY_TI_IVIDDEC2BACKCOPY
;

202 
Såög
 
	gty≥Tab_VIDDEC2BACKCOPY_TI_IVIDDEC2BACKCOPY
[] = {

204 
NULL


207 
IALG_Fxns
 
AUDDECCOPY_TI_IAUDDECCOPY
;

208 
Såög
 
	gty≥Tab_AUDDECCOPY_TI_IAUDDECCOPY
[] = {

210 
NULL


213 
IALG_Fxns
 
VIDENCCOPY_TI_VIDENCCOPY
;

214 
Såög
 
	gty≥Tab_VIDENCCOPY_TI_VIDENCCOPY
[] = {

216 
NULL


219 
IALG_Fxns
 
VIDENC1COPY_TI_IVIDENC1COPY
;

220 
Såög
 
	gty≥Tab_VIDENC1COPY_TI_IVIDENC1COPY
[] = {

222 
NULL


225 
IALG_Fxns
 
IMGDECCOPY_TI_IMGDECCOPY
;

226 
Såög
 
	gty≥Tab_IMGDECCOPY_TI_IMGDECCOPY
[] = {

228 
NULL


231 
IALG_Fxns
 
VIDDEC2COPY_TI_IVIDDEC2COPY
;

232 
Såög
 
	gty≥Tab_VIDDEC2COPY_TI_IVIDDEC2COPY
[] = {

234 
NULL


237 
IALG_Fxns
 
AUDENCCOPY_TI_AUDENCCOPY
;

238 
Såög
 
	gty≥Tab_AUDENCCOPY_TI_AUDENCCOPY
[] = {

240 
NULL


243 
IALG_Fxns
 
IMGDEC1COPY_TI_IIMGDEC1COPY
;

244 
Såög
 
	gty≥Tab_IMGDEC1COPY_TI_IIMGDEC1COPY
[] = {

246 
NULL


249 
IALG_Fxns
 
AUDDEC1COPY_TI_IAUDDEC1COPY
;

250 
Såög
 
	gty≥Tab_AUDDEC1COPY_TI_IAUDDEC1COPY
[] = {

252 
NULL


255 
IALG_Fxns
 
UNIVERSALCOPY_TI_IUNIVERSALCOPY
;

256 
Såög
 
	gty≥Tab_UNIVERSALCOPY_TI_IUNIVERSALCOPY
[] = {

258 
NULL


261 
IALG_Fxns
 
SCALE_TI_SCALE
;

262 
Såög
 
	gty≥Tab_SCALE_TI_SCALE
[] = {

264 
NULL


267 
IALG_Fxns
 
G711DEC_SUN_IG711DEC
;

268 
Såög
 
	gty≥Tab_G711DEC_SUN_IG711DEC
[] = {

270 
NULL


273 
IALG_Fxns
 
G711ENC_SUN_IG711ENC
;

274 
Såög
 
	gty≥Tab_G711ENC_SUN_IG711ENC
[] = {

276 
NULL


279 
IALG_Fxns
 
SPHDECCOPY_TI_SPHDECCOPY
;

280 
Såög
 
	gty≥Tab_SPHDECCOPY_TI_SPHDECCOPY
[] = {

282 
NULL


285 
IALG_Fxns
 
IMGENC1COPY_TI_IIMGENC1COPY
;

286 
Såög
 
	gty≥Tab_IMGENC1COPY_TI_IIMGENC1COPY
[] = {

288 
NULL


291 
IALG_Fxns
 
AUDENC1COPY_TI_IAUDENC1COPY
;

292 
Såög
 
	gty≥Tab_AUDENC1COPY_TI_IAUDENC1COPY
[] = {

294 
NULL


297 
IALG_Fxns
 
IMGENCCOPY_TI_IMGENCCOPY
;

298 
Såög
 
	gty≥Tab_IMGENCCOPY_TI_IMGENCCOPY
[] = {

300 
NULL


303 
IALG_Fxns
 
SPHDEC1COPY_TI_ISPHDEC1COPY
;

304 
Såög
 
	gty≥Tab_SPHDEC1COPY_TI_ISPHDEC1COPY
[] = {

306 
NULL


309 
IALG_Fxns
 
VIDDECCOPY_TI_VIDDECCOPY
;

310 
Såög
 
	gty≥Tab_VIDDECCOPY_TI_VIDDECCOPY
[] = {

312 
NULL


315 
IALG_Fxns
 
VIDANALYTICSCOPY_TI_IVIDANALYTICSCOPY
;

316 
Såög
 
	gty≥Tab_VIDANALYTICSCOPY_TI_IVIDANALYTICSCOPY
[] = {

318 
NULL


321 
IALG_Fxns
 
VIDTRANSCODECOPY_TI_IVIDTRANSCODECOPY
;

322 
Såög
 
	gty≥Tab_VIDTRANSCODECOPY_TI_IVIDTRANSCODECOPY
[] = {

324 
NULL


327 
IALG_Fxns
 
SPHENCCOPY_TI_SPHENCCOPY
;

328 
Såög
 
	gty≥Tab_SPHENCCOPY_TI_SPHENCCOPY
[] = {

330 
NULL


333 
IALG_Fxns
 
SPHENC1COPY_TI_ISPHENC1COPY
;

334 
Såög
 
	gty≥Tab_SPHENC1COPY_TI_ISPHENC1COPY
[] = {

336 
NULL


339 
IALG_Fxns
 
VIDDEC1COPY_TI_IVIDDEC1COPY
;

340 
Såög
 
	gty≥Tab_VIDDEC1COPY_TI_IVIDDEC1COPY
[] = {

342 
NULL


347 
IALG_Fxns
 
VIDDEC_STUBS
;

348 
IALG_Fxns
 
VIDENC_STUBS
;

349 
IALG_Fxns
 
IMGDEC_STUBS
;

350 
IALG_Fxns
 
IMGENC_STUBS
;

351 
IALG_Fxns
 
AUDDEC_STUBS
;

352 
IALG_Fxns
 
AUDENC_STUBS
;

353 
IALG_Fxns
 
SPHENC_STUBS
;

354 
IALG_Fxns
 
SPHDEC_STUBS
;

355 
IALG_Fxns
 
SCALE_STUBS
;

356 
IALG_Fxns
 
VIDDEC2_STUBS
;

357 
IALG_Fxns
 
VIDENC1_STUBS
;

358 
IALG_Fxns
 
IMGDEC1_STUBS
;

359 
IALG_Fxns
 
IMGENC1_STUBS
;

360 
IALG_Fxns
 
SPHDEC1_STUBS
;

361 
IALG_Fxns
 
SPHENC1_STUBS
;

362 
IALG_Fxns
 
AUDDEC1_STUBS
;

363 
IALG_Fxns
 
AUDENC1_STUBS
;

364 
IALG_Fxns
 
SPHENC1_STUBS
;

365 
IALG_Fxns
 
SPHDEC1_STUBS
;

366 
IALG_Fxns
 
VIDTRANSCODE_STUBS
;

367 
IALG_Fxns
 
VIDANALYTICS_STUBS
;

368 
IALG_Fxns
 
VIDDEC1_STUBS
;

369 
IALG_Fxns
 
VIDDEC2BACK_STUBS
;

370 
IALG_Fxns
 
UNIVERSAL_STUBS
;

373 
ti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_codecCœssC⁄fig
;

374 
ti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_codecCœssC⁄fig
;

375 
ti_sdo_˚_exam∂es_codecs_imgdec_c›y_IMGDEC_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_imgdec_c›y_IMGDEC_COPY_codecCœssC⁄fig
;

376 
ti_sdo_˚_exam∂es_codecs_imgíc_c›y_IMGENC_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_imgíc_c›y_IMGENC_COPY_codecCœssC⁄fig
;

377 
ti_sdo_˚_exam∂es_codecs_viddec2_c›y_VIDDEC2_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_viddec2_c›y_VIDDEC2_COPY_codecCœssC⁄fig
;

378 
ti_sdo_˚_exam∂es_codecs_vidíc1_c›y_VIDENC1_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_vidíc1_c›y_VIDENC1_COPY_codecCœssC⁄fig
;

379 
ti_sdo_˚_exam∂es_codecs_imgdec1_c›y_IMGDEC1_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_imgdec1_c›y_IMGDEC1_COPY_codecCœssC⁄fig
;

380 
ti_sdo_˚_exam∂es_codecs_imgíc1_c›y_IMGENC1_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_imgíc1_c›y_IMGENC1_COPY_codecCœssC⁄fig
;

381 
ti_sdo_˚_exam∂es_codecs_viddec1_c›y_VIDDEC1_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_viddec1_c›y_VIDDEC1_COPY_codecCœssC⁄fig
;

382 
ti_sdo_˚_exam∂es_codecs_viddec2•lô_c›y_VIDDEC2BACK_COPY_CodecCœssC⁄fig
 
ti_sdo_˚_exam∂es_codecs_viddec2•lô_c›y_VIDDEC2BACK_COPY_codecCœssC⁄fig
;

384 
Engöe_AlgDesc
 
	gígöeAlgs0
[] = {

388 &
VIDDEC_STUBS
,

389 
NULL
,

390 
ty≥Tab_VIDDECCOPY_TI_VIDDECCOPY
,

391 
FALSE
,

394 
NULL
,

395 &
ti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_codecCœssC⁄fig
,

396 
Engöe_USECACHEDMEM_DEFAULT
,

402 &
VIDENC_STUBS
,

403 
NULL
,

404 
ty≥Tab_VIDENCCOPY_TI_VIDENCCOPY
,

405 
FALSE
,

408 
NULL
,

409 &
ti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_codecCœssC⁄fig
,

410 
Engöe_USECACHEDMEM_DEFAULT
,

416 &
IMGDEC_STUBS
,

417 
NULL
,

418 
ty≥Tab_IMGDECCOPY_TI_IMGDECCOPY
,

419 
FALSE
,

422 
NULL
,

423 &
ti_sdo_˚_exam∂es_codecs_imgdec_c›y_IMGDEC_COPY_codecCœssC⁄fig
,

424 
Engöe_USECACHEDMEM_DEFAULT
,

430 &
IMGENC_STUBS
,

431 
NULL
,

432 
ty≥Tab_IMGENCCOPY_TI_IMGENCCOPY
,

433 
FALSE
,

436 
NULL
,

437 &
ti_sdo_˚_exam∂es_codecs_imgíc_c›y_IMGENC_COPY_codecCœssC⁄fig
,

438 
Engöe_USECACHEDMEM_DEFAULT
,

444 &
AUDDEC_STUBS
,

445 
NULL
,

446 
ty≥Tab_AUDDECCOPY_TI_IAUDDECCOPY
,

447 
FALSE
,

450 
NULL
,

451 
NULL
,

452 
Engöe_USECACHEDMEM_DEFAULT
,

458 &
AUDENC_STUBS
,

459 
NULL
,

460 
ty≥Tab_AUDENCCOPY_TI_AUDENCCOPY
,

461 
FALSE
,

464 
NULL
,

465 
NULL
,

466 
Engöe_USECACHEDMEM_DEFAULT
,

472 &
SPHENC_STUBS
,

473 
NULL
,

474 
ty≥Tab_SPHENCCOPY_TI_SPHENCCOPY
,

475 
FALSE
,

478 
NULL
,

479 
NULL
,

480 
Engöe_USECACHEDMEM_DEFAULT
,

486 &
SPHDEC_STUBS
,

487 
NULL
,

488 
ty≥Tab_SPHDECCOPY_TI_SPHDECCOPY
,

489 
FALSE
,

492 
NULL
,

493 
NULL
,

494 
Engöe_USECACHEDMEM_DEFAULT
,

500 &
SCALE_STUBS
,

501 
NULL
,

502 
ty≥Tab_SCALE_TI_SCALE
,

503 
FALSE
,

506 
NULL
,

507 
NULL
,

508 
Engöe_USECACHEDMEM_DEFAULT
,

514 &
VIDDEC2_STUBS
,

515 
NULL
,

516 
ty≥Tab_VIDDEC2COPY_TI_IVIDDEC2COPY
,

517 
FALSE
,

520 
NULL
,

521 &
ti_sdo_˚_exam∂es_codecs_viddec2_c›y_VIDDEC2_COPY_codecCœssC⁄fig
,

522 
Engöe_USECACHEDMEM_DEFAULT
,

528 &
VIDENC1_STUBS
,

529 
NULL
,

530 
ty≥Tab_VIDENC1COPY_TI_IVIDENC1COPY
,

531 
FALSE
,

534 
NULL
,

535 &
ti_sdo_˚_exam∂es_codecs_vidíc1_c›y_VIDENC1_COPY_codecCœssC⁄fig
,

536 
Engöe_USECACHEDMEM_DEFAULT
,

542 &
IMGDEC1_STUBS
,

543 
NULL
,

544 
ty≥Tab_IMGDEC1COPY_TI_IIMGDEC1COPY
,

545 
FALSE
,

548 
NULL
,

549 &
ti_sdo_˚_exam∂es_codecs_imgdec1_c›y_IMGDEC1_COPY_codecCœssC⁄fig
,

550 
Engöe_USECACHEDMEM_DEFAULT
,

556 &
IMGENC1_STUBS
,

557 
NULL
,

558 
ty≥Tab_IMGENC1COPY_TI_IIMGENC1COPY
,

559 
FALSE
,

562 
NULL
,

563 &
ti_sdo_˚_exam∂es_codecs_imgíc1_c›y_IMGENC1_COPY_codecCœssC⁄fig
,

564 
Engöe_USECACHEDMEM_DEFAULT
,

570 &
SPHDEC1_STUBS
,

571 
NULL
,

572 
ty≥Tab_SPHDEC1COPY_TI_ISPHDEC1COPY
,

573 
FALSE
,

576 
NULL
,

577 
NULL
,

578 
Engöe_USECACHEDMEM_DEFAULT
,

584 &
SPHENC1_STUBS
,

585 
NULL
,

586 
ty≥Tab_SPHENC1COPY_TI_ISPHENC1COPY
,

587 
FALSE
,

590 
NULL
,

591 
NULL
,

592 
Engöe_USECACHEDMEM_DEFAULT
,

598 &
AUDDEC1_STUBS
,

599 
NULL
,

600 
ty≥Tab_AUDDEC1COPY_TI_IAUDDEC1COPY
,

601 
FALSE
,

604 
NULL
,

605 
NULL
,

606 
Engöe_USECACHEDMEM_DEFAULT
,

612 &
AUDENC1_STUBS
,

613 
NULL
,

614 
ty≥Tab_AUDENC1COPY_TI_IAUDENC1COPY
,

615 
FALSE
,

618 
NULL
,

619 
NULL
,

620 
Engöe_USECACHEDMEM_DEFAULT
,

626 &
SPHENC1_STUBS
,

627 
NULL
,

628 
ty≥Tab_G711ENC_SUN_IG711ENC
,

629 
FALSE
,

632 
NULL
,

633 
NULL
,

634 
Engöe_USECACHEDMEM_DEFAULT
,

640 &
SPHDEC1_STUBS
,

641 
NULL
,

642 
ty≥Tab_G711DEC_SUN_IG711DEC
,

643 
FALSE
,

646 
NULL
,

647 
NULL
,

648 
Engöe_USECACHEDMEM_DEFAULT
,

654 &
VIDTRANSCODE_STUBS
,

655 
NULL
,

656 
ty≥Tab_VIDTRANSCODECOPY_TI_IVIDTRANSCODECOPY
,

657 
FALSE
,

660 
NULL
,

661 
NULL
,

662 
Engöe_USECACHEDMEM_DEFAULT
,

668 &
VIDANALYTICS_STUBS
,

669 
NULL
,

670 
ty≥Tab_VIDANALYTICSCOPY_TI_IVIDANALYTICSCOPY
,

671 
FALSE
,

674 
NULL
,

675 
NULL
,

676 
Engöe_USECACHEDMEM_DEFAULT
,

682 &
VIDDEC1_STUBS
,

683 
NULL
,

684 
ty≥Tab_VIDDEC1COPY_TI_IVIDDEC1COPY
,

685 
FALSE
,

688 
NULL
,

689 &
ti_sdo_˚_exam∂es_codecs_viddec1_c›y_VIDDEC1_COPY_codecCœssC⁄fig
,

690 
Engöe_USECACHEDMEM_DEFAULT
,

696 &
VIDDEC2BACK_STUBS
,

697 
NULL
,

698 
ty≥Tab_VIDDEC2BACKCOPY_TI_IVIDDEC2BACKCOPY
,

699 
FALSE
,

702 
NULL
,

703 &
ti_sdo_˚_exam∂es_codecs_viddec2•lô_c›y_VIDDEC2BACK_COPY_codecCœssC⁄fig
,

704 
Engöe_USECACHEDMEM_DEFAULT
,

710 &
UNIVERSAL_STUBS
,

711 
NULL
,

712 
ty≥Tab_UNIVERSALCOPY_TI_IUNIVERSALCOPY
,

713 
FALSE
,

716 
NULL
,

717 
NULL
,

718 
Engöe_USECACHEDMEM_DEFAULT
,

721 {
NULL
},

723 
Engöe_AlgDesc
 
	gígöeAlgs1
[] = {

724 {
NULL
},

728 
Engöe_Desc
 
	gígöeTab
[] = {

730 
ígöeAlgs0
,

732 
NULL
,

736 
ígöeAlgs1
,

737 
NULL
,

738 
NULL
,

741 {
NULL
, NULL, NULL, 0}

744 
Engöe_C⁄fig
 
	gEngöe_c⁄fig
 = {

745 
ígöeTab
,

749 
Boﬁ
 
	gti_sdo_˚_Engöe_noCommName
 = 
FALSE
;

756 
	~<ti/sdo/˚/oßl/GlobÆ.h
>

757 
	~<ti/sdo/˚/ùc/Comm.h
>

758 
	~<ti/sdo/˚/oßl/Mem‹y.h
>

759 
	~<ti/sdo/˚/oßl/Queue.h
>

760 
	~<ti/sdo/˚/oßl/Sem.h
>

761 
	~<ti/sdo/˚/oßl/SemMP.h
>

762 
	~<ti/sdo/˚/oßl/Thªad.h
>

763 
	~<ti/sdo/˚/ùc/Pro˚ss‹.h
>

764 
	~<ti/sdo/˚/Æg/Alg‹ôhm.h
>

765 
	~<ti/sdo/˚/oßl/Lock.h
>

766 
	~<ti/sdo/˚/oßl/LockMP.h
>

767 
	~<ti/sdo/˚/Sîvî.h
>

768 
	~<ti/sdo/˚/Engöe.h
>

769 
	~<ti/sdo/˚/rms.h
>

770 
	~<ti/sdo/˚/utûs/xdm/XdmUtûs.h
>

772 
	~<ti/sdo/utûs/åa˚/gt.h
>

778 
Void
 
	$CERu¡ime_öô
(
Void
)

780 
Void
 
	`IPC_gíî©edInô
();

782 
	`GT_öô
();

786 i‡(
	`GlobÆ_gëív
("CE_DEBUG"Ë!
NULL
) {

787 
Boﬁ
 
Engöe_ÆwaysCﬁÀ˘D•Tø˚
;

788 
Såög
 
Engöe_˚DebugD•Tø˚Mask
;

790 
Engöe_ÆwaysCﬁÀ˘D•Tø˚
 = 
TRUE
;

794 i‡(
	`GlobÆ_gëív
("CE_DEBUG")[0] == '1') {

795 
	`GT_£t
("*+67,CE-3,GT_time=0,GT_prefix=1235");

796 
Engöe_˚DebugD•Tø˚Mask
 = "*+67,GT_prefix=1235,GT_time=3";

798 i‡(
	`GlobÆ_gëív
("CE_DEBUG")[0] == '2') {

799 
	`GT_£t
(

801 
Engöe_˚DebugD•Tø˚Mask
 =

804 
	`GT_£t
("*+01234567,CE-3,GT_time=0,GT_prefix=12345");

805 
Engöe_˚DebugD•Tø˚Mask
 = "*+01234567,GT_prefix=12345,GT_time=3";

809 i‡(
	`GlobÆ_gëív
("CE_CHECK"Ë!
NULL
) {

810 
Boﬁ
 
VISA_checked
;

816 i‡(
	`GlobÆ_gëív
("CE_CHECK")[0] == '1') {

817 
VISA_checked
 = 
TRUE
;

819 
	`GT_£t
("*+7");

820 } i‡(
	`GlobÆ_gëív
("CE_CHECK")[0] == '0') {

821 
VISA_checked
 = 
FALSE
;

828 
	`GT_£t
(
	`GlobÆ_gëív
("CE_TRACE"));

829 
	`IPC_gíî©edInô
();

830 
	`GlobÆ_öô
();

832 
	`Sem_öô
();

833 
	`SemMP_öô
();

836 
	`Mem‹y_öô
();

837 
	`Queue_öô
();

838 
	`Comm_öô
();

839 
	`Thªad_öô
();

840 
	`Pro˚ss‹_öô
();

841 
	`LockMP_öô
();

842 
	`Alg‹ôhm_öô
();

843 
	`XdmUtûs_öô
();

844 
	`Lock_öô
();

846 
	`Engöe_öô
();

847 
	`Sîvî_öô
();

849 
	}
}

854 
Void
 
	$CERu¡ime_exô
(
Void
)

856 
	`GlobÆ_exô
();

857 
	}
}

860 
Void
 
	$ti_sdo_˚_CERu¡ime_öô__F
(
Void
) {

861 
	`CERu¡ime_öô
();

862 
	}
}

874 
Boﬁ
 
	gVISA_checked
 = 
FALSE
;

886 
	sti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_CodecCœssC⁄fig
 {

887 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

888 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

889 
Boﬁ
 
	mm™ageRec⁄BufsCache
[ 
XDM_MAX_IO_BUFFERS
 ];

890 } 
	gti_sdo_˚_exam∂es_codecs_vidíc_c›y_VIDENC_COPY_codecCœssC⁄fig
 = {

891 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

892 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

893 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

906 
	sti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_CodecCœssC⁄fig
 {

907 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

908 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

909 
Boﬁ
 
	mm™ageDi•œyBufsCache
[ 
XDM_MAX_IO_BUFFERS
 ];

910 } 
	gti_sdo_˚_exam∂es_codecs_viddec_c›y_VIDDEC_COPY_codecCœssC⁄fig
 = {

911 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

912 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

913 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

927 
	sti_sdo_˚_exam∂es_codecs_imgdec_c›y_IMGDEC_COPY_CodecCœssC⁄fig
 {

928 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

929 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

930 } 
	gti_sdo_˚_exam∂es_codecs_imgdec_c›y_IMGDEC_COPY_codecCœssC⁄fig
 = {

931 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

932 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

945 
	sti_sdo_˚_exam∂es_codecs_imgíc_c›y_IMGENC_COPY_CodecCœssC⁄fig
 {

946 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

947 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

948 } 
	gti_sdo_˚_exam∂es_codecs_imgíc_c›y_IMGENC_COPY_codecCœssC⁄fig
 = {

949 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

950 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

963 
	sti_sdo_˚_exam∂es_codecs_viddec2_c›y_VIDDEC2_COPY_CodecCœssC⁄fig
 {

964 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

965 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

966 } 
	gti_sdo_˚_exam∂es_codecs_viddec2_c›y_VIDDEC2_COPY_codecCœssC⁄fig
 = {

967 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

968 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

981 
	sti_sdo_˚_exam∂es_codecs_vidíc1_c›y_VIDENC1_COPY_CodecCœssC⁄fig
 {

982 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

983 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

984 } 
	gti_sdo_˚_exam∂es_codecs_vidíc1_c›y_VIDENC1_COPY_codecCœssC⁄fig
 = {

985 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

986 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

999 
	sti_sdo_˚_exam∂es_codecs_viddec1_c›y_VIDDEC1_COPY_CodecCœssC⁄fig
 {

1000 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

1001 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

1002 } 
	gti_sdo_˚_exam∂es_codecs_viddec1_c›y_VIDDEC1_COPY_codecCœssC⁄fig
 = {

1003 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

1004 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

1018 
	sti_sdo_˚_exam∂es_codecs_imgdec1_c›y_IMGDEC1_COPY_CodecCœssC⁄fig
 {

1019 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

1020 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

1021 } 
	gti_sdo_˚_exam∂es_codecs_imgdec1_c›y_IMGDEC1_COPY_codecCœssC⁄fig
 = {

1022 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

1023 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

1036 
	sti_sdo_˚_exam∂es_codecs_imgíc1_c›y_IMGENC1_COPY_CodecCœssC⁄fig
 {

1037 
Boﬁ
 
	mm™ageInBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

1038 
Boﬁ
 
	mm™ageOutBufsCache
 [ 
XDM_MAX_IO_BUFFERS
 ];

1039 } 
	gti_sdo_˚_exam∂es_codecs_imgíc1_c›y_IMGENC1_COPY_codecCœssC⁄fig
 = {

1040 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

1041 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

1056 
	sti_sdo_˚_exam∂es_codecs_viddec2•lô_c›y_VIDDEC2BACK_COPY_CodecCœssC⁄fig
 {

1057 
Boﬁ
 
	mm™ageInBufsCache
 [
XDM_MAX_CONTEXT_BUFFERS
];

1058 
Boﬁ
 
	mm™ageOutBufsCache
 [
XDM_MAX_CONTEXT_BUFFERS
];

1059 
Boﬁ
 
	mm™ageI¡îmedüãBufsCache
 [
XDM_MAX_CONTEXT_BUFFERS
];

1060 } 
	gti_sdo_˚_exam∂es_codecs_viddec2•lô_c›y_VIDDEC2BACK_COPY_codecCœssC⁄fig
 = {

1061 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

1062 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE},

1063 {
TRUE
,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE,TRUE}

1072 
UI¡32
 
	gti_sdo_˚_ùc_d•lök_Ipc_maxTimeout
 = 4294967295UL;

1074 
Void
 
	$IPC_gíî©edInô
()

1076 
	}
}

1081 
UI¡32
 
	gComm_MSGSIZE
 = 4096;

1084 
UI¡32
 
	gComm_NUMMSGS
 = 64;

1087 
UI¡32
 
	gComm_LOCATERETRIES
 = 20;

1095 
	~<ti/sdo/˚/oßl/GlobÆ.h
>

1110 
GlobÆ_ArmD•LökC⁄figMemTabÀE¡ry
 
	g¨mD•LökC⁄figMemTabÀ_Æl_x64P
[] = {

1121 { 
NULL
, 0, 0, 0, 0, 0 }

1126 
GlobÆ_ArmD•LökC⁄fig
 
	gti_sdo_˚_ùc_¨mD•LökC⁄fig_Æl_x64P
 = {

1127 
¨mD•LökC⁄figMemTabÀ_Æl_x64P
,

1128 
BoŸNoPwr


1132 
Såög
 
	gti_sdo_˚_ùc_¨mD•LökC⁄figSîvîNames
[] = {

1134 
NULL


1138 
GlobÆ_ArmD•LökC⁄fig
 *
	gti_sdo_˚_ùc_¨mD•LökC⁄figs
[] = {

1139 &
ti_sdo_˚_ùc_¨mD•LökC⁄fig_Æl_x64P
,

1140 
NULL


1144 
I¡
 
	gGlobÆ_u£LökArbôî
 = 
FALSE
;

1146 
I¡
 
	$LAD_c⁄√˘
(
Såög
 
˛õ¡Name
, 
I¡
 * 
id
Ë{  0; 
	}
}

1147 
I¡
 
	$LAD_disc⁄√˘
(
I¡
 
id
Ë{  0; 
	}
}

1148 
I¡
 
	$LAD_gëD•Sètus
(
I¡
 
˝uId
, I¡ * 
°©usInfo
Ë{  0; 
	}
}

1149 
I¡
 
	$LAD_ªÀa£D•
(
I¡
 
id
Ë{  0; 
	}
}

1150 
I¡
 
	$LAD_°¨tupD•
(
I¡
 
id
, I¡ 
˝uId
, I¡ 
lökId
, 
Såög
 
image
Ë{  0; 
	}
}

1159 
UI¡32
 
	gti_sdo_˚_oßl_löux_SemMP_ùcKey
 = 0x4c41534f;

1161 
UI¡32
 
	gMem‹y_maxCbLi°Size
 = 100;

1170 
	gPWRM_doImc›C⁄fig
 = 0;

1171 
	gPWRM_íabÀImc›AtPowîOn
;

1183 
	~<xdc/°d.h
>

1184 
	~<ti/sdo/utûs/åa˚/gt.h
>

1186 
Void
 
GTC⁄fig_åa˚Prötf
(
Såög
 
fmt
, ...);

1187 
På
 
GTC⁄fig_libcMÆloc
(
I¡
 
size
);

1189 
I¡
 
GTC⁄fig_thªadId
();

1190 
GTC⁄fig_îr‹
(
Såög
 
fmt
, ...);

1191 
GTC⁄fig_libcFªe
(
På
, 
I¡
);

1192 
UI¡32
 
GTC⁄fig_gëtimeofday
();

1193 
I¡
 
GTC⁄fig_±hªadLock
();

1194 
I¡
 
GTC⁄fig_±hªadU∆ock
();

1195 
I¡
 
GTC⁄fig_posixInô
();

1197 
GT_C⁄fig
 
	g_ti_sdo_utûs_åa˚_GT_∑øms
 = {

1198 
GTC⁄fig_åa˚Prötf
,

1199 
NULL
,

1200 
GTC⁄fig_thªadId
,

1201 
GTC⁄fig_îr‹
,

1202 
GTC⁄fig_libcMÆloc
,

1203 
GTC⁄fig_libcFªe
,

1204 
GTC⁄fig_gëtimeofday
,

1205 
GTC⁄fig_±hªadLock
,

1206 
GTC⁄fig_±hªadU∆ock
,

1207 
GTC⁄fig_posixInô


1210 
GT_C⁄fig
 *
	gGT
 = &
_ti_sdo_utûs_åa˚_GT_∑øms
;

1216 
	gti_sdo_˚_Æg_ALG_u£Hóp
 = 
FALSE
;

1217 
	gti_sdo_˚_Æg_ALG_u£Cache
 = 
FALSE
;

1219 
	gti_sdo_˚_Æg_ALG_maxGroups
 = 20;

1221 
UI¡32
 
	gti_sdo_˚_Æg_ùcKey
 = 0x4f474c41;

1223 
	g_ALG_groupU£d
[20] = {

1246 
	~<ti/sdo/˚/oßl/SemMP.h
>

1247 
	~<ti/xdais/ülg.h
>

1249 
SemMP_H™dÀ
 
	g_ALG_£ms
[20];

1250 
	g_ALG_groupRefCou¡
[20] = {

1273 
IALG_H™dÀ
 
	g_Alg‹ôhm_lockOw√r
[20] = {

1274 
NULL
,

1275 
NULL
,

1276 
NULL
,

1277 
NULL
,

1278 
NULL
,

1279 
NULL
,

1280 
NULL
,

1281 
NULL
,

1282 
NULL
,

1283 
NULL
,

1284 
NULL
,

1285 
NULL
,

1286 
NULL
,

1287 
NULL
,

1288 
NULL
,

1289 
NULL
,

1290 
NULL
,

1291 
NULL
,

1292 
NULL
,

1293 
NULL
,

1298 
Void
 
	$DMAN3_CE_öô
()

1300 
	}
}

1301 
Void
 
	$DMAN3_CE_exô
()

1303 
	}
}

1305 
	$DMAN3_gø¡DmaCh™√ls
(
groupId
, *
ÆgH™dÀs
, *
dmaFxns
,

1306 
numAlgs
)

1310 
	}
}

1312 
	$DMAN3_ªÀa£DmaCh™√ls
(*
ÆgH™dÀs
, * 
dmaFxns
, 
numAlgs
)

1316 
	}
}

1320 
	~<ti/xdais/úes.h
>

1322 
IRES_Sètus
 
	$RMAN_a˘iv©eAŒResour˚s
(
IALG_H™dÀ
 
ÆgH™dÀ
, 
IRES_Fxns
 *
ªsFxns
, 
I¡
 
s¸©chId
)

1325  (
IRES_OK
);

1326 
	}
}

1328 
IRES_Sètus
 
	$RMAN_assignResour˚s
(
IALG_H™dÀ
 
ÆgH™dÀ
, 
IRES_Fxns
 *
ªsFxns
,

1329 
I¡
 
s¸©chGroupId
)

1332  (
IRES_OK
);

1333 
	}
}

1335 
IRES_Sètus
 
	$RMAN_dó˘iv©eAŒResour˚s
(
IALG_H™dÀ
 
ÆgH™dÀ
,

1336 
IRES_Fxns
 * 
ªsFxns
, 
I¡
 
s¸©chId
)

1339  (
IRES_OK
);

1340 
	}
}

1342 
IRES_Sètus
 
	$RMAN_‰ìResour˚s
(
IALG_H™dÀ
 
ÆgH™dÀ
, 
IRES_Fxns
 * 
ªsFxns
,

1343 
I¡
 
s¸©chGroupId
)

1346  (
IRES_OK
);

1347 
	}
}

1349 
IRES_Sètus
 
	$RMAN_öô
()

1351  (
IRES_OK
);

1352 
	}
}

1354 
IRES_Sètus
 
	$RMAN_exô
()

1356  (
IRES_OK
);

1357 
	}
}

1366 
Boﬁ
 
	gti_sdo_fc_mu…iPro˚ss
 = 
TRUE
;

1377 #ifde‡
__ti__


1378 
	#PRAGMA
(
x
Ë
	`_Pøgma
(#x)

	)

1379 
	#xdc__˛ök_c⁄°™t
(
v¨
) \

1380 
	`PRAGMA
(
	`DATA_SECTION
(
v¨
, ".const:" #var)) \

1381 
	`asm
(" .sect \".const:" #var "\"\n" \

1386 " .˛ök")

	)

	@package/cfg/bin/ti_platforms_evm3530/app_remote_xv5T.h

8 
	~<xdc/°d.h
>

	@package/package.defs.h

8 #i‚de‡
ti_sdo_˚_exam∂es_≠ps_video_c›y__


9 
	#ti_sdo_˚_exam∂es_≠ps_video_c›y__


	)

	@package/package_ti.sdo.ce.examples.apps.video_copy.c

8 
	~<xdc/°d.h
>

10 
__FAR__
 
	gti_sdo_˚_exam∂es_≠ps_video_c›y__dummy__
;

12 
	#__xdc_PKGVERS
 1, 0, 0

	)

13 
	#__xdc_PKGNAME
 
ti
.
sdo
.
˚
.
exam∂es
.
≠ps
.
video_c›y


	)

14 
	#__xdc_PKGPREFIX
 
ti_sdo_˚_exam∂es_≠ps_video_c›y_


	)

16 #ifde‡
__xdc_bld_pkg_c__


17 
	#__°rögify
(
a
Ë#a

	)

18 
	#__loˇl_ö˛ude
(
a
Ë
	`__°rögify
◊)

	)

19 #ö˛udê
__loˇl_ö˛ude
(
__xdc_bld_pkg_c__
)

	@smain.h

38 
I¡
 
smaö
(I¡ 
¨gc
, 
Såög
 
¨gv
[]);

	@/usr/include/dlfcn.h

20 #i‚def 
_DLFCN_H


21 
	#_DLFCN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<bôs/dlf˙.h
>

31 #ifde‡
__USE_GNU


36 
	#RTLD_NEXT
 ((*Ë-1l)

	)

41 
	#RTLD_DEFAULT
 ((*Ë0)

	)

45 
	tLmid_t
;

48 
	#LM_ID_BASE
 0

	)

49 
	#LM_ID_NEWLM
 -1

	)

53 
__BEGIN_DECLS


57 *
	$dl›í
 (
__c⁄°
 *
__fûe
, 
__mode
Ë
__THROW
;

61 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

66 
__c⁄°
 *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

68 #ifde‡
__USE_GNU


70 *
	$dlm›í
 (
Lmid_t
 
__nsid
, 
__c⁄°
 *
__fûe
, 
__mode
Ë
__THROW
;

74 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

75 
__c⁄°
 *
__ª°ri˘
 
__«me
,

76 
__c⁄°
 *
__ª°ri˘
 
__vîsi⁄
)

77 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

83 *
	$dÀº‹
 (Ë
__THROW
;

86 #ifde‡
__USE_GNU


91 
__c⁄°
 *
dli_‚ame
;

92 *
dli_fba£
;

93 
__c⁄°
 *
dli_¢ame
;

94 *
dli_ßddr
;

95 } 
	tDl_öfo
;

99 
	$dœddr
 (
__c⁄°
 *
__addªss
, 
Dl_öfo
 *
__öfo
)

100 
__THROW
 
	`__n⁄nuŒ
 ((2));

103 
	$dœddr1
 (
__c⁄°
 *
__addªss
, 
Dl_öfo
 *
__öfo
,

104 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

112 
RTLD_DL_SYMENT
 = 1,

115 
RTLD_DL_LINKMAP
 = 2

124 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

125 
__ªque°
, *
__ª°ri˘
 
__¨g
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

132 
RTLD_DI_LMID
 = 1,

136 
RTLD_DI_LINKMAP
 = 2,

138 
RTLD_DI_CONFIGADDR
 = 3,

145 
RTLD_DI_SERINFO
 = 4,

146 
RTLD_DI_SERINFOSIZE
 = 5,

150 
RTLD_DI_ORIGIN
 = 6,

152 
RTLD_DI_PROFILENAME
 = 7,

153 
RTLD_DI_PROFILEOUT
 = 8,

158 
RTLD_DI_TLS_MODID
 = 9,

164 
RTLD_DI_TLS_DATA
 = 10,

166 
RTLD_DI_MAX
 = 10

174 *
dls_«me
;

175 
dls_Êags
;

176 } 
	tDl_£Ω©h
;

182 
size_t
 
dls_size
;

183 
dls_˙t
;

184 
Dl_£Ω©h
 
dls_£Ω©h
[1];

185 } 
	tDl_£röfo
;

189 
__END_DECLS


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/linux/videodev2.h

56 #i‚de‡
__LINUX_VIDEODEV2_H


57 
	#__LINUX_VIDEODEV2_H


	)

59 
	~<sys/time.h
>

61 
	~<löux/io˘l.h
>

62 
	~<löux/ty≥s.h
>

68 
	#VIDEO_MAX_FRAME
 32

	)

69 
	#VIDEO_MAX_PLANES
 8

	)

75 
	#VID_TYPE_CAPTURE
 1

	)

76 
	#VID_TYPE_TUNER
 2

	)

77 
	#VID_TYPE_TELETEXT
 4

	)

78 
	#VID_TYPE_OVERLAY
 8

	)

79 
	#VID_TYPE_CHROMAKEY
 16

	)

80 
	#VID_TYPE_CLIPPING
 32

	)

81 
	#VID_TYPE_FRAMERAM
 64

	)

82 
	#VID_TYPE_SCALES
 128

	)

83 
	#VID_TYPE_MONOCHROME
 256

	)

84 
	#VID_TYPE_SUBCAPTURE
 512

	)

85 
	#VID_TYPE_MPEG_DECODER
 1024

	)

86 
	#VID_TYPE_MPEG_ENCODER
 2048

	)

87 
	#VID_TYPE_MJPEG_DECODER
 4096

	)

88 
	#VID_TYPE_MJPEG_ENCODER
 8192

	)

95 
	#v4l2_fourcc
(
a
, 
b
, 
c
, 
d
)\

96 ((
__u32
)(
a
Ë| ((__u32)(
b
Ë<< 8Ë| ((__u32)(
c
Ë<< 16Ë| ((__u32)(
d
Ë<< 24))

	)

101 
	ev4l2_fõld
 {

102 
	mV4L2_FIELD_ANY
 = 0,

106 
	mV4L2_FIELD_NONE
 = 1,

107 
	mV4L2_FIELD_TOP
 = 2,

108 
	mV4L2_FIELD_BOTTOM
 = 3,

109 
	mV4L2_FIELD_INTERLACED
 = 4,

110 
	mV4L2_FIELD_SEQ_TB
 = 5,

112 
	mV4L2_FIELD_SEQ_BT
 = 6,

113 
	mV4L2_FIELD_ALTERNATE
 = 7,

115 
	mV4L2_FIELD_INTERLACED_TB
 = 8,

118 
	mV4L2_FIELD_INTERLACED_BT
 = 9,

122 
	#V4L2_FIELD_HAS_TOP
(
fõld
) \

123 ((
fõld
Ë=
V4L2_FIELD_TOP
 ||\

124 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

125 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

126 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

127 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

128 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

129 
	#V4L2_FIELD_HAS_BOTTOM
(
fõld
) \

130 ((
fõld
Ë=
V4L2_FIELD_BOTTOM
 ||\

131 (
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

132 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

133 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

134 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

135 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

136 
	#V4L2_FIELD_HAS_BOTH
(
fõld
) \

137 ((
fõld
Ë=
V4L2_FIELD_INTERLACED
 ||\

138 (
fõld
Ë=
V4L2_FIELD_INTERLACED_TB
 ||\

139 (
fõld
Ë=
V4L2_FIELD_INTERLACED_BT
 ||\

140 (
fõld
Ë=
V4L2_FIELD_SEQ_TB
 ||\

141 (
fõld
Ë=
V4L2_FIELD_SEQ_BT
)

	)

143 
	ev4l2_buf_ty≥
 {

144 
	mV4L2_BUF_TYPE_VIDEO_CAPTURE
 = 1,

145 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT
 = 2,

146 
	mV4L2_BUF_TYPE_VIDEO_OVERLAY
 = 3,

147 
	mV4L2_BUF_TYPE_VBI_CAPTURE
 = 4,

148 
	mV4L2_BUF_TYPE_VBI_OUTPUT
 = 5,

149 
	mV4L2_BUF_TYPE_SLICED_VBI_CAPTURE
 = 6,

150 
	mV4L2_BUF_TYPE_SLICED_VBI_OUTPUT
 = 7,

153 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY
 = 8,

155 
	mV4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE
 = 9,

156 
	mV4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
 = 10,

157 
	mV4L2_BUF_TYPE_PRIVATE
 = 0x80,

160 
	#V4L2_TYPE_IS_MULTIPLANAR
(
ty≥
) \

161 ((
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_CAPTURE_MPLANE
 \

162 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
)

	)

164 
	#V4L2_TYPE_IS_OUTPUT
(
ty≥
) \

165 ((
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT
 \

166 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE
 \

167 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OVERLAY
 \

168 || (
ty≥
Ë=
V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY
 \

169 || (
ty≥
Ë=
V4L2_BUF_TYPE_VBI_OUTPUT
 \

170 || (
ty≥
Ë=
V4L2_BUF_TYPE_SLICED_VBI_OUTPUT
)

	)

172 
	ev4l2_tu√r_ty≥
 {

173 
	mV4L2_TUNER_RADIO
 = 1,

174 
	mV4L2_TUNER_ANALOG_TV
 = 2,

175 
	mV4L2_TUNER_DIGITAL_TV
 = 3,

178 
	ev4l2_mem‹y
 {

179 
	mV4L2_MEMORY_MMAP
 = 1,

180 
	mV4L2_MEMORY_USERPTR
 = 2,

181 
	mV4L2_MEMORY_OVERLAY
 = 3,

185 
	ev4l2_cﬁ‹•a˚
 {

187 
	mV4L2_COLORSPACE_SMPTE170M
 = 1,

190 
	mV4L2_COLORSPACE_SMPTE240M
 = 2,

193 
	mV4L2_COLORSPACE_REC709
 = 3,

196 
	mV4L2_COLORSPACE_BT878
 = 4,

199 
	mV4L2_COLORSPACE_470_SYSTEM_M
 = 5,

200 
	mV4L2_COLORSPACE_470_SYSTEM_BG
 = 6,

206 
	mV4L2_COLORSPACE_JPEG
 = 7,

209 
	mV4L2_COLORSPACE_SRGB
 = 8,

212 
	ev4l2_¥i‹ôy
 {

213 
	mV4L2_PRIORITY_UNSET
 = 0,

214 
	mV4L2_PRIORITY_BACKGROUND
 = 1,

215 
	mV4L2_PRIORITY_INTERACTIVE
 = 2,

216 
	mV4L2_PRIORITY_RECORD
 = 3,

217 
	mV4L2_PRIORITY_DEFAULT
 = 
V4L2_PRIORITY_INTERACTIVE
,

220 
	sv4l2_ª˘
 {

221 
__s32
 
	mÀ·
;

222 
__s32
 
	mt›
;

223 
__s32
 
	mwidth
;

224 
__s32
 
	mheight
;

227 
	sv4l2_‰a˘
 {

228 
__u32
 
	mnumî©‹
;

229 
__u32
 
	mdíomö©‹
;

235 
	sv4l2_ˇ∑bûôy
 {

236 
__u8
 
	mdrivî
[16];

237 
__u8
 
	mˇrd
[32];

238 
__u8
 
	mbus_öfo
[32];

239 
__u32
 
	mvîsi⁄
;

240 
__u32
 
	mˇ∑bûôõs
;

241 
__u32
 
	mª£rved
[4];

245 
	#V4L2_CAP_VIDEO_CAPTURE
 0x00000001

	)

246 
	#V4L2_CAP_VIDEO_OUTPUT
 0x00000002

	)

247 
	#V4L2_CAP_VIDEO_OVERLAY
 0x00000004

	)

248 
	#V4L2_CAP_VBI_CAPTURE
 0x00000010

	)

249 
	#V4L2_CAP_VBI_OUTPUT
 0x00000020

	)

250 
	#V4L2_CAP_SLICED_VBI_CAPTURE
 0x00000040

	)

251 
	#V4L2_CAP_SLICED_VBI_OUTPUT
 0x00000080

	)

252 
	#V4L2_CAP_RDS_CAPTURE
 0x00000100

	)

253 
	#V4L2_CAP_VIDEO_OUTPUT_OVERLAY
 0x00000200

	)

254 
	#V4L2_CAP_HW_FREQ_SEEK
 0x00000400

	)

255 
	#V4L2_CAP_RDS_OUTPUT
 0x00000800

	)

258 
	#V4L2_CAP_VIDEO_CAPTURE_MPLANE
 0x00001000

	)

260 
	#V4L2_CAP_VIDEO_OUTPUT_MPLANE
 0x00002000

	)

262 
	#V4L2_CAP_TUNER
 0x00010000

	)

263 
	#V4L2_CAP_AUDIO
 0x00020000

	)

264 
	#V4L2_CAP_RADIO
 0x00040000

	)

265 
	#V4L2_CAP_MODULATOR
 0x00080000

	)

267 
	#V4L2_CAP_READWRITE
 0x01000000

	)

268 
	#V4L2_CAP_ASYNCIO
 0x02000000

	)

269 
	#V4L2_CAP_STREAMING
 0x04000000

	)

274 
	sv4l2_pix_f‹m©
 {

275 
__u32
 
	mwidth
;

276 
__u32
 
	mheight
;

277 
__u32
 
	mpixñf‹m©
;

278 
v4l2_fõld
 
	mfõld
;

279 
__u32
 
	mbyã•îlöe
;

280 
__u32
 
	msizeimage
;

281 
v4l2_cﬁ‹•a˚
 
	mcﬁ‹•a˚
;

282 
__u32
 
	m¥iv
;

288 
	#V4L2_PIX_FMT_RGB332
 
	`v4l2_fourcc
('R', 'G', 'B', '1'Ë

	)

289 
	#V4L2_PIX_FMT_RGB444
 
	`v4l2_fourcc
('R', '4', '4', '4'Ë

	)

290 
	#V4L2_PIX_FMT_RGB555
 
	`v4l2_fourcc
('R', 'G', 'B', 'O'Ë

	)

291 
	#V4L2_PIX_FMT_RGB565
 
	`v4l2_fourcc
('R', 'G', 'B', 'P'Ë

	)

292 
	#V4L2_PIX_FMT_RGB555X
 
	`v4l2_fourcc
('R', 'G', 'B', 'Q'Ë

	)

293 
	#V4L2_PIX_FMT_RGB565X
 
	`v4l2_fourcc
('R', 'G', 'B', 'R'Ë

	)

294 
	#V4L2_PIX_FMT_BGR666
 
	`v4l2_fourcc
('B', 'G', 'R', 'H'Ë

	)

295 
	#V4L2_PIX_FMT_BGR24
 
	`v4l2_fourcc
('B', 'G', 'R', '3'Ë

	)

296 
	#V4L2_PIX_FMT_RGB24
 
	`v4l2_fourcc
('R', 'G', 'B', '3'Ë

	)

297 
	#V4L2_PIX_FMT_BGR32
 
	`v4l2_fourcc
('B', 'G', 'R', '4'Ë

	)

298 
	#V4L2_PIX_FMT_RGB32
 
	`v4l2_fourcc
('R', 'G', 'B', '4'Ë

	)

301 
	#V4L2_PIX_FMT_GREY
 
	`v4l2_fourcc
('G', 'R', 'E', 'Y'Ë

	)

302 
	#V4L2_PIX_FMT_Y4
 
	`v4l2_fourcc
('Y', '0', '4', ' 'Ë

	)

303 
	#V4L2_PIX_FMT_Y6
 
	`v4l2_fourcc
('Y', '0', '6', ' 'Ë

	)

304 
	#V4L2_PIX_FMT_Y10
 
	`v4l2_fourcc
('Y', '1', '0', ' 'Ë

	)

305 
	#V4L2_PIX_FMT_Y12
 
	`v4l2_fourcc
('Y', '1', '2', ' 'Ë

	)

306 
	#V4L2_PIX_FMT_Y16
 
	`v4l2_fourcc
('Y', '1', '6', ' 'Ë

	)

309 
	#V4L2_PIX_FMT_Y10BPACK
 
	`v4l2_fourcc
('Y', '1', '0', 'B'Ë

	)

312 
	#V4L2_PIX_FMT_PAL8
 
	`v4l2_fourcc
('P', 'A', 'L', '8'Ë

	)

315 
	#V4L2_PIX_FMT_YVU410
 
	`v4l2_fourcc
('Y', 'V', 'U', '9'Ë

	)

316 
	#V4L2_PIX_FMT_YVU420
 
	`v4l2_fourcc
('Y', 'V', '1', '2'Ë

	)

317 
	#V4L2_PIX_FMT_YUYV
 
	`v4l2_fourcc
('Y', 'U', 'Y', 'V'Ë

	)

318 
	#V4L2_PIX_FMT_YYUV
 
	`v4l2_fourcc
('Y', 'Y', 'U', 'V'Ë

	)

319 
	#V4L2_PIX_FMT_YVYU
 
	`v4l2_fourcc
('Y', 'V', 'Y', 'U'Ë

	)

320 
	#V4L2_PIX_FMT_UYVY
 
	`v4l2_fourcc
('U', 'Y', 'V', 'Y'Ë

	)

321 
	#V4L2_PIX_FMT_VYUY
 
	`v4l2_fourcc
('V', 'Y', 'U', 'Y'Ë

	)

322 
	#V4L2_PIX_FMT_YUV422P
 
	`v4l2_fourcc
('4', '2', '2', 'P'Ë

	)

323 
	#V4L2_PIX_FMT_YUV411P
 
	`v4l2_fourcc
('4', '1', '1', 'P'Ë

	)

324 
	#V4L2_PIX_FMT_Y41P
 
	`v4l2_fourcc
('Y', '4', '1', 'P'Ë

	)

325 
	#V4L2_PIX_FMT_YUV444
 
	`v4l2_fourcc
('Y', '4', '4', '4'Ë

	)

326 
	#V4L2_PIX_FMT_YUV555
 
	`v4l2_fourcc
('Y', 'U', 'V', 'O'Ë

	)

327 
	#V4L2_PIX_FMT_YUV565
 
	`v4l2_fourcc
('Y', 'U', 'V', 'P'Ë

	)

328 
	#V4L2_PIX_FMT_YUV32
 
	`v4l2_fourcc
('Y', 'U', 'V', '4'Ë

	)

329 
	#V4L2_PIX_FMT_YUV410
 
	`v4l2_fourcc
('Y', 'U', 'V', '9'Ë

	)

330 
	#V4L2_PIX_FMT_YUV420
 
	`v4l2_fourcc
('Y', 'U', '1', '2'Ë

	)

331 
	#V4L2_PIX_FMT_HI240
 
	`v4l2_fourcc
('H', 'I', '2', '4'Ë

	)

332 
	#V4L2_PIX_FMT_HM12
 
	`v4l2_fourcc
('H', 'M', '1', '2'Ë

	)

333 
	#V4L2_PIX_FMT_M420
 
	`v4l2_fourcc
('M', '4', '2', '0'Ë

	)

336 
	#V4L2_PIX_FMT_NV12
 
	`v4l2_fourcc
('N', 'V', '1', '2'Ë

	)

337 
	#V4L2_PIX_FMT_NV21
 
	`v4l2_fourcc
('N', 'V', '2', '1'Ë

	)

338 
	#V4L2_PIX_FMT_NV16
 
	`v4l2_fourcc
('N', 'V', '1', '6'Ë

	)

339 
	#V4L2_PIX_FMT_NV61
 
	`v4l2_fourcc
('N', 'V', '6', '1'Ë

	)

342 
	#V4L2_PIX_FMT_NV12M
 
	`v4l2_fourcc
('N', 'M', '1', '2'Ë

	)

343 
	#V4L2_PIX_FMT_NV12MT
 
	`v4l2_fourcc
('T', 'M', '1', '2'Ë

	)

346 
	#V4L2_PIX_FMT_YUV420M
 
	`v4l2_fourcc
('Y', 'M', '1', '2'Ë

	)

349 
	#V4L2_PIX_FMT_SBGGR8
 
	`v4l2_fourcc
('B', 'A', '8', '1'Ë

	)

350 
	#V4L2_PIX_FMT_SGBRG8
 
	`v4l2_fourcc
('G', 'B', 'R', 'G'Ë

	)

351 
	#V4L2_PIX_FMT_SGRBG8
 
	`v4l2_fourcc
('G', 'R', 'B', 'G'Ë

	)

352 
	#V4L2_PIX_FMT_SRGGB8
 
	`v4l2_fourcc
('R', 'G', 'G', 'B'Ë

	)

353 
	#V4L2_PIX_FMT_SBGGR10
 
	`v4l2_fourcc
('B', 'G', '1', '0'Ë

	)

354 
	#V4L2_PIX_FMT_SGBRG10
 
	`v4l2_fourcc
('G', 'B', '1', '0'Ë

	)

355 
	#V4L2_PIX_FMT_SGRBG10
 
	`v4l2_fourcc
('B', 'A', '1', '0'Ë

	)

356 
	#V4L2_PIX_FMT_SRGGB10
 
	`v4l2_fourcc
('R', 'G', '1', '0'Ë

	)

357 
	#V4L2_PIX_FMT_SBGGR12
 
	`v4l2_fourcc
('B', 'G', '1', '2'Ë

	)

358 
	#V4L2_PIX_FMT_SGBRG12
 
	`v4l2_fourcc
('G', 'B', '1', '2'Ë

	)

359 
	#V4L2_PIX_FMT_SGRBG12
 
	`v4l2_fourcc
('B', 'A', '1', '2'Ë

	)

360 
	#V4L2_PIX_FMT_SRGGB12
 
	`v4l2_fourcc
('R', 'G', '1', '2'Ë

	)

362 
	#V4L2_PIX_FMT_SGRBG10DPCM8
 
	`v4l2_fourcc
('B', 'D', '1', '0')

	)

367 
	#V4L2_PIX_FMT_SBGGR16
 
	`v4l2_fourcc
('B', 'Y', 'R', '2'Ë

	)

370 
	#V4L2_PIX_FMT_MJPEG
 
	`v4l2_fourcc
('M', 'J', 'P', 'G'Ë

	)

371 
	#V4L2_PIX_FMT_JPEG
 
	`v4l2_fourcc
('J', 'P', 'E', 'G'Ë

	)

372 
	#V4L2_PIX_FMT_DV
 
	`v4l2_fourcc
('d', 'v', 's', 'd'Ë

	)

373 
	#V4L2_PIX_FMT_MPEG
 
	`v4l2_fourcc
('M', 'P', 'E', 'G'Ë

	)

374 
	#V4L2_PIX_FMT_H264
 
	`v4l2_fourcc
('H', '2', '6', '4'Ë

	)

375 
	#V4L2_PIX_FMT_H264_NO_SC
 
	`v4l2_fourcc
('A', 'V', 'C', '1'Ë

	)

376 
	#V4L2_PIX_FMT_H263
 
	`v4l2_fourcc
('H', '2', '6', '3'Ë

	)

377 
	#V4L2_PIX_FMT_MPEG1
 
	`v4l2_fourcc
('M', 'P', 'G', '1'Ë

	)

378 
	#V4L2_PIX_FMT_MPEG2
 
	`v4l2_fourcc
('M', 'P', 'G', '2'Ë

	)

379 
	#V4L2_PIX_FMT_MPEG4
 
	`v4l2_fourcc
('M', 'P', 'G', '4'Ë

	)

380 
	#V4L2_PIX_FMT_XVID
 
	`v4l2_fourcc
('X', 'V', 'I', 'D'Ë

	)

381 
	#V4L2_PIX_FMT_VC1_ANNEX_G
 
	`v4l2_fourcc
('V', 'C', '1', 'G'Ë

	)

382 
	#V4L2_PIX_FMT_VC1_ANNEX_L
 
	`v4l2_fourcc
('V', 'C', '1', 'L'Ë

	)

385 
	#V4L2_PIX_FMT_CPIA1
 
	`v4l2_fourcc
('C', 'P', 'I', 'A'Ë

	)

386 
	#V4L2_PIX_FMT_WNVA
 
	`v4l2_fourcc
('W', 'N', 'V', 'A'Ë

	)

387 
	#V4L2_PIX_FMT_SN9C10X
 
	`v4l2_fourcc
('S', '9', '1', '0'Ë

	)

388 
	#V4L2_PIX_FMT_SN9C20X_I420
 
	`v4l2_fourcc
('S', '9', '2', '0'Ë

	)

389 
	#V4L2_PIX_FMT_PWC1
 
	`v4l2_fourcc
('P', 'W', 'C', '1'Ë

	)

390 
	#V4L2_PIX_FMT_PWC2
 
	`v4l2_fourcc
('P', 'W', 'C', '2'Ë

	)

391 
	#V4L2_PIX_FMT_ET61X251
 
	`v4l2_fourcc
('E', '6', '2', '5'Ë

	)

392 
	#V4L2_PIX_FMT_SPCA501
 
	`v4l2_fourcc
('S', '5', '0', '1'Ë

	)

393 
	#V4L2_PIX_FMT_SPCA505
 
	`v4l2_fourcc
('S', '5', '0', '5'Ë

	)

394 
	#V4L2_PIX_FMT_SPCA508
 
	`v4l2_fourcc
('S', '5', '0', '8'Ë

	)

395 
	#V4L2_PIX_FMT_SPCA561
 
	`v4l2_fourcc
('S', '5', '6', '1'Ë

	)

396 
	#V4L2_PIX_FMT_PAC207
 
	`v4l2_fourcc
('P', '2', '0', '7'Ë

	)

397 
	#V4L2_PIX_FMT_MR97310A
 
	`v4l2_fourcc
('M', '3', '1', '0'Ë

	)

398 
	#V4L2_PIX_FMT_SN9C2028
 
	`v4l2_fourcc
('S', 'O', 'N', 'X'Ë

	)

399 
	#V4L2_PIX_FMT_SQ905C
 
	`v4l2_fourcc
('9', '0', '5', 'C'Ë

	)

400 
	#V4L2_PIX_FMT_PJPG
 
	`v4l2_fourcc
('P', 'J', 'P', 'G'Ë

	)

401 
	#V4L2_PIX_FMT_OV511
 
	`v4l2_fourcc
('O', '5', '1', '1'Ë

	)

402 
	#V4L2_PIX_FMT_OV518
 
	`v4l2_fourcc
('O', '5', '1', '8'Ë

	)

403 
	#V4L2_PIX_FMT_STV0680
 
	`v4l2_fourcc
('S', '6', '8', '0'Ë

	)

404 
	#V4L2_PIX_FMT_TM6000
 
	`v4l2_fourcc
('T', 'M', '6', '0'Ë

	)

405 
	#V4L2_PIX_FMT_CIT_YYVYUY
 
	`v4l2_fourcc
('C', 'I', 'T', 'V'Ë

	)

406 
	#V4L2_PIX_FMT_KONICA420
 
	`v4l2_fourcc
('K', 'O', 'N', 'I'Ë

	)

407 
	#V4L2_PIX_FMT_JPGL
 
	`v4l2_fourcc
('J', 'P', 'G', 'L'Ë

	)

408 
	#V4L2_PIX_FMT_SE401
 
	`v4l2_fourcc
('S', '4', '0', '1'Ë

	)

413 
	sv4l2_fmtdesc
 {

414 
__u32
 
	mödex
;

415 
v4l2_buf_ty≥
 
	mty≥
;

416 
__u32
 
	mÊags
;

417 
__u8
 
	mdes¸ùti⁄
[32];

418 
__u32
 
	mpixñf‹m©
;

419 
__u32
 
	mª£rved
[4];

422 
	#V4L2_FMT_FLAG_COMPRESSED
 0x0001

	)

423 
	#V4L2_FMT_FLAG_EMULATED
 0x0002

	)

430 
	ev4l2_‰msizëy≥s
 {

431 
	mV4L2_FRMSIZE_TYPE_DISCRETE
 = 1,

432 
	mV4L2_FRMSIZE_TYPE_CONTINUOUS
 = 2,

433 
	mV4L2_FRMSIZE_TYPE_STEPWISE
 = 3,

436 
	sv4l2_‰msize_dis¸ëe
 {

437 
__u32
 
	mwidth
;

438 
__u32
 
	mheight
;

441 
	sv4l2_‰msize_°ïwi£
 {

442 
__u32
 
	mmö_width
;

443 
__u32
 
	mmax_width
;

444 
__u32
 
	m°ï_width
;

445 
__u32
 
	mmö_height
;

446 
__u32
 
	mmax_height
;

447 
__u32
 
	m°ï_height
;

450 
	sv4l2_‰msizìnum
 {

451 
__u32
 
	mödex
;

452 
__u32
 
	mpixñ_f‹m©
;

453 
__u32
 
	mty≥
;

456 
v4l2_‰msize_dis¸ëe
 
	mdis¸ëe
;

457 
v4l2_‰msize_°ïwi£
 
	m°ïwi£
;

460 
__u32
 
	mª£rved
[2];

466 
	ev4l2_‰mivÆty≥s
 {

467 
	mV4L2_FRMIVAL_TYPE_DISCRETE
 = 1,

468 
	mV4L2_FRMIVAL_TYPE_CONTINUOUS
 = 2,

469 
	mV4L2_FRMIVAL_TYPE_STEPWISE
 = 3,

472 
	sv4l2_‰mivÆ_°ïwi£
 {

473 
v4l2_‰a˘
 
	mmö
;

474 
v4l2_‰a˘
 
	mmax
;

475 
v4l2_‰a˘
 
	m°ï
;

478 
	sv4l2_‰mivÆíum
 {

479 
__u32
 
	mödex
;

480 
__u32
 
	mpixñ_f‹m©
;

481 
__u32
 
	mwidth
;

482 
__u32
 
	mheight
;

483 
__u32
 
	mty≥
;

486 
v4l2_‰a˘
 
	mdis¸ëe
;

487 
v4l2_‰mivÆ_°ïwi£
 
	m°ïwi£
;

490 
__u32
 
	mª£rved
[2];

497 
	sv4l2_timecode
 {

498 
__u32
 
	mty≥
;

499 
__u32
 
	mÊags
;

500 
__u8
 
	m‰ames
;

501 
__u8
 
	m£c⁄ds
;

502 
__u8
 
	mmöuãs
;

503 
__u8
 
	mhours
;

504 
__u8
 
	mu£rbôs
[4];

508 
	#V4L2_TC_TYPE_24FPS
 1

	)

509 
	#V4L2_TC_TYPE_25FPS
 2

	)

510 
	#V4L2_TC_TYPE_30FPS
 3

	)

511 
	#V4L2_TC_TYPE_50FPS
 4

	)

512 
	#V4L2_TC_TYPE_60FPS
 5

	)

515 
	#V4L2_TC_FLAG_DROPFRAME
 0x0001

	)

516 
	#V4L2_TC_FLAG_COLORFRAME
 0x0002

	)

517 
	#V4L2_TC_USERBITS_fõld
 0x000C

	)

518 
	#V4L2_TC_USERBITS_USERDEFINED
 0x0000

	)

519 
	#V4L2_TC_USERBITS_8BITCHARS
 0x0008

	)

522 
	sv4l2_j≥gcom¥essi⁄
 {

523 
	mquÆôy
;

525 
	mAPPn
;

527 
	mAPP_Àn
;

528 
	mAPP_d©a
[60];

530 
	mCOM_Àn
;

531 
	mCOM_d©a
[60];

533 
__u32
 
	mj≥g_m¨kîs
;

543 
	#V4L2_JPEG_MARKER_DHT
 (1<<3Ë

	)

544 
	#V4L2_JPEG_MARKER_DQT
 (1<<4Ë

	)

545 
	#V4L2_JPEG_MARKER_DRI
 (1<<5Ë

	)

546 
	#V4L2_JPEG_MARKER_COM
 (1<<6Ë

	)

547 
	#V4L2_JPEG_MARKER_APP
 (1<<7Ë

	)

554 
	sv4l2_ªque°buf„rs
 {

555 
__u32
 
	mcou¡
;

556 
v4l2_buf_ty≥
 
	mty≥
;

557 
v4l2_mem‹y
 
	mmem‹y
;

558 
__u32
 
	mª£rved
[2];

579 
	sv4l2_∂™e
 {

580 
__u32
 
	mbyãsu£d
;

581 
__u32
 
	mÀngth
;

583 
__u32
 
	mmem_off£t
;

584 
	mu£Ωå
;

585 } 
	mm
;

586 
__u32
 
	md©a_off£t
;

587 
__u32
 
	mª£rved
[11];

617 
	sv4l2_buf„r
 {

618 
__u32
 
	mödex
;

619 
v4l2_buf_ty≥
 
	mty≥
;

620 
__u32
 
	mbyãsu£d
;

621 
__u32
 
	mÊags
;

622 
v4l2_fõld
 
	mfõld
;

623 
timevÆ
 
	mtime°amp
;

624 
v4l2_timecode
 
	mtimecode
;

625 
__u32
 
	m£quí˚
;

628 
v4l2_mem‹y
 
	mmem‹y
;

630 
__u32
 
	moff£t
;

631 
	mu£Ωå
;

632 
v4l2_∂™e
 *
	m∂™es
;

633 } 
	mm
;

634 
__u32
 
	mÀngth
;

635 
__u32
 
	möput
;

636 
__u32
 
	mª£rved
;

640 
	#V4L2_BUF_FLAG_MAPPED
 0x0001

	)

641 
	#V4L2_BUF_FLAG_QUEUED
 0x0002

	)

642 
	#V4L2_BUF_FLAG_DONE
 0x0004

	)

643 
	#V4L2_BUF_FLAG_KEYFRAME
 0x0008

	)

644 
	#V4L2_BUF_FLAG_PFRAME
 0x0010

	)

645 
	#V4L2_BUF_FLAG_BFRAME
 0x0020

	)

647 
	#V4L2_BUF_FLAG_ERROR
 0x0040

	)

648 
	#V4L2_BUF_FLAG_TIMECODE
 0x0100

	)

649 
	#V4L2_BUF_FLAG_INPUT
 0x0200

	)

650 
	#V4L2_BUF_FLAG_PREPARED
 0x0400

	)

652 
	#V4L2_BUF_FLAG_NO_CACHE_INVALIDATE
 0x0800

	)

653 
	#V4L2_BUF_FLAG_NO_CACHE_CLEAN
 0x1000

	)

658 
	sv4l2_‰amebuf„r
 {

659 
__u32
 
	mˇ∑bûôy
;

660 
__u32
 
	mÊags
;

663 *
	mba£
;

664 
v4l2_pix_f‹m©
 
	mfmt
;

667 
	#V4L2_FBUF_CAP_EXTERNOVERLAY
 0x0001

	)

668 
	#V4L2_FBUF_CAP_CHROMAKEY
 0x0002

	)

669 
	#V4L2_FBUF_CAP_LIST_CLIPPING
 0x0004

	)

670 
	#V4L2_FBUF_CAP_BITMAP_CLIPPING
 0x0008

	)

671 
	#V4L2_FBUF_CAP_LOCAL_ALPHA
 0x0010

	)

672 
	#V4L2_FBUF_CAP_GLOBAL_ALPHA
 0x0020

	)

673 
	#V4L2_FBUF_CAP_LOCAL_INV_ALPHA
 0x0040

	)

674 
	#V4L2_FBUF_CAP_SRC_CHROMAKEY
 0x0080

	)

676 
	#V4L2_FBUF_FLAG_PRIMARY
 0x0001

	)

677 
	#V4L2_FBUF_FLAG_OVERLAY
 0x0002

	)

678 
	#V4L2_FBUF_FLAG_CHROMAKEY
 0x0004

	)

679 
	#V4L2_FBUF_FLAG_LOCAL_ALPHA
 0x0008

	)

680 
	#V4L2_FBUF_FLAG_GLOBAL_ALPHA
 0x0010

	)

681 
	#V4L2_FBUF_FLAG_LOCAL_INV_ALPHA
 0x0020

	)

682 
	#V4L2_FBUF_FLAG_SRC_CHROMAKEY
 0x0040

	)

684 
	sv4l2_˛ù
 {

685 
v4l2_ª˘
 
	mc
;

686 
v4l2_˛ù
 *
	m√xt
;

689 
	sv4l2_wödow
 {

690 
v4l2_ª˘
 
	mw
;

691 
v4l2_fõld
 
	mfõld
;

692 
__u32
 
	mchromakey
;

693 
v4l2_˛ù
 *
	m˛ùs
;

694 
__u32
 
	m˛ùcou¡
;

695 *
	mbôm≠
;

696 
__u8
 
	mglobÆ_Æpha
;

702 
	sv4l2_ˇ±uª∑rm
 {

703 
__u32
 
	mˇ∑bûôy
;

704 
__u32
 
	mˇ±uªmode
;

705 
v4l2_‰a˘
 
	mtimïî‰ame
;

706 
__u32
 
	mexãndedmode
;

707 
__u32
 
	mªadbuf„rs
;

708 
__u32
 
	mª£rved
[4];

712 
	#V4L2_MODE_HIGHQUALITY
 0x0001

	)

713 
	#V4L2_CAP_TIMEPERFRAME
 0x1000

	)

715 
	sv4l2_ouçuç¨m
 {

716 
__u32
 
	mˇ∑bûôy
;

717 
__u32
 
	mouçutmode
;

718 
v4l2_‰a˘
 
	mtimïî‰ame
;

719 
__u32
 
	mexãndedmode
;

720 
__u32
 
	mwrôebuf„rs
;

721 
__u32
 
	mª£rved
[4];

727 
	sv4l2_¸›ˇp
 {

728 
v4l2_buf_ty≥
 
	mty≥
;

729 
v4l2_ª˘
 
	mbounds
;

730 
v4l2_ª˘
 
	mde‰e˘
;

731 
v4l2_‰a˘
 
	mpixña•e˘
;

734 
	sv4l2_¸›
 {

735 
v4l2_buf_ty≥
 
	mty≥
;

736 
v4l2_ª˘
 
	mc
;

743 
__u64
 
	tv4l2_°d_id
;

746 
	#V4L2_STD_PAL_B
 ((
v4l2_°d_id
)0x00000001)

	)

747 
	#V4L2_STD_PAL_B1
 ((
v4l2_°d_id
)0x00000002)

	)

748 
	#V4L2_STD_PAL_G
 ((
v4l2_°d_id
)0x00000004)

	)

749 
	#V4L2_STD_PAL_H
 ((
v4l2_°d_id
)0x00000008)

	)

750 
	#V4L2_STD_PAL_I
 ((
v4l2_°d_id
)0x00000010)

	)

751 
	#V4L2_STD_PAL_D
 ((
v4l2_°d_id
)0x00000020)

	)

752 
	#V4L2_STD_PAL_D1
 ((
v4l2_°d_id
)0x00000040)

	)

753 
	#V4L2_STD_PAL_K
 ((
v4l2_°d_id
)0x00000080)

	)

755 
	#V4L2_STD_PAL_M
 ((
v4l2_°d_id
)0x00000100)

	)

756 
	#V4L2_STD_PAL_N
 ((
v4l2_°d_id
)0x00000200)

	)

757 
	#V4L2_STD_PAL_Nc
 ((
v4l2_°d_id
)0x00000400)

	)

758 
	#V4L2_STD_PAL_60
 ((
v4l2_°d_id
)0x00000800)

	)

760 
	#V4L2_STD_NTSC_M
 ((
v4l2_°d_id
)0x00001000Ë

	)

761 
	#V4L2_STD_NTSC_M_JP
 ((
v4l2_°d_id
)0x00002000Ë

	)

762 
	#V4L2_STD_NTSC_443
 ((
v4l2_°d_id
)0x00004000)

	)

763 
	#V4L2_STD_NTSC_M_KR
 ((
v4l2_°d_id
)0x00008000Ë

	)

765 
	#V4L2_STD_SECAM_B
 ((
v4l2_°d_id
)0x00010000)

	)

766 
	#V4L2_STD_SECAM_D
 ((
v4l2_°d_id
)0x00020000)

	)

767 
	#V4L2_STD_SECAM_G
 ((
v4l2_°d_id
)0x00040000)

	)

768 
	#V4L2_STD_SECAM_H
 ((
v4l2_°d_id
)0x00080000)

	)

769 
	#V4L2_STD_SECAM_K
 ((
v4l2_°d_id
)0x00100000)

	)

770 
	#V4L2_STD_SECAM_K1
 ((
v4l2_°d_id
)0x00200000)

	)

771 
	#V4L2_STD_SECAM_L
 ((
v4l2_°d_id
)0x00400000)

	)

772 
	#V4L2_STD_SECAM_LC
 ((
v4l2_°d_id
)0x00800000)

	)

775 
	#V4L2_STD_ATSC_8_VSB
 ((
v4l2_°d_id
)0x01000000)

	)

776 
	#V4L2_STD_ATSC_16_VSB
 ((
v4l2_°d_id
)0x02000000)

	)

796 
	#V4L2_STD_NTSC
 (
V4L2_STD_NTSC_M
 |\

797 
V4L2_STD_NTSC_M_JP
 |\

798 
V4L2_STD_NTSC_M_KR
)

	)

800 
	#V4L2_STD_SECAM_DK
 (
V4L2_STD_SECAM_D
 |\

801 
V4L2_STD_SECAM_K
 |\

802 
V4L2_STD_SECAM_K1
)

	)

804 
	#V4L2_STD_SECAM
 (
V4L2_STD_SECAM_B
 |\

805 
V4L2_STD_SECAM_G
 |\

806 
V4L2_STD_SECAM_H
 |\

807 
V4L2_STD_SECAM_DK
 |\

808 
V4L2_STD_SECAM_L
 |\

809 
V4L2_STD_SECAM_LC
)

	)

811 
	#V4L2_STD_PAL_BG
 (
V4L2_STD_PAL_B
 |\

812 
V4L2_STD_PAL_B1
 |\

813 
V4L2_STD_PAL_G
)

	)

814 
	#V4L2_STD_PAL_DK
 (
V4L2_STD_PAL_D
 |\

815 
V4L2_STD_PAL_D1
 |\

816 
V4L2_STD_PAL_K
)

	)

822 
	#V4L2_STD_PAL
 (
V4L2_STD_PAL_BG
 |\

823 
V4L2_STD_PAL_DK
 |\

824 
V4L2_STD_PAL_H
 |\

825 
V4L2_STD_PAL_I
)

	)

827 
	#V4L2_STD_B
 (
V4L2_STD_PAL_B
 |\

828 
V4L2_STD_PAL_B1
 |\

829 
V4L2_STD_SECAM_B
)

	)

830 
	#V4L2_STD_G
 (
V4L2_STD_PAL_G
 |\

831 
V4L2_STD_SECAM_G
)

	)

832 
	#V4L2_STD_H
 (
V4L2_STD_PAL_H
 |\

833 
V4L2_STD_SECAM_H
)

	)

834 
	#V4L2_STD_L
 (
V4L2_STD_SECAM_L
 |\

835 
V4L2_STD_SECAM_LC
)

	)

836 
	#V4L2_STD_GH
 (
V4L2_STD_G
 |\

837 
V4L2_STD_H
)

	)

838 
	#V4L2_STD_DK
 (
V4L2_STD_PAL_DK
 |\

839 
V4L2_STD_SECAM_DK
)

	)

840 
	#V4L2_STD_BG
 (
V4L2_STD_B
 |\

841 
V4L2_STD_G
)

	)

842 
	#V4L2_STD_MN
 (
V4L2_STD_PAL_M
 |\

843 
V4L2_STD_PAL_N
 |\

844 
V4L2_STD_PAL_Nc
 |\

845 
V4L2_STD_NTSC
)

	)

848 
	#V4L2_STD_MTS
 (
V4L2_STD_NTSC_M
 |\

849 
V4L2_STD_PAL_M
 |\

850 
V4L2_STD_PAL_N
 |\

851 
V4L2_STD_PAL_Nc
)

	)

854 
	#V4L2_STD_525_60
 (
V4L2_STD_PAL_M
 |\

855 
V4L2_STD_PAL_60
 |\

856 
V4L2_STD_NTSC
 |\

857 
V4L2_STD_NTSC_443
)

	)

859 
	#V4L2_STD_625_50
 (
V4L2_STD_PAL
 |\

860 
V4L2_STD_PAL_N
 |\

861 
V4L2_STD_PAL_Nc
 |\

862 
V4L2_STD_SECAM
)

	)

864 
	#V4L2_STD_ATSC
 (
V4L2_STD_ATSC_8_VSB
 |\

865 
V4L2_STD_ATSC_16_VSB
)

	)

867 
	#V4L2_STD_UNKNOWN
 0

	)

868 
	#V4L2_STD_ALL
 (
V4L2_STD_525_60
 |\

869 
V4L2_STD_625_50
)

	)

871 
	sv4l2_°™d¨d
 {

872 
__u32
 
	mödex
;

873 
v4l2_°d_id
 
	mid
;

874 
__u8
 
	m«me
[24];

875 
v4l2_‰a˘
 
	m‰amïîiod
;

876 
__u32
 
	m‰amñöes
;

877 
__u32
 
	mª£rved
[4];

883 
	sv4l2_dv_¥e£t
 {

884 
__u32
 
	m¥e£t
;

885 
__u32
 
	mª£rved
[4];

891 
	sv4l2_dv_íum_¥e£t
 {

892 
__u32
 
	mödex
;

893 
__u32
 
	m¥e£t
;

894 
__u8
 
	m«me
[32];

895 
__u32
 
	mwidth
;

896 
__u32
 
	mheight
;

897 
__u32
 
	mª£rved
[4];

903 
	#V4L2_DV_INVALID
 0

	)

904 
	#V4L2_DV_480P59_94
 1

	)

905 
	#V4L2_DV_576P50
 2

	)

906 
	#V4L2_DV_720P24
 3

	)

907 
	#V4L2_DV_720P25
 4

	)

908 
	#V4L2_DV_720P30
 5

	)

909 
	#V4L2_DV_720P50
 6

	)

910 
	#V4L2_DV_720P59_94
 7

	)

911 
	#V4L2_DV_720P60
 8

	)

912 
	#V4L2_DV_1080I29_97
 9

	)

913 
	#V4L2_DV_1080I30
 10

	)

914 
	#V4L2_DV_1080I25
 11

	)

915 
	#V4L2_DV_1080I50
 12

	)

916 
	#V4L2_DV_1080I60
 13

	)

917 
	#V4L2_DV_1080P24
 14

	)

918 
	#V4L2_DV_1080P25
 15

	)

919 
	#V4L2_DV_1080P30
 16

	)

920 
	#V4L2_DV_1080P50
 17

	)

921 
	#V4L2_DV_1080P60
 18

	)

928 
	sv4l2_bt_timögs
 {

929 
__u32
 
	mwidth
;

930 
__u32
 
	mheight
;

931 
__u32
 
	möãæa˚d
;

932 
__u32
 
	mpﬁ¨ôõs
;

933 
__u64
 
	mpixñ˛ock
;

934 
__u32
 
	mh‰⁄ç‹ch
;

935 
__u32
 
	mhsync
;

936 
__u32
 
	mhbackp‹ch
;

937 
__u32
 
	mv‰⁄ç‹ch
;

938 
__u32
 
	mvsync
;

939 
__u32
 
	mvbackp‹ch
;

940 
__u32
 
	mû_v‰⁄ç‹ch
;

943 
__u32
 
	mû_vsync
;

946 
__u32
 
	mû_vbackp‹ch
;

949 
__u32
 
	mª£rved
[16];

950 } 
__©åibuã__
 ((
∑cked
));

953 
	#V4L2_DV_PROGRESSIVE
 0

	)

954 
	#V4L2_DV_INTERLACED
 1

	)

957 
	#V4L2_DV_VSYNC_POS_POL
 0x00000001

	)

958 
	#V4L2_DV_HSYNC_POS_POL
 0x00000002

	)

962 
	sv4l2_dv_timögs
 {

963 
__u32
 
	mty≥
;

965 
v4l2_bt_timögs
 
	mbt
;

966 
__u32
 
	mª£rved
[32];

968 } 
__©åibuã__
 ((
∑cked
));

971 
	#V4L2_DV_BT_656_1120
 0

	)

976 
	sv4l2_öput
 {

977 
__u32
 
	mödex
;

978 
__u8
 
	m«me
[32];

979 
__u32
 
	mty≥
;

980 
__u32
 
	maudio£t
;

981 
__u32
 
	mtu√r
;

982 
v4l2_°d_id
 
	m°d
;

983 
__u32
 
	m°©us
;

984 
__u32
 
	mˇ∑bûôõs
;

985 
__u32
 
	mª£rved
[3];

989 
	#V4L2_INPUT_TYPE_TUNER
 1

	)

990 
	#V4L2_INPUT_TYPE_CAMERA
 2

	)

993 
	#V4L2_IN_ST_NO_POWER
 0x00000001

	)

994 
	#V4L2_IN_ST_NO_SIGNAL
 0x00000002

	)

995 
	#V4L2_IN_ST_NO_COLOR
 0x00000004

	)

999 
	#V4L2_IN_ST_HFLIP
 0x00000010

	)

1000 
	#V4L2_IN_ST_VFLIP
 0x00000020

	)

1003 
	#V4L2_IN_ST_NO_H_LOCK
 0x00000100

	)

1004 
	#V4L2_IN_ST_COLOR_KILL
 0x00000200

	)

1007 
	#V4L2_IN_ST_NO_SYNC
 0x00010000

	)

1008 
	#V4L2_IN_ST_NO_EQU
 0x00020000

	)

1009 
	#V4L2_IN_ST_NO_CARRIER
 0x00040000

	)

1012 
	#V4L2_IN_ST_MACROVISION
 0x01000000

	)

1013 
	#V4L2_IN_ST_NO_ACCESS
 0x02000000

	)

1014 
	#V4L2_IN_ST_VTR
 0x04000000

	)

1017 
	#V4L2_IN_CAP_PRESETS
 0x00000001

	)

1018 
	#V4L2_IN_CAP_CUSTOM_TIMINGS
 0x00000002

	)

1019 
	#V4L2_IN_CAP_STD
 0x00000004

	)

1024 
	sv4l2_ouçut
 {

1025 
__u32
 
	mödex
;

1026 
__u8
 
	m«me
[32];

1027 
__u32
 
	mty≥
;

1028 
__u32
 
	maudio£t
;

1029 
__u32
 
	mmoduœt‹
;

1030 
v4l2_°d_id
 
	m°d
;

1031 
__u32
 
	mˇ∑bûôõs
;

1032 
__u32
 
	mª£rved
[3];

1035 
	#V4L2_OUTPUT_TYPE_MODULATOR
 1

	)

1036 
	#V4L2_OUTPUT_TYPE_ANALOG
 2

	)

1037 
	#V4L2_OUTPUT_TYPE_ANALOGVGAOVERLAY
 3

	)

1040 
	#V4L2_OUT_CAP_PRESETS
 0x00000001

	)

1041 
	#V4L2_OUT_CAP_CUSTOM_TIMINGS
 0x00000002

	)

1042 
	#V4L2_OUT_CAP_STD
 0x00000004

	)

1047 
	sv4l2_c⁄åﬁ
 {

1048 
__u32
 
	mid
;

1049 
__s32
 
	mvÆue
;

1052 
	sv4l2_ext_c⁄åﬁ
 {

1053 
__u32
 
	mid
;

1054 
__u32
 
	msize
;

1055 
__u32
 
	mª£rved2
[1];

1057 
__s32
 
	mvÆue
;

1058 
__s64
 
	mvÆue64
;

1059 *
	m°rög
;

1061 } 
__©åibuã__
 ((
∑cked
));

1063 
	sv4l2_ext_c⁄åﬁs
 {

1064 
__u32
 
	m˘æ_˛ass
;

1065 
__u32
 
	mcou¡
;

1066 
__u32
 
	mîr‹_idx
;

1067 
__u32
 
	mª£rved
[2];

1068 
v4l2_ext_c⁄åﬁ
 *
	mc⁄åﬁs
;

1072 
	#V4L2_CTRL_CLASS_USER
 0x00980000

	)

1073 
	#V4L2_CTRL_CLASS_MPEG
 0x00990000

	)

1074 
	#V4L2_CTRL_CLASS_CAMERA
 0x009a0000

	)

1075 
	#V4L2_CTRL_CLASS_FM_TX
 0x009b0000

	)

1076 
	#V4L2_CTRL_CLASS_FLASH
 0x009c0000

	)

1078 
	#V4L2_CTRL_ID_MASK
 (0x0fffffff)

	)

1079 
	#V4L2_CTRL_ID2CLASS
(
id
Ë((idË& 0x0fff0000UL)

	)

1080 
	#V4L2_CTRL_DRIVER_PRIV
(
id
Ë(((idË& 0xffffË>0x1000)

	)

1082 
	ev4l2_˘æ_ty≥
 {

1083 
	mV4L2_CTRL_TYPE_INTEGER
 = 1,

1084 
	mV4L2_CTRL_TYPE_BOOLEAN
 = 2,

1085 
	mV4L2_CTRL_TYPE_MENU
 = 3,

1086 
	mV4L2_CTRL_TYPE_BUTTON
 = 4,

1087 
	mV4L2_CTRL_TYPE_INTEGER64
 = 5,

1088 
	mV4L2_CTRL_TYPE_CTRL_CLASS
 = 6,

1089 
	mV4L2_CTRL_TYPE_STRING
 = 7,

1090 
	mV4L2_CTRL_TYPE_BITMASK
 = 8,

1094 
	sv4l2_quîy˘æ
 {

1095 
__u32
 
	mid
;

1096 
v4l2_˘æ_ty≥
 
	mty≥
;

1097 
__u8
 
	m«me
[32];

1098 
__s32
 
	mmöimum
;

1099 
__s32
 
	mmaximum
;

1100 
__s32
 
	m°ï
;

1101 
__s32
 
	mdeÁu…_vÆue
;

1102 
__u32
 
	mÊags
;

1103 
__u32
 
	mª£rved
[2];

1107 
	sv4l2_quîymíu
 {

1108 
__u32
 
	mid
;

1109 
__u32
 
	mödex
;

1110 
__u8
 
	m«me
[32];

1111 
__u32
 
	mª£rved
;

1115 
	#V4L2_CTRL_FLAG_DISABLED
 0x0001

	)

1116 
	#V4L2_CTRL_FLAG_GRABBED
 0x0002

	)

1117 
	#V4L2_CTRL_FLAG_READ_ONLY
 0x0004

	)

1118 
	#V4L2_CTRL_FLAG_UPDATE
 0x0008

	)

1119 
	#V4L2_CTRL_FLAG_INACTIVE
 0x0010

	)

1120 
	#V4L2_CTRL_FLAG_SLIDER
 0x0020

	)

1121 
	#V4L2_CTRL_FLAG_WRITE_ONLY
 0x0040

	)

1122 
	#V4L2_CTRL_FLAG_VOLATILE
 0x0080

	)

1125 
	#V4L2_CTRL_FLAG_NEXT_CTRL
 0x80000000

	)

1128 
	#V4L2_CID_MAX_CTRLS
 1024

	)

1129 
	#V4L2_CID_BASE
 (
V4L2_CTRL_CLASS_USER
 | 0x900)

	)

1130 
	#V4L2_CID_USER_BASE
 
V4L2_CID_BASE


	)

1132 
	#V4L2_CID_PRIVATE_BASE
 0x08000000

	)

1134 
	#V4L2_CID_USER_CLASS
 (
V4L2_CTRL_CLASS_USER
 | 1)

	)

1135 
	#V4L2_CID_BRIGHTNESS
 (
V4L2_CID_BASE
+0)

	)

1136 
	#V4L2_CID_CONTRAST
 (
V4L2_CID_BASE
+1)

	)

1137 
	#V4L2_CID_SATURATION
 (
V4L2_CID_BASE
+2)

	)

1138 
	#V4L2_CID_HUE
 (
V4L2_CID_BASE
+3)

	)

1139 
	#V4L2_CID_AUDIO_VOLUME
 (
V4L2_CID_BASE
+5)

	)

1140 
	#V4L2_CID_AUDIO_BALANCE
 (
V4L2_CID_BASE
+6)

	)

1141 
	#V4L2_CID_AUDIO_BASS
 (
V4L2_CID_BASE
+7)

	)

1142 
	#V4L2_CID_AUDIO_TREBLE
 (
V4L2_CID_BASE
+8)

	)

1143 
	#V4L2_CID_AUDIO_MUTE
 (
V4L2_CID_BASE
+9)

	)

1144 
	#V4L2_CID_AUDIO_LOUDNESS
 (
V4L2_CID_BASE
+10)

	)

1145 
	#V4L2_CID_BLACK_LEVEL
 (
V4L2_CID_BASE
+11Ë

	)

1146 
	#V4L2_CID_AUTO_WHITE_BALANCE
 (
V4L2_CID_BASE
+12)

	)

1147 
	#V4L2_CID_DO_WHITE_BALANCE
 (
V4L2_CID_BASE
+13)

	)

1148 
	#V4L2_CID_RED_BALANCE
 (
V4L2_CID_BASE
+14)

	)

1149 
	#V4L2_CID_BLUE_BALANCE
 (
V4L2_CID_BASE
+15)

	)

1150 
	#V4L2_CID_GAMMA
 (
V4L2_CID_BASE
+16)

	)

1151 
	#V4L2_CID_WHITENESS
 (
V4L2_CID_GAMMA
Ë

	)

1152 
	#V4L2_CID_EXPOSURE
 (
V4L2_CID_BASE
+17)

	)

1153 
	#V4L2_CID_AUTOGAIN
 (
V4L2_CID_BASE
+18)

	)

1154 
	#V4L2_CID_GAIN
 (
V4L2_CID_BASE
+19)

	)

1155 
	#V4L2_CID_HFLIP
 (
V4L2_CID_BASE
+20)

	)

1156 
	#V4L2_CID_VFLIP
 (
V4L2_CID_BASE
+21)

	)

1159 
	#V4L2_CID_HCENTER
 (
V4L2_CID_BASE
+22)

	)

1160 
	#V4L2_CID_VCENTER
 (
V4L2_CID_BASE
+23)

	)

1162 
	#V4L2_CID_POWER_LINE_FREQUENCY
 (
V4L2_CID_BASE
+24)

	)

1163 
	ev4l2_powî_löe_‰equícy
 {

1164 
	mV4L2_CID_POWER_LINE_FREQUENCY_DISABLED
 = 0,

1165 
	mV4L2_CID_POWER_LINE_FREQUENCY_50HZ
 = 1,

1166 
	mV4L2_CID_POWER_LINE_FREQUENCY_60HZ
 = 2,

1167 
	mV4L2_CID_POWER_LINE_FREQUENCY_AUTO
 = 3,

1169 
	#V4L2_CID_HUE_AUTO
 (
V4L2_CID_BASE
+25)

	)

1170 
	#V4L2_CID_WHITE_BALANCE_TEMPERATURE
 (
V4L2_CID_BASE
+26)

	)

1171 
	#V4L2_CID_SHARPNESS
 (
V4L2_CID_BASE
+27)

	)

1172 
	#V4L2_CID_BACKLIGHT_COMPENSATION
 (
V4L2_CID_BASE
+28)

	)

1173 
	#V4L2_CID_CHROMA_AGC
 (
V4L2_CID_BASE
+29)

	)

1174 
	#V4L2_CID_COLOR_KILLER
 (
V4L2_CID_BASE
+30)

	)

1175 
	#V4L2_CID_COLORFX
 (
V4L2_CID_BASE
+31)

	)

1176 
	ev4l2_cﬁ‹fx
 {

1177 
	mV4L2_COLORFX_NONE
 = 0,

1178 
	mV4L2_COLORFX_BW
 = 1,

1179 
	mV4L2_COLORFX_SEPIA
 = 2,

1180 
	mV4L2_COLORFX_NEGATIVE
 = 3,

1181 
	mV4L2_COLORFX_EMBOSS
 = 4,

1182 
	mV4L2_COLORFX_SKETCH
 = 5,

1183 
	mV4L2_COLORFX_SKY_BLUE
 = 6,

1184 
	mV4L2_COLORFX_GRASS_GREEN
 = 7,

1185 
	mV4L2_COLORFX_SKIN_WHITEN
 = 8,

1186 
	mV4L2_COLORFX_VIVID
 = 9,

1188 
	#V4L2_CID_AUTOBRIGHTNESS
 (
V4L2_CID_BASE
+32)

	)

1189 
	#V4L2_CID_BAND_STOP_FILTER
 (
V4L2_CID_BASE
+33)

	)

1191 
	#V4L2_CID_ROTATE
 (
V4L2_CID_BASE
+34)

	)

1192 
	#V4L2_CID_BG_COLOR
 (
V4L2_CID_BASE
+35)

	)

1194 
	#V4L2_CID_CHROMA_GAIN
 (
V4L2_CID_BASE
+36)

	)

1196 
	#V4L2_CID_ILLUMINATORS_1
 (
V4L2_CID_BASE
+37)

	)

1197 
	#V4L2_CID_ILLUMINATORS_2
 (
V4L2_CID_BASE
+38)

	)

1199 
	#V4L2_CID_MIN_BUFFERS_FOR_CAPTURE
 (
V4L2_CID_BASE
+39)

	)

1200 
	#V4L2_CID_MIN_BUFFERS_FOR_OUTPUT
 (
V4L2_CID_BASE
+40)

	)

1203 
	#V4L2_CID_LASTP1
 (
V4L2_CID_BASE
+41)

	)

1208 
	#V4L2_CID_MPEG_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x900)

	)

1209 
	#V4L2_CID_MPEG_CLASS
 (
V4L2_CTRL_CLASS_MPEG
 | 1)

	)

1212 
	#V4L2_CID_MPEG_STREAM_TYPE
 (
V4L2_CID_MPEG_BASE
+0)

	)

1213 
	ev4l2_m≥g_°ªam_ty≥
 {

1214 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_PS
 = 0,

1215 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_TS
 = 1,

1216 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_SS
 = 2,

1217 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_DVD
 = 3,

1218 
	mV4L2_MPEG_STREAM_TYPE_MPEG1_VCD
 = 4,

1219 
	mV4L2_MPEG_STREAM_TYPE_MPEG2_SVCD
 = 5,

1221 
	#V4L2_CID_MPEG_STREAM_PID_PMT
 (
V4L2_CID_MPEG_BASE
+1)

	)

1222 
	#V4L2_CID_MPEG_STREAM_PID_AUDIO
 (
V4L2_CID_MPEG_BASE
+2)

	)

1223 
	#V4L2_CID_MPEG_STREAM_PID_VIDEO
 (
V4L2_CID_MPEG_BASE
+3)

	)

1224 
	#V4L2_CID_MPEG_STREAM_PID_PCR
 (
V4L2_CID_MPEG_BASE
+4)

	)

1225 
	#V4L2_CID_MPEG_STREAM_PES_ID_AUDIO
 (
V4L2_CID_MPEG_BASE
+5)

	)

1226 
	#V4L2_CID_MPEG_STREAM_PES_ID_VIDEO
 (
V4L2_CID_MPEG_BASE
+6)

	)

1227 
	#V4L2_CID_MPEG_STREAM_VBI_FMT
 (
V4L2_CID_MPEG_BASE
+7)

	)

1228 
	ev4l2_m≥g_°ªam_vbi_fmt
 {

1229 
	mV4L2_MPEG_STREAM_VBI_FMT_NONE
 = 0,

1230 
	mV4L2_MPEG_STREAM_VBI_FMT_IVTV
 = 1,

1234 
	#V4L2_CID_MPEG_AUDIO_SAMPLING_FREQ
 (
V4L2_CID_MPEG_BASE
+100)

	)

1235 
	ev4l2_m≥g_audio_ßm∂ög_‰eq
 {

1236 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_44100
 = 0,

1237 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_48000
 = 1,

1238 
	mV4L2_MPEG_AUDIO_SAMPLING_FREQ_32000
 = 2,

1240 
	#V4L2_CID_MPEG_AUDIO_ENCODING
 (
V4L2_CID_MPEG_BASE
+101)

	)

1241 
	ev4l2_m≥g_audio_ícodög
 {

1242 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_1
 = 0,

1243 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_2
 = 1,

1244 
	mV4L2_MPEG_AUDIO_ENCODING_LAYER_3
 = 2,

1245 
	mV4L2_MPEG_AUDIO_ENCODING_AAC
 = 3,

1246 
	mV4L2_MPEG_AUDIO_ENCODING_AC3
 = 4,

1248 
	#V4L2_CID_MPEG_AUDIO_L1_BITRATE
 (
V4L2_CID_MPEG_BASE
+102)

	)

1249 
	ev4l2_m≥g_audio_l1_bôøã
 {

1250 
	mV4L2_MPEG_AUDIO_L1_BITRATE_32K
 = 0,

1251 
	mV4L2_MPEG_AUDIO_L1_BITRATE_64K
 = 1,

1252 
	mV4L2_MPEG_AUDIO_L1_BITRATE_96K
 = 2,

1253 
	mV4L2_MPEG_AUDIO_L1_BITRATE_128K
 = 3,

1254 
	mV4L2_MPEG_AUDIO_L1_BITRATE_160K
 = 4,

1255 
	mV4L2_MPEG_AUDIO_L1_BITRATE_192K
 = 5,

1256 
	mV4L2_MPEG_AUDIO_L1_BITRATE_224K
 = 6,

1257 
	mV4L2_MPEG_AUDIO_L1_BITRATE_256K
 = 7,

1258 
	mV4L2_MPEG_AUDIO_L1_BITRATE_288K
 = 8,

1259 
	mV4L2_MPEG_AUDIO_L1_BITRATE_320K
 = 9,

1260 
	mV4L2_MPEG_AUDIO_L1_BITRATE_352K
 = 10,

1261 
	mV4L2_MPEG_AUDIO_L1_BITRATE_384K
 = 11,

1262 
	mV4L2_MPEG_AUDIO_L1_BITRATE_416K
 = 12,

1263 
	mV4L2_MPEG_AUDIO_L1_BITRATE_448K
 = 13,

1265 
	#V4L2_CID_MPEG_AUDIO_L2_BITRATE
 (
V4L2_CID_MPEG_BASE
+103)

	)

1266 
	ev4l2_m≥g_audio_l2_bôøã
 {

1267 
	mV4L2_MPEG_AUDIO_L2_BITRATE_32K
 = 0,

1268 
	mV4L2_MPEG_AUDIO_L2_BITRATE_48K
 = 1,

1269 
	mV4L2_MPEG_AUDIO_L2_BITRATE_56K
 = 2,

1270 
	mV4L2_MPEG_AUDIO_L2_BITRATE_64K
 = 3,

1271 
	mV4L2_MPEG_AUDIO_L2_BITRATE_80K
 = 4,

1272 
	mV4L2_MPEG_AUDIO_L2_BITRATE_96K
 = 5,

1273 
	mV4L2_MPEG_AUDIO_L2_BITRATE_112K
 = 6,

1274 
	mV4L2_MPEG_AUDIO_L2_BITRATE_128K
 = 7,

1275 
	mV4L2_MPEG_AUDIO_L2_BITRATE_160K
 = 8,

1276 
	mV4L2_MPEG_AUDIO_L2_BITRATE_192K
 = 9,

1277 
	mV4L2_MPEG_AUDIO_L2_BITRATE_224K
 = 10,

1278 
	mV4L2_MPEG_AUDIO_L2_BITRATE_256K
 = 11,

1279 
	mV4L2_MPEG_AUDIO_L2_BITRATE_320K
 = 12,

1280 
	mV4L2_MPEG_AUDIO_L2_BITRATE_384K
 = 13,

1282 
	#V4L2_CID_MPEG_AUDIO_L3_BITRATE
 (
V4L2_CID_MPEG_BASE
+104)

	)

1283 
	ev4l2_m≥g_audio_l3_bôøã
 {

1284 
	mV4L2_MPEG_AUDIO_L3_BITRATE_32K
 = 0,

1285 
	mV4L2_MPEG_AUDIO_L3_BITRATE_40K
 = 1,

1286 
	mV4L2_MPEG_AUDIO_L3_BITRATE_48K
 = 2,

1287 
	mV4L2_MPEG_AUDIO_L3_BITRATE_56K
 = 3,

1288 
	mV4L2_MPEG_AUDIO_L3_BITRATE_64K
 = 4,

1289 
	mV4L2_MPEG_AUDIO_L3_BITRATE_80K
 = 5,

1290 
	mV4L2_MPEG_AUDIO_L3_BITRATE_96K
 = 6,

1291 
	mV4L2_MPEG_AUDIO_L3_BITRATE_112K
 = 7,

1292 
	mV4L2_MPEG_AUDIO_L3_BITRATE_128K
 = 8,

1293 
	mV4L2_MPEG_AUDIO_L3_BITRATE_160K
 = 9,

1294 
	mV4L2_MPEG_AUDIO_L3_BITRATE_192K
 = 10,

1295 
	mV4L2_MPEG_AUDIO_L3_BITRATE_224K
 = 11,

1296 
	mV4L2_MPEG_AUDIO_L3_BITRATE_256K
 = 12,

1297 
	mV4L2_MPEG_AUDIO_L3_BITRATE_320K
 = 13,

1299 
	#V4L2_CID_MPEG_AUDIO_MODE
 (
V4L2_CID_MPEG_BASE
+105)

	)

1300 
	ev4l2_m≥g_audio_mode
 {

1301 
	mV4L2_MPEG_AUDIO_MODE_STEREO
 = 0,

1302 
	mV4L2_MPEG_AUDIO_MODE_JOINT_STEREO
 = 1,

1303 
	mV4L2_MPEG_AUDIO_MODE_DUAL
 = 2,

1304 
	mV4L2_MPEG_AUDIO_MODE_MONO
 = 3,

1306 
	#V4L2_CID_MPEG_AUDIO_MODE_EXTENSION
 (
V4L2_CID_MPEG_BASE
+106)

	)

1307 
	ev4l2_m≥g_audio_mode_exãnsi⁄
 {

1308 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_4
 = 0,

1309 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_8
 = 1,

1310 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_12
 = 2,

1311 
	mV4L2_MPEG_AUDIO_MODE_EXTENSION_BOUND_16
 = 3,

1313 
	#V4L2_CID_MPEG_AUDIO_EMPHASIS
 (
V4L2_CID_MPEG_BASE
+107)

	)

1314 
	ev4l2_m≥g_audio_emphasis
 {

1315 
	mV4L2_MPEG_AUDIO_EMPHASIS_NONE
 = 0,

1316 
	mV4L2_MPEG_AUDIO_EMPHASIS_50_DIV_15_uS
 = 1,

1317 
	mV4L2_MPEG_AUDIO_EMPHASIS_CCITT_J17
 = 2,

1319 
	#V4L2_CID_MPEG_AUDIO_CRC
 (
V4L2_CID_MPEG_BASE
+108)

	)

1320 
	ev4l2_m≥g_audio_¸c
 {

1321 
	mV4L2_MPEG_AUDIO_CRC_NONE
 = 0,

1322 
	mV4L2_MPEG_AUDIO_CRC_CRC16
 = 1,

1324 
	#V4L2_CID_MPEG_AUDIO_MUTE
 (
V4L2_CID_MPEG_BASE
+109)

	)

1325 
	#V4L2_CID_MPEG_AUDIO_AAC_BITRATE
 (
V4L2_CID_MPEG_BASE
+110)

	)

1326 
	#V4L2_CID_MPEG_AUDIO_AC3_BITRATE
 (
V4L2_CID_MPEG_BASE
+111)

	)

1327 
	ev4l2_m≥g_audio_ac3_bôøã
 {

1328 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_32K
 = 0,

1329 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_40K
 = 1,

1330 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_48K
 = 2,

1331 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_56K
 = 3,

1332 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_64K
 = 4,

1333 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_80K
 = 5,

1334 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_96K
 = 6,

1335 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_112K
 = 7,

1336 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_128K
 = 8,

1337 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_160K
 = 9,

1338 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_192K
 = 10,

1339 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_224K
 = 11,

1340 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_256K
 = 12,

1341 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_320K
 = 13,

1342 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_384K
 = 14,

1343 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_448K
 = 15,

1344 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_512K
 = 16,

1345 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_576K
 = 17,

1346 
	mV4L2_MPEG_AUDIO_AC3_BITRATE_640K
 = 18,

1350 
	#V4L2_CID_MPEG_VIDEO_ENCODING
 (
V4L2_CID_MPEG_BASE
+200)

	)

1351 
	ev4l2_m≥g_video_ícodög
 {

1352 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_1
 = 0,

1353 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_2
 = 1,

1354 
	mV4L2_MPEG_VIDEO_ENCODING_MPEG_4_AVC
 = 2,

1356 
	#V4L2_CID_MPEG_VIDEO_ASPECT
 (
V4L2_CID_MPEG_BASE
+201)

	)

1357 
	ev4l2_m≥g_video_a•e˘
 {

1358 
	mV4L2_MPEG_VIDEO_ASPECT_1x1
 = 0,

1359 
	mV4L2_MPEG_VIDEO_ASPECT_4x3
 = 1,

1360 
	mV4L2_MPEG_VIDEO_ASPECT_16x9
 = 2,

1361 
	mV4L2_MPEG_VIDEO_ASPECT_221x100
 = 3,

1363 
	#V4L2_CID_MPEG_VIDEO_B_FRAMES
 (
V4L2_CID_MPEG_BASE
+202)

	)

1364 
	#V4L2_CID_MPEG_VIDEO_GOP_SIZE
 (
V4L2_CID_MPEG_BASE
+203)

	)

1365 
	#V4L2_CID_MPEG_VIDEO_GOP_CLOSURE
 (
V4L2_CID_MPEG_BASE
+204)

	)

1366 
	#V4L2_CID_MPEG_VIDEO_PULLDOWN
 (
V4L2_CID_MPEG_BASE
+205)

	)

1367 
	#V4L2_CID_MPEG_VIDEO_BITRATE_MODE
 (
V4L2_CID_MPEG_BASE
+206)

	)

1368 
	ev4l2_m≥g_video_bôøã_mode
 {

1369 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_VBR
 = 0,

1370 
	mV4L2_MPEG_VIDEO_BITRATE_MODE_CBR
 = 1,

1372 
	#V4L2_CID_MPEG_VIDEO_BITRATE
 (
V4L2_CID_MPEG_BASE
+207)

	)

1373 
	#V4L2_CID_MPEG_VIDEO_BITRATE_PEAK
 (
V4L2_CID_MPEG_BASE
+208)

	)

1374 
	#V4L2_CID_MPEG_VIDEO_TEMPORAL_DECIMATION
 (
V4L2_CID_MPEG_BASE
+209)

	)

1375 
	#V4L2_CID_MPEG_VIDEO_MUTE
 (
V4L2_CID_MPEG_BASE
+210)

	)

1376 
	#V4L2_CID_MPEG_VIDEO_MUTE_YUV
 (
V4L2_CID_MPEG_BASE
+211)

	)

1377 
	#V4L2_CID_MPEG_VIDEO_DECODER_SLICE_INTERFACE
 (
V4L2_CID_MPEG_BASE
+212)

	)

1378 
	#V4L2_CID_MPEG_VIDEO_DECODER_MPEG4_DEBLOCK_FILTER
 (
V4L2_CID_MPEG_BASE
+213)

	)

1379 
	#V4L2_CID_MPEG_VIDEO_CYCLIC_INTRA_REFRESH_MB
 (
V4L2_CID_MPEG_BASE
+214)

	)

1380 
	#V4L2_CID_MPEG_VIDEO_FRAME_RC_ENABLE
 (
V4L2_CID_MPEG_BASE
+215)

	)

1381 
	#V4L2_CID_MPEG_VIDEO_HEADER_MODE
 (
V4L2_CID_MPEG_BASE
+216)

	)

1382 
	ev4l2_m≥g_video_hódî_mode
 {

1383 
	mV4L2_MPEG_VIDEO_HEADER_MODE_SEPARATE
 = 0,

1384 
	mV4L2_MPEG_VIDEO_HEADER_MODE_JOINED_WITH_1ST_FRAME
 = 1,

1387 
	#V4L2_CID_MPEG_VIDEO_MAX_REF_PIC
 (
V4L2_CID_MPEG_BASE
+217)

	)

1388 
	#V4L2_CID_MPEG_VIDEO_MB_RC_ENABLE
 (
V4L2_CID_MPEG_BASE
+218)

	)

1389 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_BYTES
 (
V4L2_CID_MPEG_BASE
+219)

	)

1390 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MAX_MB
 (
V4L2_CID_MPEG_BASE
+220)

	)

1391 
	#V4L2_CID_MPEG_VIDEO_MULTI_SLICE_MODE
 (
V4L2_CID_MPEG_BASE
+221)

	)

1392 
	ev4l2_m≥g_video_mu…i_¶i˚_mode
 {

1393 
	mV4L2_MPEG_VIDEO_MULTI_SLICE_MODE_SINGLE
 = 0,

1394 
	mV4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_MB
 = 1,

1395 
	mV4L2_MPEG_VIDEO_MULTI_SICE_MODE_MAX_BYTES
 = 2,

1397 
	#V4L2_CID_MPEG_VIDEO_VBV_SIZE
 (
V4L2_CID_MPEG_BASE
+222)

	)

1398 
	#V4L2_CID_MPEG_VIDEO_H263_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+300)

	)

1399 
	#V4L2_CID_MPEG_VIDEO_H263_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+301)

	)

1400 
	#V4L2_CID_MPEG_VIDEO_H263_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+302)

	)

1401 
	#V4L2_CID_MPEG_VIDEO_H263_MIN_QP
 (
V4L2_CID_MPEG_BASE
+303)

	)

1402 
	#V4L2_CID_MPEG_VIDEO_H263_MAX_QP
 (
V4L2_CID_MPEG_BASE
+304)

	)

1403 
	#V4L2_CID_MPEG_VIDEO_H264_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+350)

	)

1404 
	#V4L2_CID_MPEG_VIDEO_H264_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+351)

	)

1405 
	#V4L2_CID_MPEG_VIDEO_H264_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+352)

	)

1406 
	#V4L2_CID_MPEG_VIDEO_H264_MIN_QP
 (
V4L2_CID_MPEG_BASE
+353)

	)

1407 
	#V4L2_CID_MPEG_VIDEO_H264_MAX_QP
 (
V4L2_CID_MPEG_BASE
+354)

	)

1408 
	#V4L2_CID_MPEG_VIDEO_H264_8X8_TRANSFORM
 (
V4L2_CID_MPEG_BASE
+355)

	)

1409 
	#V4L2_CID_MPEG_VIDEO_H264_CPB_SIZE
 (
V4L2_CID_MPEG_BASE
+356)

	)

1410 
	#V4L2_CID_MPEG_VIDEO_H264_ENTROPY_MODE
 (
V4L2_CID_MPEG_BASE
+357)

	)

1411 
	ev4l2_m≥g_video_h264_íå›y_mode
 {

1412 
	mV4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CAVLC
 = 0,

1413 
	mV4L2_MPEG_VIDEO_H264_ENTROPY_MODE_CABAC
 = 1,

1415 
	#V4L2_CID_MPEG_VIDEO_H264_I_PERIOD
 (
V4L2_CID_MPEG_BASE
+358)

	)

1416 
	#V4L2_CID_MPEG_VIDEO_H264_LEVEL
 (
V4L2_CID_MPEG_BASE
+359)

	)

1417 
	ev4l2_m≥g_video_h264_Àvñ
 {

1418 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_0
 = 0,

1419 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1B
 = 1,

1420 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_1
 = 2,

1421 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_2
 = 3,

1422 
	mV4L2_MPEG_VIDEO_H264_LEVEL_1_3
 = 4,

1423 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_0
 = 5,

1424 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_1
 = 6,

1425 
	mV4L2_MPEG_VIDEO_H264_LEVEL_2_2
 = 7,

1426 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_0
 = 8,

1427 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_1
 = 9,

1428 
	mV4L2_MPEG_VIDEO_H264_LEVEL_3_2
 = 10,

1429 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_0
 = 11,

1430 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_1
 = 12,

1431 
	mV4L2_MPEG_VIDEO_H264_LEVEL_4_2
 = 13,

1432 
	mV4L2_MPEG_VIDEO_H264_LEVEL_5_0
 = 14,

1433 
	mV4L2_MPEG_VIDEO_H264_LEVEL_5_1
 = 15,

1435 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_ALPHA
 (
V4L2_CID_MPEG_BASE
+360)

	)

1436 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_BETA
 (
V4L2_CID_MPEG_BASE
+361)

	)

1437 
	#V4L2_CID_MPEG_VIDEO_H264_LOOP_FILTER_MODE
 (
V4L2_CID_MPEG_BASE
+362)

	)

1438 
	ev4l2_m≥g_video_h264_lo›_fûãr_mode
 {

1439 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_ENABLED
 = 0,

1440 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED
 = 1,

1441 
	mV4L2_MPEG_VIDEO_H264_LOOP_FILTER_MODE_DISABLED_AT_SLICE_BOUNDARY
 = 2,

1443 
	#V4L2_CID_MPEG_VIDEO_H264_PROFILE
 (
V4L2_CID_MPEG_BASE
+363)

	)

1444 
	ev4l2_m≥g_video_h264_¥ofûe
 {

1445 
	mV4L2_MPEG_VIDEO_H264_PROFILE_BASELINE
 = 0,

1446 
	mV4L2_MPEG_VIDEO_H264_PROFILE_CONSTRAINED_BASELINE
 = 1,

1447 
	mV4L2_MPEG_VIDEO_H264_PROFILE_MAIN
 = 2,

1448 
	mV4L2_MPEG_VIDEO_H264_PROFILE_EXTENDED
 = 3,

1449 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH
 = 4,

1450 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10
 = 5,

1451 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422
 = 6,

1452 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_PREDICTIVE
 = 7,

1453 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_10_INTRA
 = 8,

1454 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_422_INTRA
 = 9,

1455 
	mV4L2_MPEG_VIDEO_H264_PROFILE_HIGH_444_INTRA
 = 10,

1456 
	mV4L2_MPEG_VIDEO_H264_PROFILE_CAVLC_444_INTRA
 = 11,

1457 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_BASELINE
 = 12,

1458 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH
 = 13,

1459 
	mV4L2_MPEG_VIDEO_H264_PROFILE_SCALABLE_HIGH_INTRA
 = 14,

1460 
	mV4L2_MPEG_VIDEO_H264_PROFILE_STEREO_HIGH
 = 15,

1461 
	mV4L2_MPEG_VIDEO_H264_PROFILE_MULTIVIEW_HIGH
 = 16,

1463 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_HEIGHT
 (
V4L2_CID_MPEG_BASE
+364)

	)

1464 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_EXT_SAR_WIDTH
 (
V4L2_CID_MPEG_BASE
+365)

	)

1465 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_ENABLE
 (
V4L2_CID_MPEG_BASE
+366)

	)

1466 
	#V4L2_CID_MPEG_VIDEO_H264_VUI_SAR_IDC
 (
V4L2_CID_MPEG_BASE
+367)

	)

1467 
	ev4l2_m≥g_video_h264_vui_ßr_idc
 {

1468 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_UNSPECIFIED
 = 0,

1469 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_1x1
 = 1,

1470 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_12x11
 = 2,

1471 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_10x11
 = 3,

1472 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_16x11
 = 4,

1473 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_40x33
 = 5,

1474 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_24x11
 = 6,

1475 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_20x11
 = 7,

1476 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_32x11
 = 8,

1477 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_80x33
 = 9,

1478 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_18x11
 = 10,

1479 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_15x11
 = 11,

1480 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_64x33
 = 12,

1481 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_160x99
 = 13,

1482 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_4x3
 = 14,

1483 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_3x2
 = 15,

1484 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_2x1
 = 16,

1485 
	mV4L2_MPEG_VIDEO_H264_VUI_SAR_IDC_EXTENDED
 = 17,

1487 
	#V4L2_CID_MPEG_VIDEO_MPEG4_I_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+400)

	)

1488 
	#V4L2_CID_MPEG_VIDEO_MPEG4_P_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+401)

	)

1489 
	#V4L2_CID_MPEG_VIDEO_MPEG4_B_FRAME_QP
 (
V4L2_CID_MPEG_BASE
+402)

	)

1490 
	#V4L2_CID_MPEG_VIDEO_MPEG4_MIN_QP
 (
V4L2_CID_MPEG_BASE
+403)

	)

1491 
	#V4L2_CID_MPEG_VIDEO_MPEG4_MAX_QP
 (
V4L2_CID_MPEG_BASE
+404)

	)

1492 
	#V4L2_CID_MPEG_VIDEO_MPEG4_LEVEL
 (
V4L2_CID_MPEG_BASE
+405)

	)

1493 
	ev4l2_m≥g_video_m≥g4_Àvñ
 {

1494 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_0
 = 0,

1495 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_0B
 = 1,

1496 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_1
 = 2,

1497 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_2
 = 3,

1498 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_3
 = 4,

1499 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_3B
 = 5,

1500 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_4
 = 6,

1501 
	mV4L2_MPEG_VIDEO_MPEG4_LEVEL_5
 = 7,

1503 
	#V4L2_CID_MPEG_VIDEO_MPEG4_PROFILE
 (
V4L2_CID_MPEG_BASE
+406)

	)

1504 
	ev4l2_m≥g_video_m≥g4_¥ofûe
 {

1505 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE
 = 0,

1506 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_SIMPLE
 = 1,

1507 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_CORE
 = 2,

1508 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_SIMPLE_SCALABLE
 = 3,

1509 
	mV4L2_MPEG_VIDEO_MPEG4_PROFILE_ADVANCED_CODING_EFFICIENCY
 = 4,

1511 
	#V4L2_CID_MPEG_VIDEO_MPEG4_QPEL
 (
V4L2_CID_MPEG_BASE
+407)

	)

1514 
	#V4L2_CID_MPEG_CX2341X_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x1000)

	)

1515 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+0)

	)

1516 
	ev4l2_m≥g_cx2341x_video_•©ül_fûãr_mode
 {

1517 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_MANUAL
 = 0,

1518 
	mV4L2_MPEG_CX2341X_VIDEO_SPATIAL_FILTER_MODE_AUTO
 = 1,

1520 
	#V4L2_CID_MPEG_CX2341X_VIDEO_SPATIAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+1)

	)

1521 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+2)

	)

1522 
	ev4l2_m≥g_cx2341x_video_luma_•©ül_fûãr_ty≥
 {

1523 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

1524 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

1525 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_1D_VERT
 = 2,

1526 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_HV_SEPARABLE
 = 3,

1527 
	mV4L2_MPEG_CX2341X_VIDEO_LUMA_SPATIAL_FILTER_TYPE_2D_SYM_NON_SEPARABLE
 = 4,

1529 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+3)

	)

1530 
	ev4l2_m≥g_cx2341x_video_chroma_•©ül_fûãr_ty≥
 {

1531 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_OFF
 = 0,

1532 
	mV4L2_MPEG_CX2341X_VIDEO_CHROMA_SPATIAL_FILTER_TYPE_1D_HOR
 = 1,

1534 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE
 (
V4L2_CID_MPEG_CX2341X_BASE
+4)

	)

1535 
	ev4l2_m≥g_cx2341x_video_ãmp‹Æ_fûãr_mode
 {

1536 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_MANUAL
 = 0,

1537 
	mV4L2_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER_MODE_AUTO
 = 1,

1539 
	#V4L2_CID_MPEG_CX2341X_VIDEO_TEMPORAL_FILTER
 (
V4L2_CID_MPEG_CX2341X_BASE
+5)

	)

1540 
	#V4L2_CID_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE
 (
V4L2_CID_MPEG_CX2341X_BASE
+6)

	)

1541 
	ev4l2_m≥g_cx2341x_video_medün_fûãr_ty≥
 {

1542 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_OFF
 = 0,

1543 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR
 = 1,

1544 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_VERT
 = 2,

1545 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_HOR_VERT
 = 3,

1546 
	mV4L2_MPEG_CX2341X_VIDEO_MEDIAN_FILTER_TYPE_DIAG
 = 4,

1548 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+7)

	)

1549 
	#V4L2_CID_MPEG_CX2341X_VIDEO_LUMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+8)

	)

1550 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_BOTTOM
 (
V4L2_CID_MPEG_CX2341X_BASE
+9)

	)

1551 
	#V4L2_CID_MPEG_CX2341X_VIDEO_CHROMA_MEDIAN_FILTER_TOP
 (
V4L2_CID_MPEG_CX2341X_BASE
+10)

	)

1552 
	#V4L2_CID_MPEG_CX2341X_STREAM_INSERT_NAV_PACKETS
 (
V4L2_CID_MPEG_CX2341X_BASE
+11)

	)

1555 
	#V4L2_CID_MPEG_MFC51_BASE
 (
V4L2_CTRL_CLASS_MPEG
 | 0x1100)

	)

1557 
	#V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY
 (
V4L2_CID_MPEG_MFC51_BASE
+0)

	)

1558 
	#V4L2_CID_MPEG_MFC51_VIDEO_DECODER_H264_DISPLAY_DELAY_ENABLE
 (
V4L2_CID_MPEG_MFC51_BASE
+1)

	)

1559 
	#V4L2_CID_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE
 (
V4L2_CID_MPEG_MFC51_BASE
+2)

	)

1560 
	ev4l2_m≥g_mfc51_video_‰ame_skù_mode
 {

1561 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_DISABLED
 = 0,

1562 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_LEVEL_LIMIT
 = 1,

1563 
	mV4L2_MPEG_MFC51_VIDEO_FRAME_SKIP_MODE_BUF_LIMIT
 = 2,

1565 
	#V4L2_CID_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE
 (
V4L2_CID_MPEG_MFC51_BASE
+3)

	)

1566 
	ev4l2_m≥g_mfc51_video_f‹˚_‰ame_ty≥
 {

1567 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_DISABLED
 = 0,

1568 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_I_FRAME
 = 1,

1569 
	mV4L2_MPEG_MFC51_VIDEO_FORCE_FRAME_TYPE_NOT_CODED
 = 2,

1571 
	#V4L2_CID_MPEG_MFC51_VIDEO_PADDING
 (
V4L2_CID_MPEG_MFC51_BASE
+4)

	)

1572 
	#V4L2_CID_MPEG_MFC51_VIDEO_PADDING_YUV
 (
V4L2_CID_MPEG_MFC51_BASE
+5)

	)

1573 
	#V4L2_CID_MPEG_MFC51_VIDEO_RC_FIXED_TARGET_BIT
 (
V4L2_CID_MPEG_MFC51_BASE
+6)

	)

1574 
	#V4L2_CID_MPEG_MFC51_VIDEO_RC_REACTION_COEFF
 (
V4L2_CID_MPEG_MFC51_BASE
+7)

	)

1575 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_ACTIVITY
 (
V4L2_CID_MPEG_MFC51_BASE
+50)

	)

1576 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_DARK
 (
V4L2_CID_MPEG_MFC51_BASE
+51)

	)

1577 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_SMOOTH
 (
V4L2_CID_MPEG_MFC51_BASE
+52)

	)

1578 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_ADAPTIVE_RC_STATIC
 (
V4L2_CID_MPEG_MFC51_BASE
+53)

	)

1579 
	#V4L2_CID_MPEG_MFC51_VIDEO_H264_NUM_REF_PIC_FOR_P
 (
V4L2_CID_MPEG_MFC51_BASE
+54)

	)

1582 
	#V4L2_CID_CAMERA_CLASS_BASE
 (
V4L2_CTRL_CLASS_CAMERA
 | 0x900)

	)

1583 
	#V4L2_CID_CAMERA_CLASS
 (
V4L2_CTRL_CLASS_CAMERA
 | 1)

	)

1585 
	#V4L2_CID_EXPOSURE_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+1)

	)

1586 
	ev4l2_exposuª_auto_ty≥
 {

1587 
	mV4L2_EXPOSURE_AUTO
 = 0,

1588 
	mV4L2_EXPOSURE_MANUAL
 = 1,

1589 
	mV4L2_EXPOSURE_SHUTTER_PRIORITY
 = 2,

1590 
	mV4L2_EXPOSURE_APERTURE_PRIORITY
 = 3

1592 
	#V4L2_CID_EXPOSURE_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+2)

	)

1593 
	#V4L2_CID_EXPOSURE_AUTO_PRIORITY
 (
V4L2_CID_CAMERA_CLASS_BASE
+3)

	)

1595 
	#V4L2_CID_PAN_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+4)

	)

1596 
	#V4L2_CID_TILT_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+5)

	)

1597 
	#V4L2_CID_PAN_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+6)

	)

1598 
	#V4L2_CID_TILT_RESET
 (
V4L2_CID_CAMERA_CLASS_BASE
+7)

	)

1600 
	#V4L2_CID_PAN_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+8)

	)

1601 
	#V4L2_CID_TILT_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+9)

	)

1603 
	#V4L2_CID_FOCUS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+10)

	)

1604 
	#V4L2_CID_FOCUS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+11)

	)

1605 
	#V4L2_CID_FOCUS_AUTO
 (
V4L2_CID_CAMERA_CLASS_BASE
+12)

	)

1607 
	#V4L2_CID_ZOOM_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+13)

	)

1608 
	#V4L2_CID_ZOOM_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+14)

	)

1609 
	#V4L2_CID_ZOOM_CONTINUOUS
 (
V4L2_CID_CAMERA_CLASS_BASE
+15)

	)

1611 
	#V4L2_CID_PRIVACY
 (
V4L2_CID_CAMERA_CLASS_BASE
+16)

	)

1613 
	#V4L2_CID_IRIS_ABSOLUTE
 (
V4L2_CID_CAMERA_CLASS_BASE
+17)

	)

1614 
	#V4L2_CID_IRIS_RELATIVE
 (
V4L2_CID_CAMERA_CLASS_BASE
+18)

	)

1617 
	#V4L2_CID_FM_TX_CLASS_BASE
 (
V4L2_CTRL_CLASS_FM_TX
 | 0x900)

	)

1618 
	#V4L2_CID_FM_TX_CLASS
 (
V4L2_CTRL_CLASS_FM_TX
 | 1)

	)

1620 
	#V4L2_CID_RDS_TX_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 1)

	)

1621 
	#V4L2_CID_RDS_TX_PI
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 2)

	)

1622 
	#V4L2_CID_RDS_TX_PTY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 3)

	)

1623 
	#V4L2_CID_RDS_TX_PS_NAME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 5)

	)

1624 
	#V4L2_CID_RDS_TX_RADIO_TEXT
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 6)

	)

1626 
	#V4L2_CID_AUDIO_LIMITER_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 64)

	)

1627 
	#V4L2_CID_AUDIO_LIMITER_RELEASE_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 65)

	)

1628 
	#V4L2_CID_AUDIO_LIMITER_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 66)

	)

1630 
	#V4L2_CID_AUDIO_COMPRESSION_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 80)

	)

1631 
	#V4L2_CID_AUDIO_COMPRESSION_GAIN
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 81)

	)

1632 
	#V4L2_CID_AUDIO_COMPRESSION_THRESHOLD
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 82)

	)

1633 
	#V4L2_CID_AUDIO_COMPRESSION_ATTACK_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 83)

	)

1634 
	#V4L2_CID_AUDIO_COMPRESSION_RELEASE_TIME
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 84)

	)

1636 
	#V4L2_CID_PILOT_TONE_ENABLED
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 96)

	)

1637 
	#V4L2_CID_PILOT_TONE_DEVIATION
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 97)

	)

1638 
	#V4L2_CID_PILOT_TONE_FREQUENCY
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 98)

	)

1640 
	#V4L2_CID_TUNE_PREEMPHASIS
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 112)

	)

1641 
	ev4l2_¥ìmphasis
 {

1642 
	mV4L2_PREEMPHASIS_DISABLED
 = 0,

1643 
	mV4L2_PREEMPHASIS_50_uS
 = 1,

1644 
	mV4L2_PREEMPHASIS_75_uS
 = 2,

1646 
	#V4L2_CID_TUNE_POWER_LEVEL
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 113)

	)

1647 
	#V4L2_CID_TUNE_ANTENNA_CAPACITOR
 (
V4L2_CID_FM_TX_CLASS_BASE
 + 114)

	)

1650 
	#V4L2_CID_FLASH_CLASS_BASE
 (
V4L2_CTRL_CLASS_FLASH
 | 0x900)

	)

1651 
	#V4L2_CID_FLASH_CLASS
 (
V4L2_CTRL_CLASS_FLASH
 | 1)

	)

1653 
	#V4L2_CID_FLASH_LED_MODE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 1)

	)

1654 
	ev4l2_Êash_Àd_mode
 {

1655 
	mV4L2_FLASH_LED_MODE_NONE
,

1656 
	mV4L2_FLASH_LED_MODE_FLASH
,

1657 
	mV4L2_FLASH_LED_MODE_TORCH
,

1660 
	#V4L2_CID_FLASH_STROBE_SOURCE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 2)

	)

1661 
	ev4l2_Êash_°robe_sour˚
 {

1662 
	mV4L2_FLASH_STROBE_SOURCE_SOFTWARE
,

1663 
	mV4L2_FLASH_STROBE_SOURCE_EXTERNAL
,

1666 
	#V4L2_CID_FLASH_STROBE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 3)

	)

1667 
	#V4L2_CID_FLASH_STROBE_STOP
 (
V4L2_CID_FLASH_CLASS_BASE
 + 4)

	)

1668 
	#V4L2_CID_FLASH_STROBE_STATUS
 (
V4L2_CID_FLASH_CLASS_BASE
 + 5)

	)

1670 
	#V4L2_CID_FLASH_TIMEOUT
 (
V4L2_CID_FLASH_CLASS_BASE
 + 6)

	)

1671 
	#V4L2_CID_FLASH_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 7)

	)

1672 
	#V4L2_CID_FLASH_TORCH_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 8)

	)

1673 
	#V4L2_CID_FLASH_INDICATOR_INTENSITY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 9)

	)

1675 
	#V4L2_CID_FLASH_FAULT
 (
V4L2_CID_FLASH_CLASS_BASE
 + 10)

	)

1676 
	#V4L2_FLASH_FAULT_OVER_VOLTAGE
 (1 << 0)

	)

1677 
	#V4L2_FLASH_FAULT_TIMEOUT
 (1 << 1)

	)

1678 
	#V4L2_FLASH_FAULT_OVER_TEMPERATURE
 (1 << 2)

	)

1679 
	#V4L2_FLASH_FAULT_SHORT_CIRCUIT
 (1 << 3)

	)

1681 
	#V4L2_CID_FLASH_CHARGE
 (
V4L2_CID_FLASH_CLASS_BASE
 + 11)

	)

1682 
	#V4L2_CID_FLASH_READY
 (
V4L2_CID_FLASH_CLASS_BASE
 + 12)

	)

1687 
	sv4l2_tu√r
 {

1688 
__u32
 
	mödex
;

1689 
__u8
 
	m«me
[32];

1690 
v4l2_tu√r_ty≥
 
	mty≥
;

1691 
__u32
 
	mˇ∑bûôy
;

1692 
__u32
 
	møngñow
;

1693 
__u32
 
	møngehigh
;

1694 
__u32
 
	mrxsubch™s
;

1695 
__u32
 
	maudmode
;

1696 
__s32
 
	msig«l
;

1697 
__s32
 
	mafc
;

1698 
__u32
 
	mª£rved
[4];

1701 
	sv4l2_moduœt‹
 {

1702 
__u32
 
	mödex
;

1703 
__u8
 
	m«me
[32];

1704 
__u32
 
	mˇ∑bûôy
;

1705 
__u32
 
	møngñow
;

1706 
__u32
 
	møngehigh
;

1707 
__u32
 
	mtxsubch™s
;

1708 
__u32
 
	mª£rved
[4];

1712 
	#V4L2_TUNER_CAP_LOW
 0x0001

	)

1713 
	#V4L2_TUNER_CAP_NORM
 0x0002

	)

1714 
	#V4L2_TUNER_CAP_STEREO
 0x0010

	)

1715 
	#V4L2_TUNER_CAP_LANG2
 0x0020

	)

1716 
	#V4L2_TUNER_CAP_SAP
 0x0020

	)

1717 
	#V4L2_TUNER_CAP_LANG1
 0x0040

	)

1718 
	#V4L2_TUNER_CAP_RDS
 0x0080

	)

1719 
	#V4L2_TUNER_CAP_RDS_BLOCK_IO
 0x0100

	)

1720 
	#V4L2_TUNER_CAP_RDS_CONTROLS
 0x0200

	)

1723 
	#V4L2_TUNER_SUB_MONO
 0x0001

	)

1724 
	#V4L2_TUNER_SUB_STEREO
 0x0002

	)

1725 
	#V4L2_TUNER_SUB_LANG2
 0x0004

	)

1726 
	#V4L2_TUNER_SUB_SAP
 0x0004

	)

1727 
	#V4L2_TUNER_SUB_LANG1
 0x0008

	)

1728 
	#V4L2_TUNER_SUB_RDS
 0x0010

	)

1731 
	#V4L2_TUNER_MODE_MONO
 0x0000

	)

1732 
	#V4L2_TUNER_MODE_STEREO
 0x0001

	)

1733 
	#V4L2_TUNER_MODE_LANG2
 0x0002

	)

1734 
	#V4L2_TUNER_MODE_SAP
 0x0002

	)

1735 
	#V4L2_TUNER_MODE_LANG1
 0x0003

	)

1736 
	#V4L2_TUNER_MODE_LANG1_LANG2
 0x0004

	)

1738 
	sv4l2_‰equícy
 {

1739 
__u32
 
	mtu√r
;

1740 
v4l2_tu√r_ty≥
 
	mty≥
;

1741 
__u32
 
	m‰equícy
;

1742 
__u32
 
	mª£rved
[8];

1745 
	sv4l2_hw_‰eq_£ek
 {

1746 
__u32
 
	mtu√r
;

1747 
v4l2_tu√r_ty≥
 
	mty≥
;

1748 
__u32
 
	m£ek_upw¨d
;

1749 
__u32
 
	mwøp_¨ound
;

1750 
__u32
 
	m•acög
;

1751 
__u32
 
	mª£rved
[7];

1758 
	sv4l2_rds_d©a
 {

1759 
__u8
 
	mlsb
;

1760 
__u8
 
	mmsb
;

1761 
__u8
 
	mblock
;

1762 } 
__©åibuã__
 ((
∑cked
));

1764 
	#V4L2_RDS_BLOCK_MSK
 0x7

	)

1765 
	#V4L2_RDS_BLOCK_A
 0

	)

1766 
	#V4L2_RDS_BLOCK_B
 1

	)

1767 
	#V4L2_RDS_BLOCK_C
 2

	)

1768 
	#V4L2_RDS_BLOCK_D
 3

	)

1769 
	#V4L2_RDS_BLOCK_C_ALT
 4

	)

1770 
	#V4L2_RDS_BLOCK_INVALID
 7

	)

1772 
	#V4L2_RDS_BLOCK_CORRECTED
 0x40

	)

1773 
	#V4L2_RDS_BLOCK_ERROR
 0x80

	)

1778 
	sv4l2_audio
 {

1779 
__u32
 
	mödex
;

1780 
__u8
 
	m«me
[32];

1781 
__u32
 
	mˇ∑bûôy
;

1782 
__u32
 
	mmode
;

1783 
__u32
 
	mª£rved
[2];

1787 
	#V4L2_AUDCAP_STEREO
 0x00001

	)

1788 
	#V4L2_AUDCAP_AVL
 0x00002

	)

1791 
	#V4L2_AUDMODE_AVL
 0x00001

	)

1793 
	sv4l2_audioout
 {

1794 
__u32
 
	mödex
;

1795 
__u8
 
	m«me
[32];

1796 
__u32
 
	mˇ∑bûôy
;

1797 
__u32
 
	mmode
;

1798 
__u32
 
	mª£rved
[2];

1807 
	#V4L2_ENC_IDX_FRAME_I
 (0)

	)

1808 
	#V4L2_ENC_IDX_FRAME_P
 (1)

	)

1809 
	#V4L2_ENC_IDX_FRAME_B
 (2)

	)

1810 
	#V4L2_ENC_IDX_FRAME_MASK
 (0xf)

	)

1812 
	sv4l2_íc_idx_íåy
 {

1813 
__u64
 
	moff£t
;

1814 
__u64
 
	m±s
;

1815 
__u32
 
	mÀngth
;

1816 
__u32
 
	mÊags
;

1817 
__u32
 
	mª£rved
[2];

1820 
	#V4L2_ENC_IDX_ENTRIES
 (64)

	)

1821 
	sv4l2_íc_idx
 {

1822 
__u32
 
	míåõs
;

1823 
__u32
 
	míåõs_ˇp
;

1824 
__u32
 
	mª£rved
[4];

1825 
v4l2_íc_idx_íåy
 
	míåy
[
V4L2_ENC_IDX_ENTRIES
];

1829 
	#V4L2_ENC_CMD_START
 (0)

	)

1830 
	#V4L2_ENC_CMD_STOP
 (1)

	)

1831 
	#V4L2_ENC_CMD_PAUSE
 (2)

	)

1832 
	#V4L2_ENC_CMD_RESUME
 (3)

	)

1835 
	#V4L2_ENC_CMD_STOP_AT_GOP_END
 (1 << 0)

	)

1837 
	sv4l2_ícodî_cmd
 {

1838 
__u32
 
	mcmd
;

1839 
__u32
 
	mÊags
;

1842 
__u32
 
	md©a
[8];

1843 } 
	møw
;

1857 
	sv4l2_vbi_f‹m©
 {

1858 
__u32
 
	mßm∂ög_øã
;

1859 
__u32
 
	moff£t
;

1860 
__u32
 
	mßm∂es_≥r_löe
;

1861 
__u32
 
	mßm∂e_f‹m©
;

1862 
__s32
 
	m°¨t
[2];

1863 
__u32
 
	mcou¡
[2];

1864 
__u32
 
	mÊags
;

1865 
__u32
 
	mª£rved
[2];

1869 
	#V4L2_VBI_UNSYNC
 (1 << 0)

	)

1870 
	#V4L2_VBI_INTERLACED
 (1 << 1)

	)

1879 
	sv4l2_¶i˚d_vbi_f‹m©
 {

1880 
__u16
 
	m£rvi˚_£t
;

1885 
__u16
 
	m£rvi˚_löes
[2][24];

1886 
__u32
 
	mio_size
;

1887 
__u32
 
	mª£rved
[2];

1892 
	#V4L2_SLICED_TELETEXT_B
 (0x0001)

	)

1894 
	#V4L2_SLICED_VPS
 (0x0400)

	)

1896 
	#V4L2_SLICED_CAPTION_525
 (0x1000)

	)

1898 
	#V4L2_SLICED_WSS_625
 (0x4000)

	)

1900 
	#V4L2_SLICED_VBI_525
 (
V4L2_SLICED_CAPTION_525
)

	)

1901 
	#V4L2_SLICED_VBI_625
 (
V4L2_SLICED_TELETEXT_B
 | 
V4L2_SLICED_VPS
 | 
V4L2_SLICED_WSS_625
)

	)

1903 
	sv4l2_¶i˚d_vbi_ˇp
 {

1904 
__u16
 
	m£rvi˚_£t
;

1909 
__u16
 
	m£rvi˚_löes
[2][24];

1910 
v4l2_buf_ty≥
 
	mty≥
;

1911 
__u32
 
	mª£rved
[3];

1914 
	sv4l2_¶i˚d_vbi_d©a
 {

1915 
__u32
 
	mid
;

1916 
__u32
 
	mfõld
;

1917 
__u32
 
	mlöe
;

1918 
__u32
 
	mª£rved
;

1919 
__u8
 
	md©a
[48];

1939 
	#V4L2_MPEG_VBI_IVTV_TELETEXT_B
 (1)

	)

1940 
	#V4L2_MPEG_VBI_IVTV_CAPTION_525
 (4)

	)

1941 
	#V4L2_MPEG_VBI_IVTV_WSS_625
 (5)

	)

1942 
	#V4L2_MPEG_VBI_IVTV_VPS
 (7)

	)

1944 
	sv4l2_m≥g_vbi_ôv0_löe
 {

1945 
__u8
 
	mid
;

1946 
__u8
 
	md©a
[42];

1947 } 
__©åibuã__
 ((
∑cked
));

1949 
	sv4l2_m≥g_vbi_ôv0
 {

1950 
__À32
 
	mlöemask
[2];

1951 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[35];

1952 } 
__©åibuã__
 ((
∑cked
));

1954 
	sv4l2_m≥g_vbi_ITV0
 {

1955 
v4l2_m≥g_vbi_ôv0_löe
 
	mlöe
[36];

1956 } 
__©åibuã__
 ((
∑cked
));

1958 
	#V4L2_MPEG_VBI_IVTV_MAGIC0
 "ôv0"

	)

1959 
	#V4L2_MPEG_VBI_IVTV_MAGIC1
 "ITV0"

	)

1961 
	sv4l2_m≥g_vbi_fmt_ivtv
 {

1962 
__u8
 
	mmagic
[4];

1964 
v4l2_m≥g_vbi_ôv0
 
	môv0
;

1965 
v4l2_m≥g_vbi_ITV0
 
	mITV0
;

1967 } 
__©åibuã__
 ((
∑cked
));

1980 
	sv4l2_∂™e_pix_f‹m©
 {

1981 
__u32
 
	msizeimage
;

1982 
__u16
 
	mbyã•îlöe
;

1983 
__u16
 
	mª£rved
[7];

1984 } 
__©åibuã__
 ((
∑cked
));

1996 
	sv4l2_pix_f‹m©_m∂™e
 {

1997 
__u32
 
	mwidth
;

1998 
__u32
 
	mheight
;

1999 
__u32
 
	mpixñf‹m©
;

2000 
v4l2_fõld
 
	mfõld
;

2001 
v4l2_cﬁ‹•a˚
 
	mcﬁ‹•a˚
;

2003 
v4l2_∂™e_pix_f‹m©
 
	m∂™e_fmt
[
VIDEO_MAX_PLANES
];

2004 
__u8
 
	mnum_∂™es
;

2005 
__u8
 
	mª£rved
[11];

2006 } 
__©åibuã__
 ((
∑cked
));

2018 
	sv4l2_f‹m©
 {

2019 
v4l2_buf_ty≥
 
	mty≥
;

2021 
v4l2_pix_f‹m©
 
	mpix
;

2022 
v4l2_pix_f‹m©_m∂™e
 
	mpix_mp
;

2023 
v4l2_wödow
 
	mwö
;

2024 
v4l2_vbi_f‹m©
 
	mvbi
;

2025 
v4l2_¶i˚d_vbi_f‹m©
 
	m¶i˚d
;

2026 
__u8
 
	møw_d©a
[200];

2027 } 
	mfmt
;

2032 
	sv4l2_°ªam∑rm
 {

2033 
v4l2_buf_ty≥
 
	mty≥
;

2035 
v4l2_ˇ±uª∑rm
 
	mˇ±uª
;

2036 
v4l2_ouçuç¨m
 
	mouçut
;

2037 
__u8
 
	møw_d©a
[200];

2038 } 
	m∑rm
;

2045 
	#V4L2_EVENT_ALL
 0

	)

2046 
	#V4L2_EVENT_VSYNC
 1

	)

2047 
	#V4L2_EVENT_EOS
 2

	)

2048 
	#V4L2_EVENT_CTRL
 3

	)

2049 
	#V4L2_EVENT_FRAME_SYNC
 4

	)

2050 
	#V4L2_EVENT_PRIVATE_START
 0x08000000

	)

2053 
	sv4l2_evít_vsync
 {

2055 
__u8
 
	mfõld
;

2056 } 
__©åibuã__
 ((
∑cked
));

2059 
	#V4L2_EVENT_CTRL_CH_VALUE
 (1 << 0)

	)

2060 
	#V4L2_EVENT_CTRL_CH_FLAGS
 (1 << 1)

	)

2062 
	sv4l2_evít_˘æ
 {

2063 
__u32
 
	mch™ges
;

2064 
__u32
 
	mty≥
;

2066 
__s32
 
	mvÆue
;

2067 
__s64
 
	mvÆue64
;

2069 
__u32
 
	mÊags
;

2070 
__s32
 
	mmöimum
;

2071 
__s32
 
	mmaximum
;

2072 
__s32
 
	m°ï
;

2073 
__s32
 
	mdeÁu…_vÆue
;

2076 
	sv4l2_evít_‰ame_sync
 {

2077 
__u32
 
	m‰ame_£quí˚
;

2080 
	sv4l2_evít
 {

2081 
__u32
 
	mty≥
;

2083 
v4l2_evít_vsync
 
	mvsync
;

2084 
v4l2_evít_˘æ
 
	m˘æ
;

2085 
v4l2_evít_‰ame_sync
 
	m‰ame_sync
;

2086 
__u8
 
	md©a
[64];

2087 } 
	mu
;

2088 
__u32
 
	m≥ndög
;

2089 
__u32
 
	m£quí˚
;

2090 
time•ec
 
	mtime°amp
;

2091 
__u32
 
	mid
;

2092 
__u32
 
	mª£rved
[8];

2095 
	#V4L2_EVENT_SUB_FL_SEND_INITIAL
 (1 << 0)

	)

2096 
	#V4L2_EVENT_SUB_FL_ALLOW_FEEDBACK
 (1 << 1)

	)

2098 
	sv4l2_evít_subs¸ùti⁄
 {

2099 
__u32
 
	mty≥
;

2100 
__u32
 
	mid
;

2101 
__u32
 
	mÊags
;

2102 
__u32
 
	mª£rved
[5];

2114 
	#V4L2_CHIP_MATCH_HOST
 0

	)

2115 
	#V4L2_CHIP_MATCH_I2C_DRIVER
 1

	)

2116 
	#V4L2_CHIP_MATCH_I2C_ADDR
 2

	)

2117 
	#V4L2_CHIP_MATCH_AC97
 3

	)

2119 
	sv4l2_dbg_m©ch
 {

2120 
__u32
 
	mty≥
;

2122 
__u32
 
	maddr
;

2123 
	m«me
[32];

2125 } 
__©åibuã__
 ((
∑cked
));

2127 
	sv4l2_dbg_ªgi°î
 {

2128 
v4l2_dbg_m©ch
 
	mm©ch
;

2129 
__u32
 
	msize
;

2130 
__u64
 
	mªg
;

2131 
__u64
 
	mvÆ
;

2132 } 
__©åibuã__
 ((
∑cked
));

2135 
	sv4l2_dbg_chù_idít
 {

2136 
v4l2_dbg_m©ch
 
	mm©ch
;

2137 
__u32
 
	midít
;

2138 
__u32
 
	mªvisi⁄
;

2139 } 
__©åibuã__
 ((
∑cked
));

2150 
	sv4l2_¸óã_buf„rs
 {

2151 
__u32
 
	mödex
;

2152 
__u32
 
	mcou¡
;

2153 
v4l2_mem‹y
 
	mmem‹y
;

2154 
v4l2_f‹m©
 
	mf‹m©
;

2155 
__u32
 
	mª£rved
[8];

2162 
	#VIDIOC_QUERYCAP
 
	`_IOR
('V', 0, 
v4l2_ˇ∑bûôy
)

	)

2163 
	#VIDIOC_RESERVED
 
	`_IO
('V', 1)

	)

2164 
	#VIDIOC_ENUM_FMT
 
	`_IOWR
('V', 2, 
v4l2_fmtdesc
)

	)

2165 
	#VIDIOC_G_FMT
 
	`_IOWR
('V', 4, 
v4l2_f‹m©
)

	)

2166 
	#VIDIOC_S_FMT
 
	`_IOWR
('V', 5, 
v4l2_f‹m©
)

	)

2167 
	#VIDIOC_REQBUFS
 
	`_IOWR
('V', 8, 
v4l2_ªque°buf„rs
)

	)

2168 
	#VIDIOC_QUERYBUF
 
	`_IOWR
('V', 9, 
v4l2_buf„r
)

	)

2169 
	#VIDIOC_G_FBUF
 
	`_IOR
('V', 10, 
v4l2_‰amebuf„r
)

	)

2170 
	#VIDIOC_S_FBUF
 
	`_IOW
('V', 11, 
v4l2_‰amebuf„r
)

	)

2171 
	#VIDIOC_OVERLAY
 
	`_IOW
('V', 14, )

	)

2172 
	#VIDIOC_QBUF
 
	`_IOWR
('V', 15, 
v4l2_buf„r
)

	)

2173 
	#VIDIOC_DQBUF
 
	`_IOWR
('V', 17, 
v4l2_buf„r
)

	)

2174 
	#VIDIOC_STREAMON
 
	`_IOW
('V', 18, )

	)

2175 
	#VIDIOC_STREAMOFF
 
	`_IOW
('V', 19, )

	)

2176 
	#VIDIOC_G_PARM
 
	`_IOWR
('V', 21, 
v4l2_°ªam∑rm
)

	)

2177 
	#VIDIOC_S_PARM
 
	`_IOWR
('V', 22, 
v4l2_°ªam∑rm
)

	)

2178 
	#VIDIOC_G_STD
 
	`_IOR
('V', 23, 
v4l2_°d_id
)

	)

2179 
	#VIDIOC_S_STD
 
	`_IOW
('V', 24, 
v4l2_°d_id
)

	)

2180 
	#VIDIOC_ENUMSTD
 
	`_IOWR
('V', 25, 
v4l2_°™d¨d
)

	)

2181 
	#VIDIOC_ENUMINPUT
 
	`_IOWR
('V', 26, 
v4l2_öput
)

	)

2182 
	#VIDIOC_G_CTRL
 
	`_IOWR
('V', 27, 
v4l2_c⁄åﬁ
)

	)

2183 
	#VIDIOC_S_CTRL
 
	`_IOWR
('V', 28, 
v4l2_c⁄åﬁ
)

	)

2184 
	#VIDIOC_G_TUNER
 
	`_IOWR
('V', 29, 
v4l2_tu√r
)

	)

2185 
	#VIDIOC_S_TUNER
 
	`_IOW
('V', 30, 
v4l2_tu√r
)

	)

2186 
	#VIDIOC_G_AUDIO
 
	`_IOR
('V', 33, 
v4l2_audio
)

	)

2187 
	#VIDIOC_S_AUDIO
 
	`_IOW
('V', 34, 
v4l2_audio
)

	)

2188 
	#VIDIOC_QUERYCTRL
 
	`_IOWR
('V', 36, 
v4l2_quîy˘æ
)

	)

2189 
	#VIDIOC_QUERYMENU
 
	`_IOWR
('V', 37, 
v4l2_quîymíu
)

	)

2190 
	#VIDIOC_G_INPUT
 
	`_IOR
('V', 38, )

	)

2191 
	#VIDIOC_S_INPUT
 
	`_IOWR
('V', 39, )

	)

2192 
	#VIDIOC_G_OUTPUT
 
	`_IOR
('V', 46, )

	)

2193 
	#VIDIOC_S_OUTPUT
 
	`_IOWR
('V', 47, )

	)

2194 
	#VIDIOC_ENUMOUTPUT
 
	`_IOWR
('V', 48, 
v4l2_ouçut
)

	)

2195 
	#VIDIOC_G_AUDOUT
 
	`_IOR
('V', 49, 
v4l2_audioout
)

	)

2196 
	#VIDIOC_S_AUDOUT
 
	`_IOW
('V', 50, 
v4l2_audioout
)

	)

2197 
	#VIDIOC_G_MODULATOR
 
	`_IOWR
('V', 54, 
v4l2_moduœt‹
)

	)

2198 
	#VIDIOC_S_MODULATOR
 
	`_IOW
('V', 55, 
v4l2_moduœt‹
)

	)

2199 
	#VIDIOC_G_FREQUENCY
 
	`_IOWR
('V', 56, 
v4l2_‰equícy
)

	)

2200 
	#VIDIOC_S_FREQUENCY
 
	`_IOW
('V', 57, 
v4l2_‰equícy
)

	)

2201 
	#VIDIOC_CROPCAP
 
	`_IOWR
('V', 58, 
v4l2_¸›ˇp
)

	)

2202 
	#VIDIOC_G_CROP
 
	`_IOWR
('V', 59, 
v4l2_¸›
)

	)

2203 
	#VIDIOC_S_CROP
 
	`_IOW
('V', 60, 
v4l2_¸›
)

	)

2204 
	#VIDIOC_G_JPEGCOMP
 
	`_IOR
('V', 61, 
v4l2_j≥gcom¥essi⁄
)

	)

2205 
	#VIDIOC_S_JPEGCOMP
 
	`_IOW
('V', 62, 
v4l2_j≥gcom¥essi⁄
)

	)

2206 
	#VIDIOC_QUERYSTD
 
	`_IOR
('V', 63, 
v4l2_°d_id
)

	)

2207 
	#VIDIOC_TRY_FMT
 
	`_IOWR
('V', 64, 
v4l2_f‹m©
)

	)

2208 
	#VIDIOC_ENUMAUDIO
 
	`_IOWR
('V', 65, 
v4l2_audio
)

	)

2209 
	#VIDIOC_ENUMAUDOUT
 
	`_IOWR
('V', 66, 
v4l2_audioout
)

	)

2210 
	#VIDIOC_G_PRIORITY
 
	`_IOR
('V', 67, 
v4l2_¥i‹ôy
)

	)

2211 
	#VIDIOC_S_PRIORITY
 
	`_IOW
('V', 68, 
v4l2_¥i‹ôy
)

	)

2212 
	#VIDIOC_G_SLICED_VBI_CAP
 
	`_IOWR
('V', 69, 
v4l2_¶i˚d_vbi_ˇp
)

	)

2213 
	#VIDIOC_LOG_STATUS
 
	`_IO
('V', 70)

	)

2214 
	#VIDIOC_G_EXT_CTRLS
 
	`_IOWR
('V', 71, 
v4l2_ext_c⁄åﬁs
)

	)

2215 
	#VIDIOC_S_EXT_CTRLS
 
	`_IOWR
('V', 72, 
v4l2_ext_c⁄åﬁs
)

	)

2216 
	#VIDIOC_TRY_EXT_CTRLS
 
	`_IOWR
('V', 73, 
v4l2_ext_c⁄åﬁs
)

	)

2218 
	#VIDIOC_ENUM_FRAMESIZES
 
	`_IOWR
('V', 74, 
v4l2_‰msizìnum
)

	)

2219 
	#VIDIOC_ENUM_FRAMEINTERVALS
 
	`_IOWR
('V', 75, 
v4l2_‰mivÆíum
)

	)

2220 
	#VIDIOC_G_ENC_INDEX
 
	`_IOR
('V', 76, 
v4l2_íc_idx
)

	)

2221 
	#VIDIOC_ENCODER_CMD
 
	`_IOWR
('V', 77, 
v4l2_ícodî_cmd
)

	)

2222 
	#VIDIOC_TRY_ENCODER_CMD
 
	`_IOWR
('V', 78, 
v4l2_ícodî_cmd
)

	)

2229 
	#VIDIOC_DBG_S_REGISTER
 
	`_IOW
('V', 79, 
v4l2_dbg_ªgi°î
)

	)

2230 
	#VIDIOC_DBG_G_REGISTER
 
	`_IOWR
('V', 80, 
v4l2_dbg_ªgi°î
)

	)

2234 
	#VIDIOC_DBG_G_CHIP_IDENT
 
	`_IOWR
('V', 81, 
v4l2_dbg_chù_idít
)

	)

2237 
	#VIDIOC_S_HW_FREQ_SEEK
 
	`_IOW
('V', 82, 
v4l2_hw_‰eq_£ek
)

	)

2238 
	#VIDIOC_ENUM_DV_PRESETS
 
	`_IOWR
('V', 83, 
v4l2_dv_íum_¥e£t
)

	)

2239 
	#VIDIOC_S_DV_PRESET
 
	`_IOWR
('V', 84, 
v4l2_dv_¥e£t
)

	)

2240 
	#VIDIOC_G_DV_PRESET
 
	`_IOWR
('V', 85, 
v4l2_dv_¥e£t
)

	)

2241 
	#VIDIOC_QUERY_DV_PRESET
 
	`_IOR
('V', 86, 
v4l2_dv_¥e£t
)

	)

2242 
	#VIDIOC_S_DV_TIMINGS
 
	`_IOWR
('V', 87, 
v4l2_dv_timögs
)

	)

2243 
	#VIDIOC_G_DV_TIMINGS
 
	`_IOWR
('V', 88, 
v4l2_dv_timögs
)

	)

2244 
	#VIDIOC_DQEVENT
 
	`_IOR
('V', 89, 
v4l2_evít
)

	)

2245 
	#VIDIOC_SUBSCRIBE_EVENT
 
	`_IOW
('V', 90, 
v4l2_evít_subs¸ùti⁄
)

	)

2246 
	#VIDIOC_UNSUBSCRIBE_EVENT
 
	`_IOW
('V', 91, 
v4l2_evít_subs¸ùti⁄
)

	)

2250 
	#VIDIOC_CREATE_BUFS
 
	`_IOWR
('V', 92, 
v4l2_¸óã_buf„rs
)

	)

2251 
	#VIDIOC_PREPARE_BUF
 
	`_IOWR
('V', 93, 
v4l2_buf„r
)

	)

2256 
	#BASE_VIDIOC_PRIVATE
 192

	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
40
1155
Ori_code/app.c
app.c
app_notOK.c
dualcpu_separateconfig/configured_CE_subsystem/ceapp.c
dualcpu_separateconfig/configured_CE_subsystem/ceapp.h
dualcpu_separateconfig/enduser_app/app.c
dualcpu_separateconfig_dll/configured_CE_subsystem/ceapp.c
dualcpu_separateconfig_dll/enduser_app/app.c
main_BIOS.c
main_native.c
package/cfg/bin/ti_platforms_evm3530/app_local_xv5T.c
package/cfg/bin/ti_platforms_evm3530/app_local_xv5T.h
package/cfg/bin/ti_platforms_evm3530/app_remote_xv5T.c
package/cfg/bin/ti_platforms_evm3530/app_remote_xv5T.h
package/package.defs.h
package/package_ti.sdo.ce.examples.apps.video_copy.c
smain.h
/usr/include/dlfcn.h
/usr/include/fcntl.h
/usr/include/linux/types.h
/usr/include/linux/videodev2.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/ioctl.h
/usr/include/linux/posix_types.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/linux/stddef.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
